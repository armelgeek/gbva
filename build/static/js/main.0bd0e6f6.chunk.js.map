{"version":3,"sources":["reportWebVitals.js","@adminlte/Sidebar/NavTree.jsx","@adminlte/Sidebar/NavItem.jsx","@adminlte/adminlte/Content/Footer.jsx","constants/routes.js","@adminlte/AdminLTE.jsx","store/frommagasin/constants.js","store/frommagasin/actions/frommagasin.js","hooks/useFromMagasin.js","utils/functions.js","store/functions/function.js","components/composants/vendeur/fromMagasin/item.jsx","components/composants/vendeur/fromMagasin/FromMagasinItemControl.js","components/composants/vendeur/fromMagasin/FromMagasinItemPartial.js","components/composants/vendeur/fromMagasin/ItaNewInputDose.jsx","store/frommagasin/actions/itanewMagasin.js","components/composants/vendeur/fromMagasin/PhytoConditionnementInput.jsx","components/composants/vendeur/fromMagasin/SovaxInputDose.jsx","components/composants/vendeur/fromMagasin/FromMagasinItem.js","utils/crud/actionTypesFor.js","utils/crud/utils/makeScope.js","utils/crud/utils/assertNotArray.js","utils/crud/constants.js","utils/crud/actionCreatorsFor.js","utils/crud/getDefaultConfig.js","utils/crud/reducers/common/reducersFor.js","utils/crud/reducers/invariants.js","utils/crud/reducers/list/store/remove.js","utils/crud/utils/wrapArray.js","utils/crud/reducers/list/store.js","utils/crud/reducers/list/store/assert.js","utils/crud/reducers/list/store/merge.js","utils/crud/reducers/list/invariants.js","utils/crud/reducers/list/create/error.js","utils/crud/reducers/common/create/start.js","utils/crud/reducers/list/create/start.js","utils/crud/reducers/list/create/success.js","utils/crud/utils/findByKey.js","utils/crud/reducers/list/delete/error.js","utils/crud/reducers/common/delete/start.js","utils/crud/reducers/list/delete/start.js","utils/crud/reducers/list/delete/success.js","utils/crud/utils/assertAllHaveKeys.js","utils/crud/reducers/list/fetch/success.js","utils/crud/reducers/common/update/error.js","utils/crud/reducers/list/update/error.js","utils/crud/reducers/common/update/start.js","utils/crud/reducers/list/update/start.js","utils/crud/reducers/list/update/success.js","utils/crud/reducers/list/reducersFor.js","utils/crud/reducers/list.js","utils/crud/reducers/map/store.js","utils/crud/reducers/map/store/assert.js","utils/crud/reducers/map/store/merge.js","utils/crud/reducers/map/store/remove.js","utils/crud/reducers/map/invariants.js","utils/crud/reducers/map/create/error.js","utils/crud/reducers/map/create/start.js","utils/crud/reducers/map/create/success.js","utils/crud/reducers/map/delete/error.js","utils/crud/reducers/map/delete/start.js","utils/crud/reducers/map/delete/success.js","utils/crud/reducers/map/fetch/success.js","utils/crud/reducers/map/update/error.js","utils/crud/reducers/map/update/start.js","utils/crud/reducers/map/update/success.js","utils/crud/reducers/map/reducersFor.js","utils/crud/reducers/map.js","utils/crud/index.js","utils/api.js","utils/lib/actions.js","utils/lib/reducer.js","utils/lib/call.js","constants/lang.js","components/composants/vendeur/fromMagasin/FromMagasin.js","context.js","store/actions/commandes.js","components/composants/vendeur/fromMagasin/Horloge.jsx","filters/searchByNameAndFournisseur.js","filters/searchByFournisseur.js","filters/searchByName.js","components/composants/vendeur/fromMagasin/product.jsx","components/composants/vendeur/index.jsx","App.jsx","constants/actions.js","components/ApprovItem.jsx","store/basket/actions/stock.js","@adminlte/adminlte/Content/index.jsx","@adminlte/adminlte/Content/ActiveLink.jsx","@adminlte/adminlte/Content/ContentHeader.jsx","@adminlte/adminlte/Content/Page.jsx","components/Approv.jsx","utils/form/field/components/TextInput.jsx","utils/form/field/components/RadioButton.jsx","utils/form/field/components/SelectButton.jsx","utils/form/field/components/TextareaInput.jsx","utils/form/field/components/TagInput.jsx","utils/form/field/components/DateInput.jsx","utils/form/field/components/SelectObject.jsx","utils/form/field/components/RadioObject.jsx","utils/form/field/components/RadioProduct.jsx","utils/form/field/components/PasswordInput.jsx","utils/form/field/components/CheckBoxInput.jsx","utils/form/field/components/NumberInput.jsx","utils/form/field/Field.js","utils/form/index.js","components/composants/AddProd.jsx","components/composants/Approvis/detail.jsx","utils/admin/DataTable.js","components/composants/Approvis/DeleteApprov.js","components/composants/Approvis/list.jsx","store/actions/approv.js","components/composants/BSortie.jsx","store/basket/constants.js","components/fromDepot/DeleteFromDepot.js","components/composants/Credit.jsx","components/composants/CreditVaccinateur.jsx","components/composants/Detail.jsx","components/composants/DetailSortie.jsx","components/composants/Direct.jsx","components/composants/Journal.jsx","components/composants/ParametrageSuppl.jsx","components/composants/Perime.jsx","store/actions/products.js","components/composants/product/validation.js","components/composants/product/Guide.jsx","utils/admin/Resource/Success.jsx","utils/admin/Resource/Error.jsx","components/composants/product/create.jsx","components/composants/product/detail.jsx","components/composants/product/edit.jsx","utils/admin/Resource/Drop.jsx","utils/admin/Nav.js","utils/admin/Resource/CrudAction.jsx","components/composants/product/ProductAll.jsx","components/composants/ProductByCategory.jsx","components/composants/ProductByFournisseur.jsx","components/composants/Rupture.jsx","components/Entree.jsx","constants/roles.js","store/actions/user.js","store/approvis/constants.js","components/Header.jsx","store/approvis/actions/approvis.js","hooks/useApprov.js","components/composants/Approvis/ProductItemApprov.jsx","components/composants/Approvis/ApprovisionnementItemControl.js","components/composants/Approvis/ApprovisionnementItem.js","components/composants/Approvis/Approvisionnement.js","components/FactureProduct.js","components/NouvelleFacture.jsx","components/parametres/category/validation.js","components/parametres/category/CategoryInput.jsx","components/parametres/category/AddCategory.jsx","components/parametres/category/Categories.jsx","components/parametres/fournisseurs/validation.js","components/parametres/fournisseurs/FournisseurInput.jsx","components/parametres/fournisseurs/AddFournisseur.jsx","components/parametres/fournisseurs/Fournisseurs.jsx","components/parametres/vaccinateur/validation.js","components/parametres/vaccinateur/VaccinateurInput.jsx","components/parametres/vaccinateur/AddVaccinateur.jsx","components/parametres/vaccinateur/Vaccinateurs.jsx","components/parametres/emprunter/validation.js","components/parametres/emprunter/EmprunterInput.jsx","components/parametres/emprunter/AddEmprunter.jsx","components/parametres/emprunter/Emprunters.jsx","components/Parametres.jsx","components/Sortie.jsx","utils/context/data-context.js","store/fromdepot/constants.js","store/fromdepot/actions/fromdepot.js","components/fromDepot/FromDepotItemControl.js","hooks/useFromDepot.js","components/fromDepot/FromDepotItem.js","store/functions/function-depot.js","components/fromDepot/EditFromDepotItemControl.js","components/fromDepot/EditFromDepotItem.js","components/fromDepot/EditFromDepot.js","components/fromDepot/edit-item.jsx","components/fromDepot/EditSortie.js","hooks/useScrollTop.js","routes/PublicRoute.jsx","context/auth-context.js","components/auth/SignIn.jsx","components/auth/SignUp.jsx","routes/VendeurRoute.jsx","store/tomagasin/constants.js","store/tomagasin/actions/tomagasin.js","hooks/useDepotToMagasin.js","components/composants/admin/tomagasin/item.js","components/composants/admin/tomagasin/ToMagItemControl.js","components/composants/admin/tomagasin/ToMagItem.js","components/composants/admin/tomagasin/ToMag.js","components/composants/admin/tomagasin/product.js","components/composants/admin/index.jsx","components/composants/admin/tomagasin/DeleteToMagasin.js","components/composants/admin/tomagasin/list.js","components/composants/vendeur/fromMagasin/DeleteFromMagasin.js","components/composants/vendeur/fromMagasin/list.jsx","components/composants/admin/etat.jsx","components/composants/admin/magasin-vente.jsx","components/composants/vendeur/fromMagasin/DetailVendeur.jsx","components/admin/SideBarMenu.jsx","routes/AdminRoute.jsx","components/composants/Approvis/ApprovisionnementEditItemControl.js","components/composants/Approvis/ApprovisionnementEditItem.js","components/composants/Approvis/EditApprovisionnement.js","components/composants/Approvis/ProductItemEditApprov.jsx","components/composants/Approvis/editer.jsx","components/fromDepot/item.jsx","components/fromDepot/FromDepot.js","components/fromDepot/product.jsx","components/fromDepot/index.js","filters/flatify.js","filters/getByRangeDate.js","components/composants/journal/DateInterval.js","components/composants/journal/ItemsApprov.js","components/composants/journal/NoItemsApprov.js","components/composants/journal/LastStockApprov.js","components/composants/journal/MenuTdb.js","components/composants/journal/Facturation.js","components/composants/journal/NoItemsVente.js","components/composants/journal/ItemsVente.js","components/composants/journal/LastStockVente.js","components/composants/journal/VenteCBV.js","components/composants/journal/DepotVersMagasin.js","components/composants/admin/tomagasin/DepotToMagasinDetail.js","components/composants/vendeur/fromMagasin/DetailMagasinVente.js","components/composants/vendeur/fromMagasin/edit-item.jsx","components/composants/vendeur/fromMagasin/EditFromMagasinItemControl.js","components/composants/vendeur/fromMagasin/EditItem.js","components/composants/vendeur/fromMagasin/EditFromMag.js","components/composants/vendeur/fromMagasin/EditFromMagasin.js","components/composants/admin/tomagasin/EditToMagItemControl.js","components/composants/admin/tomagasin/EditItem.js","components/composants/admin/tomagasin/EditTo.js","components/composants/admin/tomagasin/edit-item.jsx","components/composants/admin/tomagasin/EditToMagasin.js","Routes.jsx","store/index.js","store/reducers/products.js","store/reducers/user.js","store/reducers/commandes.js","store/reducers/fournisseur.js","store/reducers/emprunteurs.js","store/reducers/vaccinateurs.js","store/reducers/category.js","store/reducers/approvis.js","store/reducers/parametres.js","store/basket/reducers/checkout.js","store/reducers/sortiedepot.js","store/reducers/index.js","store/reducers/undoTest.js","store/basket/reducers/basket.js","store/approvis/reducers/approvis.js","store/fromdepot/reducers/fromdepot.js","store/reducers/stock.js","store/tomagasin/reducers/tomagasin.js","store/frommagasin/reducers/frommagasin.js","theme.js","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavTree","title","route","isActive","useLocation","pathname","class","as","NavLink","to","NavItem","children","useState","href","className","style","display","Footer","TDB_DEPOT_VERS_MAGASIN","TDB_VENTE_CBV","TDB_FACTURES","CREATEPRODUCT","PRODUCTS","PERIME","RUPTURE","CREDIT","CREDITVACCINATEUR","DIRECT","PARAMETRES","PRODUCTBYFOURNISSEUR","PRODUCTBYCATEGORY","ENTREE","SORTIE","BONDESORTIE","NOUVELLEFACTURE","LISTAPPROV","SIGNIN","SIGNUP","VENDEUR","ADMIN","HISTORIQUESORTIECVA","HISTORIQUEVENTEVENDEUR","HISTORIQUEVENTEVENDEURVUEPARADMIN","ETATSTOCKMAGASIN","AdminLTE","this","props","navigation","homeTo","titleShort","searchbarFilter","length","role","React","PureComponent","defaultProps","browserTitle","theme","footer","sidebar","undefined","SET_FROM_MAGASIN_ITEMS","ADD_FROM_MAGASIN","REMOVE_FROM_TO_MAGASIN","CLEAR_FROM_MAGASIN","ADD_QTY_FROM_MAGASIN_ITEM","ADD_QTY_PORTION_FROM_MAGASIN_ITEM","ADD_QTY_NUMBER_FROM_MAGASIN_ITEM","ADD_QTY_PORTION_DOSE_UTA_NEW_FROM_MAGASIN_ITEM","ADD_QTY_PORTION_DOSE_SOVAX_FROM_MAGASIN_ITEM","ADD_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM","MINUS_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM","clearFromMagasin","type","useFromMagasin","frommagasin","dispatch","isItemFromMagasin","id","find","item","addFromMagasin","product","payload","removeFromMagasin","dispatchAddFromMagasin","displayDate","timestamp","date","Date","day","getDate","monthIndex","getMonth","year","getFullYear","displayMoney","n","Intl","NumberFormat","currency","format","strOp","str","toString","replace","toLowerCase","checkHasExistText","text","textCheck","includes","canBuyCCFromCva","quantityBruteCVA","quantityCCCVA","canBuyBruteFromCva","getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCC","isBiggerThanLastQuantityCC","qttByCC","isLowerThanLastQuantityCC","isSameOfLastQuantityCC","minusQuantityCc","quantityParProduct","notSatisfaisanteProductCommande","doseDefault","reinitQuantityCCCva","minusQuantityBruteCvaWhenQttCcIsEmpty","value","isSpecialProductHandle","condml","condsize","qttccpvente","prixqttccvente","hasCondVal","condval","minusCondML","notSatifyCommande","minusCondValWhenQttCcIsEmpty","ProductItem","frommagasins","useSelector","state","useDispatch","itemOnBasket","isEmptyBrute","useCallback","isEmptyCC","ListGroup","Item","width","border","background","borderLeft","boxShadow","height","name","fournisseur","disabled","onClick","memo","FromMagasinItemControl","setRealQtt","setRealQttCC","realQtt","realQttCC","onAddQtyBrute","setQtyFromMagasinItem","inputMode","w","step","bg","min","defaultValue","onChange","alert","max","FromMagasinItemPartial","ref","useRef","isEnough","onAddQtyPortion","addQtyFromMagasinPortionItem","ItaNewInputDose","addQtyFromMagasinDoseItem","PhytoConditionnementInput","addQtyFromMagasinPhytoCondItem","qttccpvcheckMaxente","SovaxInputDose","addQtyFromMagasinSovaxItem","FromMagasinItem","prixVente","prixParCC","categoryId","actionTypesFor","makeScope","config","reducerName","resourceName","record","scope","is","Array","TypeError","DEFAULT_KEY","STORE_LIST","STORE_MAP","REDUCER_NAMES","CREATE_ERROR","CREATE_START","CREATE_SUCCESS","DELETE_ERROR","DELETE_START","DELETE_SUCCESS","FETCH_SUCCESS","UPDATE_ERROR","UPDATE_START","UPDATE_SUCCESS","SPECIAL_KEYS","BUSY","CLIENT_GENERATED_ID","DELETED","PENDING_CREATE","PENDING_UPDATE","actionCreatorsFor","Error","key","getDefaultConfig","merge","actionTypes","assertError","actionCreatorName","error","invariant","assertOneRecord","assertNotArray","fetchStart","data","fetchSuccess","records","assertManyRecords","fetchError","createStart","createSuccess","clientGeneratedKey","cid","createError","updateStart","updateSuccess","updateError","deleteStart","deleteSuccess","deleteError","reducersFor","args","emptyState","reducers","defaults","constants","action","invariants","baseArgs","extraArgs","assertValidStore","current","canBeArray","remove","addedRecord","reject","recordKey","wrapArray","recordOrRecords","assert","recordMap","indexMap","newRecords","slice","forEach","index","recordId","push","invariantsList","invariantArgs","store","prepareRecord","recordStatus","findByKey","collection","haskey","has","all","dissoc","baseReducers","done","updatedCollection","map","concat","deleteRecord","omit","deleteId","existingRecord","assertAllHaveKeys","updatedRecord","newRecord","deps","commonReducersFor","Object","invariantsMap","addedRecordKey","addedRecordKeyLens","lensProp","currentWithoutClientGeneratedKey","set","mergeValues","indexBy","prop","List","Map","user","JSON","parse","localStorage","getItem","process","API_URL","Accept","Authorization","token","code","message","status","request","axios","interceptors","use","headers","common","console","log","response","_","isUndefined","api","method","url","hasFile","variables","Promise","resolve","formData","params","errors","transformKeys","json","items","singular","humps","camelizeKeys","fetchSuccessRequest","nextId","totalItems","totalPages","currentPage","success","objectOrArray","isArray","receivedAt","fetch","options","successCallback","errorCallback","actionCreators","reduxCrud","path","decamelize","reduxCrudOptions","hasOwnProperty","catch","err","create","update","body","join","destroy","metaInitialState","isFetching","didInvalidate","lastUpdatedAt","metaFor","crud","isLoading","createFailed","updateFailed","destroyStart","destroySuccess","destroyFailed","itemsFor","combineReducers","meta","model","get","createTransaction","updateTransaction","deleteTransaction","getData","values","Lang","fromMagasin","emptyOrder","calculateTotal","arr","reduce","acc","val","FromMagasin","setType","vaccinateurId","emprunter","setEmprunter","history","useHistory","emprunters","dateCom","setDateCom","useEffect","Card","Header","e","target","selected","Body","padding","marginTop","marginRight","marginLeft","overflowY","maxHeight","overflowX","v","i","basket","element","handleSoldQuantityCC","Math","floor","now","contenu","sorte","emprunterId","GetDataContext","createContext","GetAll","Provider","Data","Consumer","context","getTdbCommande","deb","fin","getCommandeCVA","Horloge","hours","getHours","minutes","getMinutes","seconds","getSeconds","dateTime","setDateTime","timer","setInterval","clearInterval","fontSize","reactFastCompare","copy","object","output","searchByNameAndFournisseur","query","filter","el","fournisseurId","searchByFournisseur","searchByName","Products","products","setValue","regenerate","setRegenerate","productData","setProductData","Container","Row","Col","xs","placeholder","sort","low","high","p","Vendeur","App","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","UPDATE_STOCK_REQUEST_SUCCESS","UPDATE_STOCK_REQUEST_FAIL","ApprovItem","setSelected","quantityBrute","newStockBrute","newStockCC","a","post","productId","res","updateStockSuccess","qtteBrute","qtteCC","Content","ActiveLink","ContentHeader","goBack","Page","Approv","TextInput","forwardRef","icon","setData","changeValue","invalid","handleChange","event","test","isFunction","isInvalid","color","onBlur","RadioButton","radioValue","valueKey","direction","setRadio","inputProps","radioValueData","setRadioValue","useLayoutEffect","spacing","isChecked","SelectButton","selectValue","isNumeric","emptyValue","isRequired","Number","defaultChecked","TextareaInput","TagInput","tags","changed","setChanged","tagsData","setTagsData","onDelete","tagIndex","onAddition","newTag","Input","suggestions","DateInput","SelectObject","isFieldArray","objectKey","inArray","debug","array","setObjectId","RadioObject","masterKey","filtrable","callback","option","variant","colorScheme","size","RadioCard","useRadio","getInputProps","getCheckboxProps","input","checkbox","cursor","borderWidth","borderRadius","_checked","borderColor","_focus","px","py","RadioProduct","useRadioGroup","getRootProps","getRadioProps","group","radio","PasswordInput","CheckBoxInput","label","defaultIsChecked","NumberInputComponent","generateField","FormComponent","labelSize","labelWeight","tip","info","isBool","optional","half","otherProps","labelText","setLabelText","justifyContent","alignItems","fontWeight","mb","mr","htmlFor","placement","small","my","fontStyle","Radio","Select","Textarea","Tag","Password","Checkbox","Form","validate","validations","enableReinitialize","validationSchema","validateOnChange","validateOnBlur","Element","noValidate","Field","mapValues","FieldComponent","field","form","touched","setFieldValue","initialValues","getFieldValues","AddProd","useParams","fournisseurs","categories","onSubmit","DetailApprov","approv","dateApprov","NumberToLetter","total","dateEcheance","remarque","app","prixFournisseur","displayType","thousandSeparator","suffix","renderText","remise","typePaye","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","useAsyncDebounce","DataTable","columns","addUrl","urlName","paginate","guide","colspan","defaultColumn","useMemo","Filter","useTable","initialState","pageIndex","pageSize","useFilters","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","page","canPreviousPage","canNextPage","pageOptions","gotoPage","pageCount","nextPage","previousPage","setPageSize","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","colSpan","backgroundColor","row","getRowProps","cells","cell","getCellProps","DeleteApprov","entity","preventDefault","window","confirm","ListApprov","start","moment","isoWeekday","startOf","end","endOf","setDeb","setFin","dateRange","onChangeDateRange","approvisionnements","getApprov","accessor","Cell","original","c","locale","BSortie","SET_BASKET_ITEMS","ADD_TO_BASKET","REMOVE_FROM_BASKET","CLEAR_BASKET","ADD_QTY_ITEM","MINUS_QTY_ITEM","ADD_QTY_PORTION_ITEM","MINUS_QTY_PORTION_ITEM","SET_CHECKOUT_SHIPPING_DETAILS","SET_CHECKOUT_PAYMENT_DETAILS","RESET_CHECKOUT","DeleteFromDepot","Credit","commandes","quantityParProductDepot","quantiteBruteTotal","getCredit","d","CreditVaccinateur","withRouter","commande","vaccinateur","contact","setPayerCommande","Direct","toFixed","createdAt","Journal","refDateDeb","refDateFin","getCommande","totalDevente","recetteDuJour","ParametrageSuppl","parametres","nb_mois","nbMois","nb_produit","nbProduits","nb_produits","Perime","datePer","Yup","shape","required","Success","MdError","msg","Create","prixVaccinateur","uniteMesure","qttyspecificmirror","quantityCC","conditionnement","parseFloat","parseInt","refSortie","refQtSortie","qttByCCDepot","condmldepot","condvaldepot","qttccpventedepot","prixqttccventedepot","condsizedepot","DetailProduct","category","Edit","qttCcPVente","setQttCcPVente","prixQttCcVente","setPrixQttCCVente","setFormVal","flac","setFlac","updatedAt","Drop","attribute","Nav","CrudAction","modelKey","ProductAll","ProductByCategory","setId","fetchProductsByCategory","f","ProductByFournisseur","fetchProductsByFournisseur","Rupture","Entree","quantiteCCTotal","getEntree","Button","ROLE_VENDEUR","SIGNUP_URL","SIGNIN_URL","SET_APPROV_ITEMS","Fragment","ADD_TO_APPROV","REMOVE_FROM_APPROV","CLEAR_APPROV","ADD_QTY_APPROV_ITEM","MINUS_QTY_APPROV_ITEM","ADD_NUMBER_QTY_ITEM","ADD_QTY_NUMBER_APPROV_ITEM","clearApprov","useApprov","approvisionnement","isItemOnApprov","addToApprov","removeFromApprov","dispatchAddToApprov","ProductItemApprov","handleAddToApprov","ApprovisionnementItemControl","setQtyApprovItem","ApprovisionnementItem","itemOnApprov","remiseEnAriary","calculeTotalAvecRemise","Approvisionnement","setRemise","setDateEcheance","dateApprovis","setDateApprovis","setRemarque","setTypePaye","getContenu","approvis","totalht","FactureProduct","renderProduct","debouce","onKeyDown","keyCode","NouvelleFacture","debounce","nom","CategoryInput","toggleEdit","setToggleEdit","cat","AddCategory","Categories","FournisseurInput","AddFournisseur","Fournisseurs","VaccinateurInput","AddVaccinateur","Vaccinateurs","vaccinateurs","EmprunterInput","AddEmprunter","Emprunters","Parametres","categoriesMeta","fournisseursMeta","vaccinateursMeta","empruntersMeta","Tab","defaultActiveKey","Link","eventKey","sm","Pane","Sortie","getSortie","SET_FROM_DEPOT_ITEMS","ADD_FROM_DEPOT","REMOVE_FROM_TO_DEPOT","CLEAR_FROM_DEPOT","ADD_QTY_FROM_DEPOT_ITEM","ADD_QTY_PORTION_FROM_DEPOT_ITEM","ADD_QTY_NUMBER_FROM_DEPOT_ITEM","ADD_QTY_PORTION_DOSE_UTA_NEW_FROM_DEPOT_ITEM","ADD_QTY_PORTION_DOSE_SOVAX_FROM_DEPOT_ITEM","ADD_QTY_PORTION_PHYTO_COND_FROM_DEPOT_ITEM","MINUS_QTY_PORTION_PHYTO_COND_FROM_DEPOT_ITEM","clearFromDepot","FromDepotItemControl","setQtyFromDepotItem","useFromDepot","fromdepot","isItemFromDepot","addFromDepot","removeFromDepot","dispatchAddFromDepot","FromDepotItem","fromdepots","canBuyBruteFromDepot","cantBuyBruteFromDepot","isBiggerThanLastQuantityCCDepot","getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCCDepot","minusQuantityBruteWhenQttCcIsEmptyDepot","reinitQuantityCCDepot","handleSoldQuantityCCDepot","isSameOfLastQuantityCCDepot","minusQuantityCcDepot","minusCondMLDepot","hasCondValDepot","minusCondValWhenQttCcIsEmptyDepot","canBuyCCFromDepot","EditFromDepotItemControl","setState","temp_state","updateObjectValue","EditFromDepotItem","EditFromDepot","setVaccinateurId","realContent","setRealContent","missing","added","exist","commandeLast","qtt","EditProductItemDepot","t","removeProduct","some","EditSortie","metacommandes","metaproducts","identif","setIdentif","useScrollTop","scrollTo","PublicRoute","isAuth","Component","component","rest","from","location","connect","auth","isLoggedIn","AuthContext","Auth","SignIn","username","password","setItem","stringify","login","mt","divShadow","SignUp","notification","borderTop","register","VendeurRoute","SET_TO_MAGASIN_ITEMS","ADD_TO_MAGASIN","REMOVE_FROM_MAGASIN","CLEAR_MAGASIN","ADD_QTY_MAGASIN_ITEM","MINUS_QTY_MAGASIN_ITEM","ADD_QTY_NUMBER_MAGASIN_ITEM","clearMagasin","useDepotToMagasin","tomagasin","isItemOnDepotToMagasin","addToMagasin","dispatchAddToMagasin","tomagasins","paddingTop","ToMagItemControl","setQtyMagasinItem","ToMagItem","ToMag","second","AdminDashboard","DeleteToMagasin","HistoriqueSortieCva","getCVA","DeleteFromMagasin","HistoriqueVenteVendeur","EtatStockMagasin","MagasinVente","SideBarMenu","AdminRoute","ApprovisionnementEditItemControl","ApprovisionnementEditItem","EditApprovisionnement","ProductItemEditApprov","EditerApprov","FromDepot","busy","pendingCreate","handlePhtyoSpecificDepot","idFournisseur","setIdFournisseur","fluid","BonDepot","flatify","Set","o","getByRangeDate","dateKey","startDate","endDate","isBetween","DateInterval","weekday","toLocaleString","weekdayNumber","ItemsApprov","flat","gr","orderItem","prev","curr","NoItemsApprov","LastStockApprov","lastElement","lastStock","bruteCva","ccCva","MenuTdb","last","Facturation","rangeDate","setRangeDate","setRangeMonth","startofDate","setStartofDate","setEndDate","byDateProduct","setByDateProduct","clone","dates","isSameOrBefore","add","getDaysBetweenDates","months","diff","getAllMonthBetweenDates","subkey","r","temp","b","flato","groupedBasket","result","currentValue","keys","ItemsVente","LastStockVente","VenteCBV","NoItemsVente","DepotVersMagasin","EditProductItemToMag","EditFromMagasinItemControl","EditItem","EditToFromMag","commandesclone","EditFromMagasin","EditToMagItemControl","stock","realcommand","textTransform","onAddQtyRestitue","cloneCommandes","realstock","clc","opacity","EditTo","cloneDeep","canMinus","EditToMagasin","Routes","middleware","exact","DetailVendeur","Detail","DetailSortie","DepotToMagasinDetail","DetailMagasinVente","defaultState","shipping","payment","cardnumber","expiry","ccv","applyUndo","count","counter","productReducer","categoriesReducer","fournisseursReducer","emprunteurReducer","vaccinateurReducer","commandeReducer","doseRestantEnMg","approvisReducer","qttyspecificmirrordepot","checkout","parametreReducer","sortiedepots","sortiedepotReducer","require","persistStore","persistedReducer","persistReducer","whitelist","storage","default","routeReducer","createStore","thunkMiddleware","applyMiddleware","persistor","extendTheme","fontSizes","lg","fonts","heading","styles","global","lineHeight","components","baseStyle","sizes","xl","h","variants","solid","colorMode","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0bd0e6f6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, NavLink,useLocation } from \"react-router-dom\";\n\nconst NavTree= ({ title,route }) => {\n\n  const location = useLocation();\n  const isActive = location.pathname == route;\n\n  return (\n    <li class=\"nav-item\">\n    <Link as={NavLink} to={route} class={`text-white nav-link ${isActive ? 'active':''}`}>\n      <i class=\"far fa-circle nav-icon\"></i>\n      <p>{title}</p>\n    </Link>\n  </li>\n  );\n};\n\nNavTree.propTypes = {\n  text: PropTypes.string.isRequired,\n  route: PropTypes.string.isRequired,\n};\n\nexport default NavTree;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport NavTree from \"./NavTree\";\n\nconst NavItem = ({ children, title }) => {\n  const [isActive, setIsActive] = useState(false);\n  const handleToggle = (e) => {\n    e.preventDefault();\n    setIsActive(!isActive);\n  };\n  return (\n    <li\n      as={NavLink}\n      class={`nav-item ${isActive ? \"menu-is-opening\" : null} menu-open`}\n    >\n      <a href=\"#\"  class=\"nav-link\">\n        <i class=\"nav-icon fas fa-tachometer-alt\"></i>\n        <p>\n          {title}\n          <i className={`right fas fa-angle-left`}></i>\n        </p>\n      </a>\n      <ul\n        className=\"nav nav-treeview\"\n        style={{ display: `block` }}\n      >\n        {children}\n      </ul>\n    </li>\n  );\n};\n\n\nexport default NavItem;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer class=\"main-footer bg-dark text-white\">\n      <strong>Copyright &copy; 2021 .</strong>\n      <div class=\"float-right d-none d-sm-inline-block\">\n        Crée par <b>Miray Geek</b>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","export const HOME = \"/\";\nexport const TDB_DEPOT_VERS_MAGASIN = \"/tdb-depot-magasin\";\nexport const TDB_VENTE_CBV = \"/tdb-vente-cbv\";\nexport const TDB_FACTURES = \"/tdb-facture\";\nexport const APPROV = \"/approv\";\nexport const CREATEPRODUCT = \"/create-product\";\nexport const EDITPRODUCT = `/product/edit/:id`;\nexport const PRODUCTS = \"/products\";\nexport const PERIME = \"/perimes\";\nexport const RUPTURE = \"/rupture\";\nexport const CREDIT = \"/credit/normal\";\nexport const DETAIL = `/detail/:id`;\nexport const DETAIL_SORTIE = \"/depot/detail/:id\";\nexport const DETAILVENDEUR = `/detailvendeur/:id`;\nexport const CREDITVACCINATEUR = \"/credit/vaccinateur\";\nexport const DIRECT = \"/direct\";\nexport const JOURNAL = \"/journal\";\nexport const PARAMETRES = \"/parametres\";\nexport const PRODUCTBYFOURNISSEUR = \"/product/fournisseur\";\nexport const PRODUCTBYCATEGORY = \"/product/category\";\nexport const PARASUPPL = \"/para/suppl\";\nexport const ENTREE = \"/entree\";\nexport const SORTIE = \"/sortie\";\n\nexport const EDIT_SORTIE = \"/editer/commande/:id\";\nexport const BONDESORTIE = \"/bon/sortie\";\nexport const PRODUCTDETAIL = `/product/detail/:id`;\nexport const BSORTIE = \"/b/sortie\";\nexport const ADDPROD = \"/add/prod\";\n\nexport const NOUVELLEFACTURE = \"/nouvelle/facture\";\nexport const EDITERFACTURE = \"/editer/facture/:id\";\nexport const DETAILAPPROV = \"/approvis/detail/:id\";\nexport const LISTAPPROV = \"/list/approv\";\nexport const HISTORIQUEVENTEDEPOT = \"/historique/vente/depot\";\nexport const SIGNIN = \"/signin\";\nexport const SIGNOUT = \"/signout\";\nexport const SIGNUP = \"/signup\";\nexport const VENDEUR = \"/vendeur\";\nexport const BNC_DEPOT = \"/bon-commande-depot\";\nexport const ADMIN = \"/admin\";\nexport const DEPOTOMAGASIN = \"/depot/to/magasin/\";\n\nexport const EDITDEPOTTOMAGASIN = \"/depot/to/magasin/edit/:id\";\nexport const HISTORIQUESORTIECVA = \"/historique/sortie/cva\";\nexport const HISTORIQUEVENTEVENDEUR = \"/historique/vente/vendeur\";\nexport const HISTORIQUEVENTEVENDEURVUEPARADMIN =\n  \"/historique/vente/admin/vendeur\";\nexport const ETATSTOCKMAGASIN = \"/etat/stock/magasin\";\nexport const EDITFROMMAGASIN = '/vendeur-commande/:id';\n\nexport const DEPOT_MAGASIN_DETAIL = '/depot/to/magasin/detail/:id';\nexport const DETAIL_MAGASIN_VENTE = '/magasin/detail/vente/:id';","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport NavItem from \"./Sidebar/NavItem\";\nimport NavTree from \"./Sidebar/NavTree\";\nimport Footer from \"./adminlte/Content/Footer\";\nimport {\n  CREATEPRODUCT,\n  ENTREE,\n  PERIME,\n  PRODUCTS,\n  RUPTURE,\n  SORTIE,\n  CREDIT,\n  CREDITVACCINATEUR,\n  PRODUCTBYCATEGORY,\n  PRODUCTBYFOURNISSEUR,\n  DIRECT,\n  BONDESORTIE,\n  PARAMETRES,\n  NOUVELLEFACTURE,\n  LISTAPPROV,\n  DEPOTOMAGASIN,\n  ADMIN,\n  HISTORIQUESORTIECVA,\n  ETATSTOCKMAGASIN,\n  HISTORIQUEVENTEVENDEURVUEPARADMIN,\n  TDB_DEPOT_VERS_MAGASIN,TDB_VENTE_CBV,TDB_FACTURES\n} from \"../constants/routes\";\nclass AdminLTE extends React.PureComponent  {\n  render() {\n    let { children, navigation, title, titleShort } = this.props;\n    const { searchbarFilter } = this.props;\n    const { homeTo } = this.props;\n    {\n      if (!children) children = [<div>No content</div>];\n      if (!children.length) {\n        children = [children];\n      }\n    }\n    if (!title.length) {\n      title = [title];\n    }\n    return (\n      <>\n        <div class=\"wrapper position-relative\">\n          <div className=\"bg-dark m-0  p-2  text-center\">\n            <h4 className=\"m-0 p-2 text-white\">\n              CABINET VETERINAIRE AMBALAVAO\n            </h4>\n          </div>\n          <aside className=\"main-sidebar sidebar-dark-primary\">\n            <Link to={homeTo} className=\"brand-link border-0\">\n              <span className=\"ml-4 brand-text font-weight-light text-center text-uppercase\">\n                {title}\n              </span>\n            </Link>\n            <div\n              class=\"sidebar\"\n            >\n              <nav class=\"mt-2\">\n                <ul\n                  class=\"nav nav-pills nav-sidebar flex-column\"\n                  data-widget=\"treeview\"\n                  role=\"menu\"\n                  data-accordion=\"false\"\n                >\n                   <NavTree\n                    title={\"Tableau de bord\"}\n                    route={\"/\"}\n                  />\n                  <NavItem title=\"Factures && Produits\">\n                  <NavTree title={\"Factures\"} route={LISTAPPROV} />\n                  <NavTree title={\"Produits\"} route={PRODUCTS} />\n                  </NavItem>\n                  <NavItem title=\"Dépot\">\n                    <NavTree title={\"Bon de sortie\"} route={BONDESORTIE} />\n                    <NavTree title={\"Historique de sortie\"} route={SORTIE} />\n                    <NavTree title={\"Credit\"} route={CREDIT} />\n                    <NavTree title={\"Vaccinateur\"} route={CREDITVACCINATEUR} />\n                  </NavItem>\n                  <NavItem title=\"Magasin\">\n                    <NavTree title={\"Depot vers Magasin\"} route={ADMIN} />\n                    <NavTree\n                      title={\"Historique de 'Dépôt vers Magasin'\"}\n                      route={HISTORIQUESORTIECVA}\n                    />\n                    <NavTree\n                      title={\"Etat de stock magasin\"}\n                      route={ETATSTOCKMAGASIN}\n                    />\n                    <NavTree\n                      title={\"Historique de vente du magasin\"}\n                      route={HISTORIQUEVENTEVENDEURVUEPARADMIN}\n                    />\n                  </NavItem>\n                  <NavItem title=\"Parametres\">\n                    <NavTree\n                      title={\"Parametres générales\"}\n                      route={PARAMETRES}\n                    />\n                  </NavItem>\n                </ul>\n              </nav>\n            </div>\n          </aside>\n          <div\n          >\n            {children}\n          </div>\n        </div>\n        {/**\n        <Footer /> */}\n      </>\n    );\n  }\n}\n\nAdminLTE.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  title: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  titleShort: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  //theme: PropTypes.oneOf(Themes),\n  browserTitle: PropTypes.string,\n  sidebar: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  footer: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  homeTo: PropTypes.string,\n  searchbarFilter: PropTypes.bool,\n};\n\nAdminLTE.defaultProps = {\n  children: null,\n  title: [\"Admin\", \"LTE\"],\n  browserTitle: null,\n  theme: \"blue\",\n  //  controlSidebar: null,\n  footer: null,\n  sidebar: undefined,\n  homeTo: \"/\",\n  searchbarFilter: false,\n};\n\nexport default AdminLTE;\n","export const SET_FROM_MAGASIN_ITEMS = 'SET_FROM_MAGASIN_ITEMS';\nexport const ADD_FROM_MAGASIN = 'ADD_FROM_MAGASIN';\nexport const REMOVE_FROM_TO_MAGASIN = 'REMOVE_FROM_TO_MAGASIN';\nexport const CLEAR_FROM_MAGASIN = 'CLEAR_FROM_MAGASIN';\nexport const ADD_QTY_FROM_MAGASIN_ITEM = 'ADD_QTY_FROM_MAGASIN_ITEM';\nexport const MINUS_QTY_FROM_MAGASIN_ITEM = 'MINUS_QTY_FROM_MAGASIN_ITEM';\nexport const ADD_NUMBER_QTY_ITEM ='ADD_NUMBER_QTY_ITEM';\nexport const ADD_QTY_PORTION_FROM_MAGASIN_ITEM = \"ADD_QTY_PORTION_FROM_MAGASIN_ITEM\";\nexport const MINUS_QTY_PORTION_FROM_MAGASIN_ITEM = \"MINUS_QTY_PORTION_FROM_MAGASIN_ITEM\";\nexport const ADD_QTY_NUMBER_FROM_MAGASIN_ITEM = \"ADD_QTY_NUMBER_FROM_MAGASIN_ITEM\";\nexport const  MINUS_QTY_PORTION__DOSE_ITA_NEW_FROM_MAGASIN_ITEM = \"MINUS_QTY_PORTION_DOSE_ITA_NEW_FROM_MAGASIN_ITEM\";\nexport const ADD_QTY_PORTION_DOSE_UTA_NEW_FROM_MAGASIN_ITEM = \"ADD_QTY_PORTION_DOSE_ITA_NEW_FROM_MAGASIN_ITEM\";\nexport const ADD_QTY_PORTION_DOSE_SOVAX_FROM_MAGASIN_ITEM = \"ADD_QTY_PORTION_DOSE_SOVAX_FROM_MAGASIN_ITEM\";\nexport const MINUS_QTY_PORTION__DOSE_SOVAX_FROM_MAGASIN_ITEM=\"MINUS_QTY_PORTION__DOSE_SOVAX_FROM_MAGASIN_ITEM\";\nexport const ADD_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM=\"ADD_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM\";\nexport const MINUS_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM=\"MINUS_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM\";","import {\n  ADD_QTY_FROM_MAGASIN_ITEM,\n  ADD_FROM_MAGASIN,\n  CLEAR_FROM_MAGASIN,\n  MINUS_QTY_FROM_MAGASIN_ITEM,\n  REMOVE_FROM_TO_MAGASIN,\n  SET_FROM_MAGASIN_ITEMS,\n  ADD_QTY_PORTION_FROM_MAGASIN_ITEM,\n  MINUS_QTY_PORTION_FROM_MAGASIN_ITEM,\n  ADD_QTY_NUMBER_FROM_MAGASIN_ITEM,\n} from \"../constants\";\n\nexport const setFromMagasinItems = (items = []) => ({\n  type: SET_FROM_MAGASIN_ITEMS,\n  payload: items,\n});\n\nexport const addFromMagasin = (product) => ({\n  type: ADD_FROM_MAGASIN,\n  payload: product,\n});\n\nexport const removeFromMagasin = (id) => ({\n  type: REMOVE_FROM_TO_MAGASIN,\n  payload: id,\n});\n\nexport const clearFromMagasin = () => ({\n  type: CLEAR_FROM_MAGASIN,\n});\n\nexport const addQtyFromMagasinItem = (id, qtt) => ({\n  type: ADD_QTY_FROM_MAGASIN_ITEM,\n  payload: { id: id, qtt: qtt },\n});\n\nexport const setQtyFromMagasinItem = (id, value) => ({\n  type: ADD_QTY_NUMBER_FROM_MAGASIN_ITEM,\n  payload: {\n    id: id,\n    value: value,\n  },\n});\nexport const minusQtyFromMagasinItem = (id) => ({\n  type: MINUS_QTY_FROM_MAGASIN_ITEM,\n  payload: { id: id },\n});\n\nexport const addQtyFromMagasinPortionItem = (id, value) => ({\n  type: ADD_QTY_PORTION_FROM_MAGASIN_ITEM,\n  payload: { id: id, value: value },\n});\n\nexport const minusQtyFromMagasinPortionItem = (id) => ({\n  type: MINUS_QTY_PORTION_FROM_MAGASIN_ITEM,\n  payload: { id: id },\n});\n","import {\n  addFromMagasin as dispatchAddFromMagasin,\n  removeFromMagasin,\n} from \"../store/frommagasin/actions/frommagasin\";\nconst useFromMagasin = (frommagasin, dispatch) => {\n  const isItemFromMagasin = (id) =>\n    !!frommagasin?.find((item) => item?.id === id);\n  const addFromMagasin = (product) => {\n    if (isItemFromMagasin(product.id)) {\n      dispatch(removeFromMagasin(product.id));\n    } else {\n      dispatch(dispatchAddFromMagasin(product));\n    }\n  };\n  return { frommagasin, isItemFromMagasin, addFromMagasin };\n};\n\nexport default useFromMagasin;\n","export const getParameterByName = (name, url) => {\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return \"\";\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n};\nexport function omit(key, obj) {\n  const { [key]: omitted, ...rest } = obj;\n  return rest;\n}\n\n/* eslint-disable no-nested-ternary */\nexport const displayDate = (timestamp) => {\n  const date = new Date(timestamp);\n\n  const monthNames = [\n    \"Janvier\",\n    \"Fevrier\",\n    \"Mars\",\n    \"Avril\",\n    \"Mai\",\n    \"Juin\",\n    \"Juillet\",\n    \"Août\",\n    \"Septembre\",\n    \"Octobre\",\n    \"Novembre\",\n    \"Decembre\",\n  ];\n\n  const day = date.getDate();\n  const monthIndex = date.getMonth();\n  const year = date.getFullYear();\n\n  // return day + ' ' + monthNames[monthIndex] + ' ' + year;\n  return ` ${day} ${monthNames[monthIndex]} ${year}`;\n};\n\nexport const displayMoney = (n) => {\n  const format = new Intl.NumberFormat(\"fr-MG\", {\n    style: \"currency\",\n    currency: \"MGA\",\n  });\n\n  // or use toLocaleString()\n  return format.format(n);\n};\n\nexport const calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n\n  const total = arr.reduce((acc, val) => acc + val, 0);\n\n  return total;\n};\n\nexport const displayActionMessage = (msg, status = \"info\") => {\n  const div = document.createElement(\"div\");\n  const span = document.createElement(\"span\");\n\n  div.className = `toast ${\n    status === \"info\"\n      ? \"toast-info\"\n      : status === \"success\"\n      ? \"toast-success\"\n      : \"toast-error\"\n    // eslint-disable-next-line indent\n  }`;\n  span.className = \"toast-msg\";\n  span.textContent = msg;\n  div.appendChild(span);\n\n  if (document.querySelector(\".toast\")) {\n    document.body.removeChild(document.querySelector(\".toast\"));\n    document.body.appendChild(div);\n  } else {\n    document.body.appendChild(div);\n  }\n\n  setTimeout(() => {\n    try {\n      document.body.removeChild(div);\n    } catch (e) {\n      console.log(e);\n    }\n  }, 3000);\n};\n\nfunction strOp(str) {\n  return str.toString().replace(/\\s/g, \"\").toLowerCase();\n}\n\nexport const checkHasExistText = (text, textCheck) => {\n  if (strOp(text).includes(strOp(textCheck))) {\n    return true;\n  }\n};\nexport const displayShortMonth = (timestamp) => {\n  const date = new Date(timestamp);\n\n  const monthNames = [\n    \"Jan.\",\n    \"Févr.\",\n    \"Mars\",\n    \"Avr.\",\n    \"Mai\",\n    \"Juin.\",\n    \"Juill.\",\n    \"Août\",\n    \"Sept.\",\n    \"Oct.\",\n    \"Nov\",\n    \"Déc.\",\n  ];\n\n  const monthIndex = date.getMonth();\n  return `${monthNames[monthIndex]}`;\n};\n","// tester l'existance d'une quantité suffisante pour en cc d'un produit dans le cva\nexport const canBuyCCFromCva = (product) => {\n  if (product.quantityBruteCVA > 0) {\n    return true;\n  } else {\n    if (product.quantityCCCVA > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\nexport const cantBuyCCFromCva = (product) => {\n  if (product.quantityBruteCVA <= 0) {\n    if (product.quantityCCCVA > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\n\nexport const canBuyBruteFromCva = (product) => {\n  if (product.quantityBruteCVA > 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const cantBuyBruteFromCva = (product) => {\n  if (product.quantityBruteCVA == 0 || product.quantityBruteCVA < 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const cantBuyBrute = (product) => {\n  return !!product.quantityBrute <= 0;\n};\nexport const canBuyBrute = (product) => {\n  return !!product.quantityBrute > 0;\n};\n\nexport const getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCC = (\n  product\n) => {\n  if (isBiggerThanLastQuantityCC(product))\n    return product.qttByCC - product.quantityCCCVA;\n  else return product.quantityCCCVA - product.qttByCC;\n};\nexport const minusQuantityBruteCvaWhenQttCcIsEmpty = (product) => {\n  if (canBuyCCFromCva(product)) {\n    product.quantityBruteCVA -= 1;\n    reinitQuantityCCCva(\n      product,\n      product.doseDefault -\n        getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCC(product)\n    );\n  }\n  return product;\n};\n\nexport const isBiggerThanLastQuantityCC = (product) => {\n  if (product.qttByCC > product.quantityCCCVA) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const isLowerThanLastQuantityCC = (product) => {\n  if (product.qttByCC < product.quantityCCCVA) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const isSameOfLastQuantityCC = (product) => {\n  if (product.qttByCC == product.quantityCCCVA) {\n    return true;\n  } else {\n    return false;\n  }\n};\nconst notSatisfaisanteProductCommande = (product) => {\n  return (\n    product.quantityCCCVA - product.qttByCC < 0 &&\n    product.quantityBruteCVA - 1 - product.quantityParProduct * 1 < 0\n  );\n};\nexport const minusQuantityCc = (product) => {\n  if (product.quantityParProduct > 0) {\n    if (product.qttByCC > 0) {\n      if (!notSatisfaisanteProductCommande(product)) {\n        if (product.quantityBruteCVA - product.quantityParProduct < 0) {\n          product.quantityParProduct = product.quantityBruteCVA;\n          product.quantityBruteCVA = 0;\n        } else {\n          product.quantityBruteCVA -= product.quantityParProduct;\n        }\n      }\n      if (product.qttByCC >= product.doseDefault) {\n        product.qttByCC = product.doseDefault;\n      }\n    } else {\n      if (product.quantityBruteCVA - product.quantityParProduct < 0) {\n        product.quantityParProduct = product.quantityBruteCVA;\n        product.quantityBruteCVA = 0;\n      } else {\n        product.quantityBruteCVA -= product.quantityParProduct;\n      }\n    }\n  }\n  if (canBuyCCFromCva(product)) {\n    if (isBiggerThanLastQuantityCC(product)) {\n      if (product.quantityBruteCVA - 1 >= 0) {\n        minusQuantityBruteCvaWhenQttCcIsEmpty(product);\n      } else {\n        product.quantityBruteCVA = 0;\n        reinitQuantityCCCva(product, product.quantityCCCVA);\n      }\n    } else if (isSameOfLastQuantityCC(product)) {\n      reinitQuantityCCCva(product, 0);\n    } else if (isLowerThanLastQuantityCC(product)) {\n      reinitQuantityCCCva(product, product.quantityCCCVA - product.qttByCC);\n    }\n  } else {\n    reinitQuantityCCCva(product, 0);\n  }\n\n  return product;\n};\nexport const reinitQuantityCCCva = (product, value) => {\n  product.quantityCCCVA = value;\n  return product;\n};\n\nexport const soldAllStockCCCva = (product) => {\n  product.quantityCCCVA = 0;\n};\nexport const resetQuantityBruteCva = (product) => {\n  product.quantityBruteCVA = 0;\n};\n\nexport const handleSoldQuantityCC = (product) => {\n  minusQuantityCc(product);\n  return product;\n};\nexport const isSpecialProductHandle = (product) => {\n  return !!(\n    product.condml != 0 &&\n    product.condsize != 0 &&\n    product.qttccpvente != 0 &&\n    product.prixqttccvente != 0\n  );\n};\nexport const isBiggerThanLastCondML = (product) => {\n  return !!(product.qttByCC > product.condml);\n};\nexport const hasCondVal = (product) => {\n  return !!product.condval > 0;\n};\nexport const minusCondValWhenQttCcIsEmpty = (product) => {\n  product.condval -= 1;\n  return product;\n};\n\nexport const reinitConditionnement = (product) => {\n  product.quantityCCCVA =\n    product.condml -\n    getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCC(product);\n  product.condval = product.condval - 1;\n  return product;\n};\nexport const minusQuantityBruteCvaWhenQttCcCondIsEmpty = (product) => {\n  if (canBuyBruteFromCva(product)) {\n    product.quantityBruteCVA -= 1;\n    reinitConditionnement(product);\n  } else product.quantityBruteCVA = 0;\n  return product;\n};\nconst notSatifyCommande = (product) => {\n  return (\n    product.quantityCCCVA - product.qttByCC < 0 &&\n    product.condval - 1 - product.quantityParProduct * 1 < 0\n  );\n};\nexport const minusCondML = (product) => {\n  if (hasCondVal(product)) {\n    if (product.quantityParProduct > 0) {\n      if (product.qttByCC > 0) {\n        if (!notSatifyCommande(product)) {\n          if (product.condval < product.quantityParProduct) {\n            if (product.condval - product.quantityParProduct < 0) {\n              if (canBuyBruteFromCva(product)) {\n                product.quantityBruteCVA -= 1;\n                product.condval = product.condsize - 1;\n              } else {\n                product.condval = 0;\n              }\n            } else {\n              product.quantityParProduct = product.condval;\n              product.condval = 0;\n            }\n          } else {\n            product.condval -= product.quantityParProduct;\n            product.quantityCCCVA -= product.qttByCC;\n          }\n        }\n        if (product.qttByCC >= product.condml) {\n          product.qttByCC = product.condml;\n        }\n      } else {\n        product.condval -= product.quantityParProduct;\n        if (product.condval < 0) {\n          if (canBuyBruteFromCva(product)) {\n            product.quantityBruteCVA -= 1;\n            product.condval = product.condsize - 1;\n          } else {\n            product.condval = 0;\n          }\n        }\n      }\n    } else {\n      if (isBiggerThanLastQuantityCC(product)) {\n        minusCondValWhenQttCcIsEmpty(product);\n        if (product.condval == 0) {\n          if (canBuyBruteFromCva(product)) {\n            if (\n              getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCC(product) > 0\n            ) {\n              product.quantityBruteCVA -= 1;\n              reinitQuantityCCCva(\n                product,\n                product.condml -\n                  getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCC(product)\n              );\n              product.condval = product.condsize - 1;\n            }\n          }\n        } else {\n          reinitQuantityCCCva(\n            product,\n            product.condml -\n              getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCC(product)\n          );\n        }\n      } else {\n        if (isSameOfLastQuantityCC(product)) {\n          return false;\n        } else if (isLowerThanLastQuantityCC(product)) {\n          if (canBuyCCFromCva(product))\n            product.quantityCCCVA -= product.qttByCC;\n          else product.quantityCCCVA = 0;\n        } else {\n        }\n      }\n    }\n  } else {\n    if (canBuyBruteFromCva(product)) {\n      product.quantityBruteCVA -= 1;\n      reinitQuantityCCCva(\n        product,\n        product.condml -\n          getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCC(product)\n      );\n      if (product.condval == 0) product.condval = product.condsize - 1;\n    } else {\n      if (canBuyCCFromCva(product)) {\n        if (isBiggerThanLastQuantityCC(product)) {\n          if (canBuyBruteFromCva(product)) {\n            product.quantityBruteCVA -= 1;\n          } else {\n            reinitQuantityCCCva(product, 0);\n          }\n        } else if (isSameOfLastQuantityCC(product)) {\n          reinitQuantityCCCva(product, 0);\n        } else if (isLowerThanLastQuantityCC(product)) {\n          reinitQuantityCCCva(product, product.quantityCCCVA - product.qttByCC);\n        }\n      } else {\n        reinitQuantityCCCva(product, 0);\n      }\n    }\n  }\n  return product;\n};\n\nexport const handlePhtyoSpecific = (product) => {\n  minusCondML(product);\n  return product;\n};\nexport const handleMinusProduct = (product) => {\n  if (canBuyBruteFromCva(product)) {\n    product.quantityBruteCVA -= product.quantityParProduct;\n  } else if (cantBuyBruteFromCva(product)) {\n    product.quantityBruteCVA = 0;\n  }\n  return product;\n};\nexport const handleMinusCondML = (product) => {\n  minusCondML(product);\n  return product;\n};\nexport const resetProductData = (product, cloneProduct) => {\n  Object.keys(cloneProduct).forEach(function (key) {\n    if (cloneProduct[key] == 0 || cloneProduct[key] == 0) {\n      cloneProduct[key] = product[key];\n    }\n  });\n};\n\nexport const handleSoldProduct = (product) => {\n  if (canBuyBrute(product)) {\n    product.quantityBrute -= product.quantityParProduct;\n  } else if (cantBuyBrute(product)) {\n    product.quantityBrute = 0;\n  }\n  return product;\n};\n\nexport const canBuy = (product) => {\n  if (isSpecialProductHandle(product)) {\n  }\n  return true;\n};\nexport const oneSoldOneReturn = (product, initialCommande) => {\n  // 1 vendu,1 retour\n  let etat = \"none\";\n  if (product.quantityParProduct > 0) {\n    if (product.quantityBruteCVA >= 0) {\n      if (product.quantityParProduct == initialCommande.quantityParProduct) {\n        product.quantityBruteCVA += product.quantityParProduct;\n        product.quantityParProduct = 0;\n        etat = \"same-qtt\";\n      } else if (\n        initialCommande.quantityParProduct > product.quantityParProduct\n      ) {\n        let diff =\n          initialCommande.quantityParProduct - product.quantityParProduct;\n        initialCommande.quantityParProduct -= diff;\n        initialCommande.quantityBruteCVA += diff;\n        product.quantityParProduct = 0;\n        product.quantityBruteCVA += diff;\n        etat = \"minus-qtt\";\n        // qttParcommande > qttactuel =  (qttParcommande - qttactuel), commande quantité - (qttParcommande - qttactuel), +(qttParcommande - qttactuel) stock\n        // 3 > 2 = 3 - 2 = 1, qttcommande -= 1,quantiteProduit (qttParcommande - qttactuel)\n      } else if (\n        initialCommande.quantityParProduct < product.quantityParProduct\n      ) {\n        let differ =\n          product.quantityParProduct - initialCommande.quantityParProduct;\n        // qttParcommande < qttactuel =  (qttactuel - qttParcommande), commande quantité + (qttactuel - qttParcommande), -(qttParcommande - qttactuel) stock\n        // 4 < 5 = 5 - 4 = 1,qttcommande +=1 , stock + (qttParcommande - qttactuel)\n        initialCommande.quantityParProduct += differ;\n        initialCommande.quantityBruteCVA -= differ;\n        product.quantityParProduct = 0;\n        product.quantityBruteCVA -= differ;\n        etat = \"add-qtt\";\n      }\n    }\n  }\n  return { product, initialCommande, etat };\n};\n\nexport const mlSoldIncrement = (product, initialCommande) => {\n  let etat = \"none\";\n  if (product.qttByCC > 0) {\n    if (product.quantityParProduct > 0) {\n      product.quantityBruteCVA += product.quantityParProduct;\n      product.quantityParProduct = 0;\n    }\n    if (product.quantityCCCVA >= 0) {\n      if (product.qttByCC == initialCommande.qttByCC) {\n        etat = \"same-qtt-cc\";\n      } else if (initialCommande.qttByCC > product.qttByCC) {\n        etat = \"minus-qtt-cc\";\n        // 90 20\n        let diff = initialCommande.qttByCC - product.qttByCC;\n        // 90 - 20 = 70\n        initialCommande.qttByCC -= diff;\n        // 20\n        if (product.quantityCCCVA + diff > product.doseDefault) {\n          // 40 + 70 =110 > 100\n          initialCommande.quantityBruteCVA += 1;\n          // + 1 boite\n          initialCommande.quantityCCCVA =\n            product.quantityCCCVA + diff - product.doseDefault;\n          // 110 - 100 = 10\n        } else {\n          // 40 + 14 = 64 < 100\n\n          initialCommande.quantityCCCVA += diff;\n        }\n        //initialCommande.qttByCC -= diff;\n        //initialCommande.quantityCCCVA += diff;\n        // 21 > 20\n      } else if (initialCommande.qttByCC < product.qttByCC) {\n        // 19 < 20\n        etat = \"add-qtt-cc\";\n        let differ = product.qttByCC - initialCommande.qttByCC;\n        // 20 - 10 = 10\n        initialCommande.qttByCC += differ;\n        // 10 +10 = 20\n        if (product.quantityCCCVA - differ > 0) {\n          // 40 - 10 = 30\n          initialCommande.quantityCCCVA -= differ;\n        } else {\n          // 40 - 40 = 0\n          product.quantityCCCVA = 0;\n        }\n      }\n      if (product.quantityCCCVA + product.qttByCC > product.doseDefault) {\n        //20 + reste ML > dosedefault  qttbrute +1, qttcc = quantityCCCVA + qttByCC - doseDefault\n        // 90 + 20 > 100\n        product.quantityBruteCVA += 1;\n        product.quantityCCCVA =\n          product.quantityCCCVA + product.qttByCC - product.doseDefault;\n      } else {\n        // 20 + 20 < 100\n        product.quantityCCCVA += product.qttByCC;\n      }\n      product.qttByCC = 0;\n    }\n  } else {\n    if (product.quantityParProduct > 0) {\n      oneSoldOneReturn(product, initialCommande);\n    }\n  }\n  return { product, initialCommande, etat };\n};\n\nexport const oneSoldOneReturnCond = (product, initialCommande) => {\n  let etat = \"none\";\n  if (product.quantityParProduct > 0) {\n    if (product.condval >= 0) {\n      if (product.quantityParProduct == initialCommande.quantityParProduct) {\n        if (product.condval + product.quantityParProduct < product.condsize) {\n          product.condval += product.quantityParProduct;\n        } else {\n          product.condval = product.condsize;\n        }\n        product.quantityParProduct = 0;\n        etat = \"same-qtt-cond\";\n      } else if (\n        initialCommande.quantityParProduct > product.quantityParProduct\n      ) {\n        let diff =\n          initialCommande.quantityParProduct - product.quantityParProduct;\n        initialCommande.quantityParProduct -= diff;\n        initialCommande.condval += diff;\n        product.quantityParProduct = 0;\n\n        if (product.condval + diff < product.condsize) {\n          product.condval += diff;\n        } else {\n          product.condval = product.condsize;\n        }\n        etat = \"minus-qtt-cond\";\n        // qttParcommande > qttactuel =  (qttParcommande - qttactuel), commande quantité - (qttParcommande - qttactuel), +(qttParcommande - qttactuel) stock\n        // 3 > 2 = 3 - 2 = 1, qttcommande -= 1,quantiteProduit (qttParcommande - qttactuel)\n      } else if (\n        initialCommande.quantityParProduct < product.quantityParProduct\n      ) {\n        let differ =\n          product.quantityParProduct - initialCommande.quantityParProduct;\n        // qttParcommande < qttactuel =  (qttactuel - qttParcommande), commande quantité + (qttactuel - qttParcommande), -(qttParcommande - qttactuel) stock\n        // 4 < 5 = 5 - 4 = 1,qttcommande +=1 , stock + (qttParcommande - qttactuel)\n        initialCommande.quantityParProduct += differ;\n        initialCommande.condval -= differ;\n        product.quantityParProduct = 0;\n  \n        if (product.condval - differ >= 0) {\n          product.condval -= differ;\n        } else {\n          product.condval = 0;\n        }\n        etat = \"add-qtt-cond\";\n      }\n    }\n  } else {\n    initialCommande.quantityParProduct = initialCommande.quantityParProduct;\n    product.quantityParProduct = product.quantityParProduct;\n  }\n  return { product, initialCommande, etat };\n};\n\nexport const mlSoldIncrementCond = (product, initialCommande) => {\n  // 1 vendu,1 retour\n  let etat = \"none\";\n  if (product.qttByCC > 0) {\n    if (product.quantityParProduct > 0) {\n      product.condval += product.quantityParProduct;\n      product.quantityParProduct = 0;\n    }\n    if (product.quantityCCCVA >= 0) {\n      if (product.qttByCC == initialCommande.qttByCC) {\n        etat = \"same-qtt-cc-cond\";\n      } else if (initialCommande.qttByCC > product.qttByCC) {\n        etat = \"minus-qtt-cc-cond\";\n        let diff = initialCommande.qttByCC - product.qttByCC;\n        //200 - 100 = 100\n        initialCommande.qttByCC -= diff;\n        // 100\n        //200 + 100 = 100 > 250\n        if (product.quantityCCCVA + diff > product.condml) {\n          initialCommande.condval += 1;\n          // + 1 boite\n          initialCommande.quantityCCCVA =\n            product.quantityCCCVA + diff - product.condml;\n          // 200+  100 - 250\n        } else {\n          initialCommande.quantityCCCVA += diff;\n        }\n        // 21 > 20\n      } else if (initialCommande.qttByCC < product.qttByCC) {\n        // 19 < 20\n        etat = \"add-qtt-cc-cond\";\n        let differ = product.qttByCC - initialCommande.qttByCC;\n        // 20 - 19 = 1\n        initialCommande.qttByCC += differ;\n        if (product.quantityCCCVA - differ > 0) {\n          initialCommande.quantityCCCVA -= differ;\n        } else {\n          product.quantityCCCVA = 0;\n        }\n      }\n\n      if (product.quantityCCCVA + product.qttByCC > product.condml) {\n        // 200 + 32 > 50\n        let diff = product.quantityCCCVA + product.qttByCC - product.condml;\n        // 200 + 100 = 300 > 250\n        // 50\n        // + 1\n        if (product.condval + 1 < product.condsize) {\n          product.condval += 1;\n        } else {\n          product.condval = product.condsize;\n        }\n        product.quantityCCCVA = diff;\n      } else {\n        // 20 + 20 < 100\n        product.quantityCCCVA += product.qttByCC;\n      }\n      product.qttByCC = 0;\n    }\n  } else {\n    if (product.quantityParProduct > 0) {\n      oneSoldOneReturnCond(product,initialCommande);\n    }\n  }\n\n  return { product, initialCommande, etat };\n};\n\n// cas normal\n\n// 20 + reste ML > dosedefault  qttbrute +1, qttcc = dose - reste\n// 1 flacon + 20 ML , 20 + reste ML > dosedefault  qttbrute +1, qttcc = dose - reste , +1\n//1 flacon + 20 ML , 20 + reste ML < dosedefault  qttbrute +1, qttcc -= qttCC\n\n// cas modification\n\n// qttParcommande > qttactuel =  (qttParcommande - qttactuel), commande quantité - (qttParcommande - qttactuel), +(qttParcommande - qttactuel) stock\n// 3 > 2 = 3 - 2 = 1, qttcommande -= 1,quantiteProduit (qttParcommande - qttactuel)\n// qttParcommande < qttactuel =  (qttactuel - qttParcommande), commande quantité + (qttactuel - qttParcommande), -(qttParcommande - qttactuel) stock\n// 4 < 5 = 5 - 4 = 1,qttcommande +=1 , stock + (qttParcommande - qttactuel)\n\n// cas tikaz\n// 1 vendu , 1 retour\n// 100 ml, reste ML + 100 < dosedefault, reste ML + 100\n//100 ml, reste ML + 100 > dosedefault, on calcue la difference qttcc, + 1 condval ( + 1 condval > 4 donc ,)\n// 1 cond , 100ML ,  reste ML + 100 > dosedefault, on calcue la difference qttcc, + 1 condval +1 cond,\n//  1 cond , 100ML , +1 cond,  reste ML + 100 < dosedefault,+1 cond, qttc = reste ML + 100\n//\n\n//date : 11 12 13 14 15\n//qtt  : 10  9  8  7  6\n//       +1\n//       11   +1 + 1 +1\n//       -1 -1  - 1\n","import React, { useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useFromMagasin from \"../../../../hooks/useFromMagasin\";\nimport { displayMoney } from \"../../../../utils/functions\";\nimport { isSpecialProductHandle } from \"../../../../store/functions/function\";\nconst ProductItem = ({ product }) => {\n  const frommagasins = useSelector((state) => state.frommagasins);\n  const dispatch = useDispatch();\n  const { isItemFromMagasin, addFromMagasin } = useFromMagasin(\n    frommagasins,\n    dispatch\n  );\n\n  const itemOnBasket = isItemFromMagasin\n    ? isItemFromMagasin(product.id)\n    : false;\n  /* useEffect(()=>{\n    if(!itemOnBasket){\n      product.qttByCC =0;\n      product.quantityParProduct=0;\n    }\n  },[itemOnBasket])*/\n  const handleAddToBasket = () => {\n    if (addFromMagasin) addFromMagasin(product);\n  };\n  const isEmptyBrute = React.useCallback(() => {\n    if (product.quantityBruteCVA > 15 && product.quantityBruteCVA <= 20) {\n      return \"yellow\";\n    }\n    if (product.quantityBruteCVA > 10 && product.quantityBruteCVA <= 15) {\n      return \"#ffdb4c\";\n    }\n    if (product.quantityBruteCVA > 5 && product.quantityBruteCVA <= 10) {\n      return \" orange\";\n    }\n    if (product.quantityBruteCVA > 0 && product.quantityBruteCVA <= 5) {\n      return \"#c44e14b8\";\n    }\n    if (product.quantityBruteCVA == 0) {\n      return \"red\";\n    } else {\n      return \"green\";\n    }\n  }, [product]);\n  const isEmptyCC = React.useCallback(() => {\n    if (product.quantityCCCVA > 15 && product.quantityCCCVA <= 20) {\n      return \"yellow\";\n    }\n    if (product.quantityCCCVA > 10 && product.quantityCCCVA <= 15) {\n      return \"#ffdb4c\";\n    }\n    if (product.quantityCCCVA > 5 && product.quantityCCCVA <= 10) {\n      return \" orange\";\n    }\n    if (product.quantityCCCVA > 0 && product.quantityCCCVA <= 5) {\n      return \"#c44e14b8\";\n    }\n    if (product.quantityCCCVA == 0) {\n      return \"red\";\n    } else {\n      return \"green\";\n    }\n\n    const isEmptyCondVal = React.useCallback(() => {\n      if (product.condval == 0) {\n        return \"red\";\n      } else {\n        return \"green\";\n      }\n    }, [product]);\n  }, [product]);\n  const disable = React.useCallback(() => {\n    if (isSpecialProductHandle(product)) {\n      if (\n        product.quantityBruteCVA == 0 &&\n        (product.quantityCCCVA == 0 || product.quantityCCCVA == null) &&\n        product.condval == 0\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      if (\n        product.quantityBruteCVA == 0 &&\n        (product.quantityCCCVA == 0 || product.quantityCCCVA == null)\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, [product]);\n  return (\n    <>\n      <ListGroup.Item\n        className=\"mb-2 mr-3\"\n        style={{\n          width: \"100%\",\n          border: \"1px solid gray\",\n          background: \"whitesmoke\",\n          borderLeft: `10px solid ${isEmptyBrute()}`,\n        }}\n      >\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <div\n            className={` ${!product.id ? \"product-loading\" : \"\"}`}\n            style={{\n              boxShadow:\n                product && itemOnBasket\n                  ? \"15px 10px 15px rgba(0, 0, 0, .07)\"\n                  : \"none\",\n            }}\n          >\n            <div\n              style={{\n                width: 10,\n                height: 4,\n                background: `${isEmptyCC()}`,\n              }}\n            ></div>\n          \n            <div>\n              <div>{product.name}</div>\n              <div class=\"badge badge-primary\">\n                {product?.fournisseur?.name}\n              </div>\n              <br />\n              {/**    <strong>\n              {product.type}:{product.quantityBruteCVA}\n\n             \n            </strong>\n            <br />\n            {product.type == \"FLACON\" && (\n              <>\n                <strong>ML: {product.quantityCCCVA} ml</strong>\n                <br />\n                \n              </>           disabled={ \n              product.quantityBruteCVA === 0 && (product.quantityCCCVA == 0 || product.quantityCCCVA == null) && product.condval==0\n            }\n            )}\n            <strong>CondML: {product.condml}- Condval:{product.condval}</strong> */}\n            </div>{\" \"}\n          </div>\n          <div>\n            {product.id && (\n              <>\n                <button\n                  disabled={\n                    product.quantityBruteCVA == 0 &&\n                    (product.quantityCCCVA == 0 ||\n                      product.quantityCCCVA == null)\n                  }\n                  className={`mt-3 ${\n                    itemOnBasket\n                      ? \"btn btn-danger btn-sm\"\n                      : \"btn btn-green btn-sm\"\n                  }`}\n                  onClick={handleAddToBasket}\n                >\n                  {!itemOnBasket ? \"Ajouter\" : \"Retirer\"}\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      </ListGroup.Item>\n    </>\n  );\n};\n\nexport default React.memo(ProductItem);\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  addQtyFromMagasinItem,\n  minusQtyFromMagasinItem,\n  setQtyFromMagasinItem,\n} from \"../../../../store/frommagasin/actions/frommagasin\";\n\nimport {\n  canBuyCCFromCva,\n  hasCondVal,\n} from \"../../../../store/functions/function\";\n\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\n\nconst FromMagasinItemControl = ({\n  product,\n  setRealQttCC,\n  setRealQtt,\n  realQtt,\n  realQttCC,\n}) => {\n  const dispatch = useDispatch();\n  const onAddQtyBrute = (value) => {\n    dispatch(setQtyFromMagasinItem(product.id, value));\n  };\n  function copy(object) {\n    var output, value, key;\n    output = Array.isArray(object) ? [] : {};\n    for (key in object) {\n      value = object[key];\n      output[key] = typeof value === \"object\" ? copy(value) : value;\n    }\n    return output;\n  }\n  const getValue = () => {\n    return canBuyCCFromCva(copy(product)) == true\n      ? product?.quantityBruteCVA * 1\n      : product?.quantityBruteCVA * 1 - 1;\n  };\n  const getValueCC = () => {\n    return hasCondVal(copy(product)) == true\n      ? product?.condval * 1\n      : product?.condval * 1 - 1;\n  };\n  const checkVal = () => {\n    if (isSpecialProductHandle(product)) {\n      return getValueCC();\n    } else {\n      return getValue();\n    }\n  };\n  const isEnough = () => {\n    return (\n      product.quantityCCCVA - product.qttByCC < 0 &&\n      product.quantityBruteCVA - 1 - product.quantityParProduct * 1 < 0\n    );\n  };\n  return (\n    <div className=\"basket-item-control\">\n      <NumberInput\n        inputMode={\"numeric\"}\n        w={28}\n        step={1}\n        bg={\"whitesmoke\"}\n        min={0}\n        defaultValue={product?.quantityParProduct}\n        onChange={(value) => {\n          if ((value == \"\")) {\n            setRealQtt(0);\n            onAddQtyBrute(0);\n          } else {\n            setRealQtt(value);\n            onAddQtyBrute(value);\n          }\n\n          if (isEnough(product)) {\n            alert(\"Le stock ne satisfait pas votre commande\");\n          }\n        }}\n        max={product.quantityBruteCVA}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n    </div>\n  );\n};\nexport default FromMagasinItemControl;\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addQtyFromMagasinPortionItem,\n  minusQtyFromMagasinPortionItem,\n} from \"../../../../store/frommagasin/actions/frommagasin\";\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\n\nconst FromMagasinItemPartial = ({\n  product,\n  setRealQttCC,\n  setRealQtt,\n  realQtt,\n  realQttCC,\n}) => {\n  const dispatch = useDispatch();\n  const ref = useRef();\n  const { frommagasins } = useSelector((state) => ({\n    frommagasins: state.frommagasins,\n  }));\n  const isEnough = () => {\n    return (\n      product.quantityCCCVA  - product.qttByCC < 0 &&\n      product.quantityBruteCVA - 1 - product.quantityParProduct * 1 < 0\n    );\n  };\n  const onAddQtyPortion = (value) => {\n    dispatch(addQtyFromMagasinPortionItem(product.id, value));\n  };\n  return (\n    <div className=\"basket-item-control\">\n      <NumberInput\n        inputMode={\"numeric\"}\n        w={28}\n        step={1}\n        ref={ref}\n        bg={\"whitesmoke\"}\n        onChange={(value) => {\n          setRealQttCC(value);\n          if (value == \"\") {\n            onAddQtyPortion(0);\n            setRealQttCC(0);\n          } else {\n            setRealQttCC(value * 1);\n            onAddQtyPortion(value * 1);\n          }\n          if (isEnough() || product.quantityBruteCVA - 1 < 0) {\n            alert(\"Le stock ne satisfait pas votre commande\");\n          }\n        }}\n        min={0}\n        defaultValue={product.qttByCC}\n        max={!isEnough() ? product.doseDefault - 1 : product.quantityCCCVA}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n      {/*<button\n        className=\"btn btn-dark btn-sm\"\n        data-testid=\"from-magasin-item-partial-plus\"\n        disabled={\n          Number(product.qttByCC) == Number(product.doseDefault - 1) ||\n          (product.quantityParProduct == product.quantityBruteCVA &&\n            product.quantityCCCVA == 0)\n        }\n        onClick={onAddQtyPortion}\n        type=\"button\"\n      >\n        +\n      </button>\n      <span className=\"mx-1\" data-testid=\"counter-partial\">{product.qttByCC}</span>\n      <button\n        className=\"btn btn-dark btn-sm\"\n        data-testid=\"from-magasin-item-partial-minus\"\n        disabled={product.qttByCC == 0}\n        onClick={onMinusQtyPortiion}\n        type=\"button\"\n      >\n        -\n      </button>*/}\n    </div>\n  );\n};\nexport default FromMagasinItemPartial;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  addQtyFromMagasinDoseItem,\n  minusQtyFromMagasinDoseItem,\n} from \"../../../../store/frommagasin/actions/itanewMagasin\";\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\nexport const ItaNewInputDose = ({\n  product,\n  setRealQttCC,\n  setRealQtt,\n  realQtt,\n  realQttCC,\n}) => {\n  const dispatch = useDispatch();\n  const onAddQtyPortion = (value) => {\n    dispatch(addQtyFromMagasinDoseItem(product.id, value));\n  };\n\n  const isEnough = () => {\n    return (\n      product.quantityCCCVA  - product.qttByCC < 0 &&\n      product.quantityBruteCVA - 1 - product.quantityParProduct * 1 < 0\n    );\n  };\n  return (\n    <div className=\"basket-item-control\">\n      <NumberInput\n        inputMode={\"decimal\"}\n        w={28}\n        step={1}\n        bg={\"whitesmoke\"}\n        onChange={(value) => {\n          onAddQtyPortion(value);\n          setRealQttCC(value);\n          if(isEnough()){\n            alert(\"Le stock ne satisfait pas votre commande\");\n          }\n        }}\n        min={0}\n        defaultValue={0}\n        max={!isEnough() ? product.doseDefault : product.quantityCCCVA}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n    </div>\n  );\n};\n","import {\n  MINUS_QTY_PORTION__DOSE_ITA_NEW_FROM_MAGASIN_ITEM,\n  ADD_QTY_PORTION_DOSE_UTA_NEW_FROM_MAGASIN_ITEM,\n  ADD_QTY_PORTION_DOSE_SOVAX_FROM_MAGASIN_ITEM,\n  MINUS_QTY_PORTION__DOSE_SOVAX_FROM_MAGASIN_ITEM,\n  ADD_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM,\n  MINUS_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM,\n} from \"../constants\";\n\nexport const addQtyFromMagasinDoseItem = (id, value) => ({\n  type: ADD_QTY_PORTION_DOSE_UTA_NEW_FROM_MAGASIN_ITEM,\n  payload: { id: id, value: value },\n});\n\nexport const addQtyFromMagasinSovaxItem = (id, value) => ({\n  type: ADD_QTY_PORTION_DOSE_SOVAX_FROM_MAGASIN_ITEM,\n  payload: { id: id, value: value },\n});\n\nexport const addQtyFromMagasinPhytoCondItem = (id, value) => ({\n  type: ADD_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM,\n  payload: {\n    id: id,\n    value: value,\n  },\n});\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  addQtyFromMagasinPhytoCondItem,\n  minusQtyFromMagasinPhytoCondItem,\n} from \"../../../../store/frommagasin/actions/itanewMagasin\";\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\nexport const PhytoConditionnementInput = ({ product }) => {\n  const dispatch = useDispatch();\n  const onAddQtyPortion = (value) => {\n    dispatch(addQtyFromMagasinPhytoCondItem(product.id, value));\n  };\n  const total = () => {\n    if (product.quantityBruteCVA > 0) {\n      return product.condml * 1;\n    } else {\n      if (product.condval > 0) {\n        return product.condml;\n      } else {\n        return product.quantityCCCVA * 1;\n      }\n    }\n  };\n  return (\n    <div className=\"basket-item-control\">\n      <NumberInput\n        inputMode={\"decimal\"}\n        w={28}\n        step={product?.qttccpvcheckMaxente}\n        bg={\"whitesmoke\"}\n        onChange={(value) => {\n          onAddQtyPortion(value);\n        }}\n        min={0}\n        defaultValue={0}\n     //   max={total()}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  addQtyFromMagasinSovaxItem,\n  minusQtyFromMagasinSovaxItem,\n} from \"../../../../store/frommagasin/actions/itanewMagasin\";\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\nexport const SovaxInputDose = ({\n  product,\n  setRealQttCC,\n  setRealQtt,\n  realQtt,\n  realQttCC,\n}) => {\n  const dispatch = useDispatch();\n  const onAddQtyPortion = (value) => {\n    dispatch(addQtyFromMagasinSovaxItem(product.id, value));\n  };\n  const isEnough = () => {\n    return (\n      product.quantityCCCVA - product.qttByCC < 0 &&\n      product.quantityBruteCVA - 1 - product.quantityParProduct * 1 < 0\n    );\n  };\n  return (\n    <div className=\"basket-item-control\">\n    {/**{product.quantityCCCVA - product.qttByCC}**/}\n      <NumberInput\n        inputMode={\"numeric\"}\n        w={28}\n        step={1}\n        bg={\"whitesmoke\"}\n        onChange={(value) => {\n          onAddQtyPortion(value);\n          setRealQttCC(value);\n          if (isEnough()) {\n            alert(\"Le stock ne satisfait pas votre commande\");\n          }\n        }}\n        min={0}\n        defaultValue={0}\n        max={!isEnough() ? product.doseDefault/2 : product.quantityCCCVA / 2}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FromMagasinItemControl from \"./FromMagasinItemControl\";\nimport FromMagasinItemPartial from \"./FromMagasinItemPartial\";\nimport { displayMoney, checkHasExistText } from \"../../../../utils/functions\";\nimport { ItaNewInputDose } from \"./ItaNewInputDose\";\nimport { PhytoConditionnementInput } from \"./PhytoConditionnementInput\";\nimport { SovaxInputDose } from \"./SovaxInputDose\";\nimport useFromMagasin from \"../../../../hooks/useFromMagasin\";\nconst FromMagasinItem = ({ product }) => {\n  const [realQttCC, setRealQttCC] = useState(null);\n  const [realQtt, setRealQtt] = useState(null);\n  const frommagasins = useSelector((state) => state.frommagasins);\n  const dispatch = useDispatch();\n  const { isItemFromMagasin, addFromMagasin } = useFromMagasin(\n    frommagasins,\n    dispatch\n  );\n  \n\n  const itemOnBasket = isItemFromMagasin\n    ? isItemFromMagasin(product.id)\n    : false;\n  /* useEffect(()=>{\n    if(!itemOnBasket){\n      product.qttByCC =0;\n      product.quantityParProduct=0;\n    }\n  },[itemOnBasket])*/\n  const handleAddToBasket = () => {\n    if (addFromMagasin) addFromMagasin(product);\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center border   mb-2 p-2\">\n        <div style={{ width: \"45%\" }}>\n          <p className=\"text-blue\">{product.name}</p>\n          <span className=\"text-lowercase\">\n            <strong>\n              {product.quantityParProduct != 0 &&\n                displayMoney(product.prixVente)}\n              {product.quantityParProduct == 0 && product.prixParCC != 0 && (\n                <>\n                  {product.prixqttccvente != null && product.prixqttccvente != 0\n                    ? displayMoney(product.prixqttccvente)\n                    : displayMoney(product.prixParCC)}\n                </>\n              )}\n              {product.quantityParProduct != 0 &&\n                \" x \" + product.quantityParProduct + \" \" + product.type}{\" \"}\n              {product.prixqttccvente == null &&\n                product.prixqttccvente == 0 && (\n                  <>\n                    {product.qttByCC != 0 &&\n                      (product.quantityParProduct == 0 ? \" x \" : \"+\") +\n                        product.qttByCC +\n                        \"ML\"}\n                  </>\n                )}\n            </strong>\n          </span>\n        </div>\n        <div className=\"text-inline text-center\">\n          <h5 className=\"mb-1\">{product.type}</h5>\n          <FromMagasinItemControl\n            product={product}\n            setRealQttCC={setRealQttCC}\n            setRealQtt={setRealQtt}\n            realQtt={realQtt}\n            realQttCC={realQttCC}\n          />\n        </div>\n        {product.type === \"FLACON\" && (\n          <div className=\"text-inline text-center\">\n            <h5 className=\"mb-1\">{product.categoryId == 3 ? \"DOSE\" : \"ML\"}</h5>\n            {checkHasExistText(product.name, \"ita new\") && (\n              <ItaNewInputDose\n                product={product}\n                setRealQttCC={setRealQttCC}\n                setRealQtt={setRealQtt}\n                realQtt={realQtt}\n                realQttCC={realQttCC}\n              />\n            )}\n            {checkHasExistText(product.name, \"sovax\") && (\n              <SovaxInputDose\n                setRealQttCC={setRealQttCC}\n                setRealQtt={setRealQtt}\n                realQtt={realQtt}\n                realQttCC={realQttCC}\n                product={product}\n              />\n            )}\n            {product.condml == 0 &&\n              product.qttccpvente == 0 &&\n              !checkHasExistText(product.name, \"sovax\") &&\n              !checkHasExistText(product.name, \"ita new\") && (\n                <FromMagasinItemPartial\n                  setRealQttCC={setRealQttCC}\n                  setRealQtt={setRealQtt}\n                  realQtt={realQtt}\n                  realQttCC={realQttCC}\n                  product={product}\n                />\n              )}\n            {product.condml !== 0 && product.qttccpvente !== 0 && (\n              <PhytoConditionnementInput product={product} />\n            )}\n          </div>\n        )}\n\n        <div>\n            {itemOnBasket && (\n              <button\n                onClick={handleAddToBasket}\n                className=\"btn btn-danger btn-xs text-right\"\n              >\n                X\n              </button>\n            )}\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FromMagasinItem;\n","import * as actionTypesFor from \"action-names\";\n\nexport default actionTypesFor;\n","export default function makeScope(\n  config,\n  reducerName\n) {\n  return config.resourceName + \".\" + reducerName;\n}\n","import * as is from \"ramda/src/is\"\n\nimport makeScope from \"./makeScope\";\n\nexport default function(config, reducerName, record) {\n  var scope = makeScope(config, reducerName);\n  var isArray = is(Array, record);\n\n  if (isArray)\n    throw new TypeError(scope + \": Expected record not to be an array\");\n}\n","\nconst CREATE_ERROR = \"createError\";\nconst CREATE_START = \"createStart\";\nconst CREATE_SUCCESS = \"createSuccess\";\nconst DELETE_ERROR = \"deleteError\";\nconst DELETE_START = \"deleteStart\";\nconst DELETE_SUCCESS = \"deleteSuccess\";\nconst FETCH_SUCCESS = \"fetchSuccess\";\nconst UPDATE_ERROR = \"updateError\";\nconst UPDATE_START = \"updateStart\";\nconst UPDATE_SUCCESS = \"updateSuccess\";\n\nexport default {\n  DEFAULT_KEY: \"id\",\n  STORE_LIST: \"STORE_LIST\",\n  STORE_MAP: \"STORE_MAP\",\n  REDUCER_NAMES: {\n    CREATE_ERROR,\n    CREATE_START,\n    CREATE_SUCCESS,\n    DELETE_ERROR,\n    DELETE_START,\n    DELETE_SUCCESS,\n    FETCH_SUCCESS,\n    UPDATE_ERROR,\n    UPDATE_START,\n    UPDATE_SUCCESS\n  },\n  SPECIAL_KEYS: {\n    BUSY: \"busy\",\n    CLIENT_GENERATED_ID: \"_cid\",\n    DELETED: \"deleted\",\n    PENDING_CREATE: \"pendingCreate\",\n    PENDING_UPDATE: \"pendingUpdate\"\n  }\n};\n","import merge from \"ramda/src/merge\";\nimport * as invariant from \"invariant\";\n\nimport actionTypesFor from \"./actionTypesFor\";\nimport assertNotArray from \"./utils/assertNotArray\";\nimport constants from \"./constants\";\nimport getDefaultConfig from \"./getDefaultConfig\";\n\n\nfunction actionCreatorsFor(resourceName, config) {\n  if (resourceName == null)\n    throw new Error(\"actionCreatorsFor: Expected resourceName\");\n\n  config = config || getDefaultConfig(resourceName);\n  config = merge(config, {resourceName});\n\n  const actionTypes = actionTypesFor(resourceName);\n  const key = config.key || constants.DEFAULT_KEY;\n\n  function assertError(actionCreatorName, error) {\n    invariant(error != null, \"Expected error in \" + actionCreatorName);\n  }\n\n  function assertOneRecord(actionCreatorName, record) {\n    invariant(record != null, \"Expected record in \" + actionCreatorName);\n    assertNotArray(config, \"createStart\", record);\n   \n  }\n\n  function assertManyRecords(actionCreatorName, records) {\n    invariant(records != null, \"Expected records \" + actionCreatorName);\n  }\n\n  return {\n    fetchStart(data) {\n      return {\n        data: data,\n        type: actionTypes.fetchStart\n      };\n    },\n\n    fetchSuccess(records, data) {\n      var name = \"fetchSuccess\";\n      assertManyRecords(name, records);\n\n      return {\n        data: data,\n        records: records,\n        type: actionTypes.fetchSuccess\n      };\n    },\n\n    fetchError(error, data) {\n      var name = \"fetchError\";\n      assertError(name, error);\n\n      return {\n        data: data,\n        error: error,\n        type: actionTypes.fetchError\n      };\n    },\n\n    createStart(record, data) {\n      var name = \"createStart\";\n      assertOneRecord(name, record);\n\n      return {\n        data: data,\n        record: record,\n        type: actionTypes.createStart\n      };\n    },\n\n    createSuccess(record, clientGeneratedKey, data) {\n      var name = \"createSuccess\";\n      assertOneRecord(name, record);\n\n      return {\n        cid: clientGeneratedKey,\n        data: data,\n        record: record,\n        type: actionTypes.createSuccess\n      };\n    },\n\n    createError(error, record, data) {\n      var name = \"createError\";\n      assertError(name, error);\n      assertOneRecord(name, record);\n\n      return {\n        data: data,\n        error: error,\n        record: record,\n        type: actionTypes.createError\n      };\n    },\n\n    updateStart(record, data) {\n      var name = \"updateStart\";\n      assertOneRecord(name, record);\n\n      return {\n        data: data,\n        record: record,\n        type: actionTypes.updateStart\n      };\n    },\n\n    updateSuccess(record, data) {\n      var name = \"updateSuccess\";\n      assertOneRecord(name, record);\n\n      return {\n        data: data,\n        record: record,\n        type: actionTypes.updateSuccess\n      };\n    },\n\n    updateError(error, record, data) {\n      var name = \"updateError\";\n      assertError(name, error);\n      assertOneRecord(name, record);\n\n      return {\n        data: data,\n        error: error,\n        record: record,\n        type: actionTypes.updateError\n      };\n    },\n\n    deleteStart(record, data) {\n      var name = \"deleteStart\";\n      assertOneRecord(name, record);\n\n      return {\n        data: data,\n        record: record,\n        type: actionTypes.deleteStart\n      };\n    },\n\n    deleteSuccess(record, data) {\n      var name = \"deleteSuccess\";\n      assertOneRecord(name, record);\n\n      return {\n        data: data,\n        record: record,\n        type: actionTypes.deleteSuccess\n      };\n    },\n\n    deleteError(error, record, data) {\n      var name = \"deleteError\";\n      assertError(name, error);\n      assertOneRecord(name, record);\n\n      return {\n        data: data,\n        error: error,\n        record: record,\n        type: actionTypes.deleteError\n      };\n    }\n  };\n}\n\nexport default actionCreatorsFor;\n","\nexport default function getDefaultConfig(resourceName) {\n  return {\n    key: \"id\",\n    resourceName\n  };\n}\n","import * as merge from \"ramda/src/merge\"\n\nimport actionTypesFor from \"../../actionTypesFor\";\nimport constants from \"../../constants\";\n\n\nfunction reducersFor(resourceName, args = {}, emptyState, reducers) {\n  if (resourceName == null)\n    throw new Error(\"reducersFor: Expected resourceName\");\n\n  var defaults = {\n    key: constants.DEFAULT_KEY,\n    resourceName: resourceName\n  };\n\n  var config = merge(defaults, args);\n\n  return function getReducer(state, action) {\n    state = state || emptyState;\n\n    if (action == null)\n      throw new Error(resourceName + \" reducers: Expected action\");\n\n    var actionTypes = actionTypesFor(resourceName);\n    var record = action.record;\n\n    switch (action.type) {\n      case actionTypes.fetchSuccess:\n        return reducers.fetchSuccess(\n          config,\n          state,\n          action.records,\n          emptyState,\n          action.data && action.data.replace\n        );\n\n      case actionTypes.createStart:\n        return reducers.createStart(config, state, record);\n\n      case actionTypes.createSuccess:\n        return reducers.createSuccess(config, state, record, action.cid);\n\n      case actionTypes.createError:\n        return reducers.createError(config, state, record);\n\n      case actionTypes.updateStart:\n        return reducers.updateStart(config, state, record);\n\n      case actionTypes.updateSuccess:\n        return reducers.updateSuccess(config, state, record);\n\n      case actionTypes.updateError:\n        return reducers.updateError(config, state, record);\n\n      case actionTypes.deleteStart:\n        return reducers.deleteStart(config, state, record);\n\n      case actionTypes.deleteSuccess:\n        return reducers.deleteSuccess(config, state, record);\n\n      case actionTypes.deleteError:\n        return reducers.deleteError(config, state, record);\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport default reducersFor;\n","import assertNotArray from \"../utils/assertNotArray\";\nimport makeScope from \"../utils/makeScope\";\n;\n\nexport default function invariants(\n  baseArgs,\n  extraArgs\n) {\n  var config = extraArgs.config;\n\n  if (!config.resourceName) throw new Error(\"Expected config.resourceName\");\n\n  const scope = makeScope(config, baseArgs.reducerName);\n\n  if (!config.key) throw new Error(scope + \": Expected config.key\");\n  if (!extraArgs.record) throw new Error(scope + \": Expected record/s\");\n\n  extraArgs.assertValidStore(scope, extraArgs.current);\n\n  if (!baseArgs.canBeArray) {\n    assertNotArray(extraArgs.config, baseArgs.reducerName, extraArgs.record);\n  }\n\n // assertHasKey(extraArgs.config, scope, extraArgs.record);\n}\n","import * as reject from \"ramda/src/reject\"\nexport default function remove(\n  config,\n  current,\n  addedRecord,\n) {\n  var key = config.key;\n\n  function predicate(record) {\n    var recordKey = record[key];\n    var isSameKey = addedRecord[key] === recordKey;\n    return isSameKey;\n  }\n\n  return reject(predicate, current);\n}\n","import * as is from \"ramda/src/is\"\n\nexport default function wrapArray(recordOrRecords) {\n  var isArray = is(Array, recordOrRecords);\n  return isArray ? recordOrRecords : [recordOrRecords];\n}\n","import assert from \"./store/assert\";\nimport remove from \"./store/remove\";\nimport merge from \"./store/merge\";\n\nexport default {\n  assert,\n  remove,\n  merge\n};\n","import * as is from \"ramda/src/is\"\n\nexport default function assert(scope, current) {\n  var isArray = is(Array, current);\n  if (!isArray) throw new Error(scope + \": Expected current to be an array\");\n}\n","import wrapArray from \"../../../utils/wrapArray\";\n\n/*\nReplaces an existing record in a list\nOr adds if not there\n*/\nexport default function merge(current, records, key) {\n  records = wrapArray(records);\n  var recordMap = {};\n  var indexMap = {};\n  var newRecords = current.slice(0);\n\n  current.forEach(function(record, index) {\n    var recordKey = record[key];\n    if (recordKey == null) throw new Error(\"Expected record to have \" + key);\n    recordMap[recordKey] = record;\n    indexMap[recordKey] = index;\n  });\n\n  records.forEach(function(record) {\n    var recordId = record[key];\n    if (recordMap[recordId]) {\n      newRecords[indexMap[recordId]] = record;\n    } else {\n      indexMap[recordId] = newRecords.length;\n      newRecords.push(record);\n    }\n    recordMap[recordId] = record;\n  });\n\n  return newRecords;\n}\n","import invariants from '../invariants';\nimport store from './store';\n\nexport default function invariantsList(invariantArgs, config, current, record) {\n  var extra = {\n    assertValidStore: store.assert,\n    config,\n    current,\n    record,\n  };\n  invariants(invariantArgs, extra);\n}\n","import constants from \"../../../constants\";\nimport invariants from \"../invariants\";\nimport remove from \"../store/remove\";\n\nvar reducerName = constants.REDUCER_NAMES.CREATE_ERROR;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function error(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  return remove(config, current, record);\n}\n","import * as merge from \"ramda/src/merge\"\nimport constants from \"../../../constants\";\n\nexport function prepareRecord(record) {\n  var recordStatus = {\n    [constants.SPECIAL_KEYS.BUSY]: true,\n    [constants.SPECIAL_KEYS.PENDING_CREATE]: true\n  };\n\n  return merge(record, recordStatus);\n}\n","import {prepareRecord} from \"../../common/create/start\";\nimport constants from \"../../../constants\";\nimport invariants from \"../invariants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.CREATE_START;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function start(\n  config,\n  current,\n  record,\n) {\n  invariants(invariantArgs, config, current, record);\n\n  // mark record as unsaved and busy\n  var newRecord = prepareRecord(record);\n\n  return current;\n}\n","import constants from \"../../../constants\";\nimport invariants from \"../invariants\";\n\n\nvar reducerName = constants.REDUCER_NAMES.CREATE_SUCCESS;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function success(\n  config,\n  current,\n  addedRecord,\n  clientGeneratedKey\n) {\n  invariants(invariantArgs, config, current, addedRecord);\n\n  var key = config.key;\n  var done = false;\n\n  // Update existing records\n  var updatedCollection = current.map(function(record) {\n    var recordKey = record[key];\n    if (recordKey == null) throw new Error(\"Expected record to have \" + key);\n    var isSameKey = recordKey === addedRecord[key];\n    var isSameClientGetKey =\n      clientGeneratedKey != null && clientGeneratedKey === recordKey;\n    if (isSameKey || isSameClientGetKey) {\n      done = true;\n      return addedRecord;\n    } else {\n      return record;\n    }\n  });\n\n  // Add if not updated\n  if (!done) {\n    updatedCollection = updatedCollection.concat([addedRecord]);\n  }\n\n  return updatedCollection;\n}\n","import * as find from \"ramda/src/find\"\n\nexport default function findByKey(collection, key, id) {\n  function predicate(record) {\n    return record[key] === id;\n  }\n\n  return find(predicate, collection);\n}\n","import * as omit from \"ramda/src/omit\"\n\nimport constants from \"../../../constants\";\nimport findByKey from \"../../../utils/findByKey\";\nimport invariants from \"../invariants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.DELETE_ERROR;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function error(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  var key = config.key;\n  var deleteId = record[key];\n  var deleteRecord = findByKey(current, key, deleteId);\n  deleteRecord = omit([\"deleted\", \"busy\"], deleteRecord);\n\n  return store.merge(current, deleteRecord, key);\n}\n","import * as merge from \"ramda/src/merge\"\nimport constants from \"../../../constants\";\n\nexport function prepareRecord(record) {\n  var recordStatus = {\n    [constants.SPECIAL_KEYS.DELETED]: true,\n    [constants.SPECIAL_KEYS.BUSY]: true\n  };\n\n  return merge(record, recordStatus);\n}\n","import {prepareRecord} from \"../../common/delete/start\";\nimport constants from \"../../../constants\";\nimport findByKey from \"../../../utils/findByKey\";\nimport invariants from \"../invariants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.DELETE_START;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function start(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  var key = config.key;\n  var deleteId = record[key];\n\n  var deleteRecord = findByKey(current, key, deleteId);\n  deleteRecord = prepareRecord(deleteRecord);\n\n  return store.merge(current, deleteRecord, key);\n}\n","import * as reject from \"ramda/src/reject\"\n\nimport invariants from \"../invariants\";\nimport constants from \"../../../constants\";\n\nvar reducerName = constants.REDUCER_NAMES.DELETE_SUCCESS;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function success(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  var key = config.key;\n  var deleteId = record[key];\n\n  function predicate(existingRecord) {\n    return deleteId == existingRecord[key];\n  }\n\n  return reject(predicate, current);\n}\n","import * as has from \"ramda/src/has\"\nimport * as all from \"ramda/src/all\"\n\nexport default function(config, reducerName, records) {\n  // All given records must have a key\n  var haskey = has(config.key);\n  var allKeys = all(haskey, records);\n\n  if (!allKeys) {\n    throw new Error(\n      reducerName +\n        \": Expected all records to have a value for the store's key `\" +\n        config.key +\n        \"`\"\n    );\n  }\n}\n","import assertAllHaveKeys from \"../../../utils/assertAllHaveKeys\";\nimport constants from \"../../../constants\";\nimport store from \"../store\";\nimport wrapArray from \"../../../utils/wrapArray\";\nimport invariants from \"../invariants\";\n\nconst reducerName = constants.REDUCER_NAMES.FETCH_SUCCESS;\nconst invariantArgs = {\n  reducerName,\n  canBeArray: true\n};\n\nexport default function success(\n  config,\n  current,\n  records,\n  emptyState,\n  replace = false\n){\n  invariants(invariantArgs, config, current, records);\n\n  // wrap array\n  records = wrapArray(records);\n\n  // All given records must have a key\n  assertAllHaveKeys(config, reducerName, records);\n\n  return store.merge(replace ? emptyState : current, records, config.key);\n}\n","import * as dissoc from \"ramda/src/dissoc\"\nimport constants from \"../../../constants\";\n\nexport function prepareRecord(record) {\n  return dissoc(constants.SPECIAL_KEYS.BUSY, record);\n}\n","import {prepareRecord} from \"../../common/update/error\";\nimport constants from \"../../../constants\";\nimport findByKey from \"../../../utils/findByKey\";\nimport invariants from \"../invariants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.UPDATE_ERROR;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function error(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  // We don\"t want to rollback\n  var key = config.key;\n  var updatedId = record[key];\n  var updatedRecord = findByKey(current, key, updatedId);\n\n  if (updatedRecord == null) return current;\n\n  updatedRecord = prepareRecord(updatedRecord);\n\n  return store.merge(current, updatedRecord, key);\n}\n","import * as merge from \"ramda/src/merge\"\nimport constants from \"../../../constants\";\n\nexport function prepareRecord(record) {\n  var recordStatus = {\n    [constants.SPECIAL_KEYS.BUSY]: true,\n    [constants.SPECIAL_KEYS.PENDING_UPDATE]: true\n  };\n\n  return merge(record, recordStatus);\n}\n","import {prepareRecord} from \"../../common/update/start\";\nimport constants from \"../../../constants\";\nimport invariants from \"../invariants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.UPDATE_START;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function start(\n  config,\n  current,\n  record\n){\n  invariants(invariantArgs, config, current, record);\n\n  // mark record as unsaved and busy\n  var newRecord = [prepareRecord(record)];\n\n  // replace record\n  return store.merge(current, newRecord, config.key);\n}\n","import constants from \"../../../constants\";\nimport invariants from \"../invariants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.UPDATE_SUCCESS;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function success(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  return store.merge(current, record, config.key);\n}\n","import * as merge from \"ramda/src/merge\"\n\nimport commonReducersFor from \"../common/reducersFor\";\nimport createError from \"./create/error\";\nimport createStart from \"./create/start\";\nimport createSuccess from \"./create/success\";\nimport deleteError from \"./delete/error\";\nimport deleteStart from \"./delete/start\";\nimport deleteSuccess from \"./delete/success\";\nimport fetchSuccess from \"./fetch/success\";\nimport updateError from \"./update/error\";\nimport updateStart from \"./update/start\";\nimport updateSuccess from \"./update/success\";\nconst baseReducers = {\n  createError,\n  createStart,\n  createSuccess,\n  deleteError,\n  deleteStart,\n  deleteSuccess,\n  fetchSuccess,\n  updateError,\n  updateStart,\n  updateSuccess\n};\n\nexport default function reducersFor(resourceName, args = {}, deps) {\n  const reducers = merge(baseReducers, deps);\n  return commonReducersFor(resourceName, args, [], reducers);\n}\n","import reducersFor from \"./list/reducersFor\";\n\nexport default {\n  reducersFor\n};\n","import assert from \"./store/assert\";\nimport merge from \"./store/merge\";\nimport remove from \"./store/remove\";\n\nexport default {\n  assert,\n  merge,\n  remove\n};\n","import * as is from \"ramda/src/is\"\n\nexport default function assertValidStore(\n  scope,\n  current\n) {\n  if (!is(Object, current))\n    throw new Error(scope + \": Expected current to be an object\");\n}\n","import * as merge from \"ramda/src/merge\"\n\n/*\nAdds or replace one record\n*/\nexport default function replace(\n  config,\n  current,\n  record\n) {\n  var key = config.key;\n  var recordKey = record[key];\n\n  return merge(current, {[recordKey]: record});\n}\n","import * as omit from \"ramda/src/omit\"\n\nexport default function remove(\n  config,\n  current,\n  record\n) {\n  var key = config.key;\n  var recordKey = record[key];\n\n  return omit([recordKey], current);\n}\n","import invariants from \"../invariants\";\nimport store from \"./store\";\n\nexport default function invariantsMap(\n  invariantArgs,\n  config,\n  current,\n  record\n) {\n  var extra = {\n    assertValidStore: store.assert,\n    config,\n    current,\n    record\n  };\n\n  invariants(invariantArgs, extra);\n}\n","import constants from \"../../../constants\";\nimport invariants from \"../invariants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.CREATE_ERROR;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function error(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n  return store.remove(config, current, record);\n}\n","import {prepareRecord} from \"../../common/create/start\";\nimport constants from \"../../../constants\";\nimport invariants from \"../invariants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.CREATE_START;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function start(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  // mark record as unsaved and busy\n  var newRecord = prepareRecord(record);\n\n  return current;\n}\n","import * as dissoc from \"ramda/src/dissoc\"\nimport * as lensProp from \"ramda/src/lensProp\"\nimport * as set from \"ramda/src/set\"\n\nimport constants from \"../../../constants\";\nimport invariants from \"../invariants\";\nvar reducerName = constants.REDUCER_NAMES.CREATE_SUCCESS;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function success(\n  config,\n  current,\n  addedRecord,\n  clientGeneratedKey,\n) {\n  invariants(invariantArgs, config, current, addedRecord);\n\n  var key = config.key;\n  var addedRecordKey = addedRecord[key];\n  var addedRecordKeyLens = lensProp(addedRecordKey);\n  var currentWithoutClientGeneratedKey = dissoc(clientGeneratedKey, current);\n\n  return set(\n    addedRecordKeyLens,\n    addedRecord,\n    currentWithoutClientGeneratedKey\n  );\n}\n","import * as omit from \"ramda/src/omit\"\nimport * as merge from \"ramda/src/merge\"\n\nimport constants from \"../../../constants\";\nimport invariants from \"../invariants\";\n\nvar reducerName = constants.REDUCER_NAMES.DELETE_ERROR;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function error(\n  config,\n  current,\n  record\n){\n  invariants(invariantArgs, config, current, record);\n\n  var key = config.key;\n  var deleteId = record[key];\n\n  // Find the record\n  var deleteRecord = current[deleteId];\n\n  if (deleteRecord == null) {\n    return current;\n  } else {\n    // Remove deleted and busy\n    deleteRecord = omit([\"deleted\", \"busy\"], deleteRecord);\n\n    return merge(current, {[deleteId]: deleteRecord});\n  }\n}\n","import {prepareRecord} from \"../../common/delete/start\";\nimport invariants from \"../invariants\";\nimport constants from \"../../../constants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.DELETE_START;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function start(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  var key = config.key;\n  var deleteId = record[key];\n  var deleteRecord = current[deleteId];\n\n  if (deleteRecord == null) {\n    return current;\n  } else {\n    deleteRecord = prepareRecord(deleteRecord);\n\n    return store.merge(config, current, deleteRecord);\n  }\n}\n","import * as reject from \"ramda/src/reject\"\n\nimport invariants from \"../invariants\";\nimport constants from \"../../../constants\";\n\n\nvar reducerName = constants.REDUCER_NAMES.DELETE_SUCCESS;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function success(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  var key = config.key;\n  var deleteId = record[key];\n\n  function predicate(existingRecord) {\n    return deleteId == existingRecord[key];\n  }\n\n  return reject(predicate, current);\n}\n","import * as indexBy from \"ramda/src/indexBy\"\nimport * as prop from \"ramda/src/prop\"\nimport * as merge from \"ramda/src/merge\"\n\nimport assertAllHaveKeys from \"../../../utils/assertAllHaveKeys\";\nimport constants from \"../../../constants\";\nimport invariants from \"../invariants\";\nimport wrapArray from \"../../../utils/wrapArray\";\nconst reducerName = constants.REDUCER_NAMES.FETCH_SUCCESS;\nconst invariantArgs = {\n  reducerName,\n  canBeArray: true\n};\n\nexport default function success(\n  config,\n  current,\n  records,\n  emptyState,\n  replace = false\n){\n  invariants(invariantArgs, config, current, records);\n\n  // wrap array\n  records = wrapArray(records);\n\n  // All given records must have a key\n  assertAllHaveKeys(config, reducerName, records);\n\n  const mergeValues = indexBy(prop(config.key), records);\n\n  return merge(replace ? emptyState : current, mergeValues);\n}\n","import {prepareRecord} from \"../../common/update/error\";\nimport constants from \"../../../constants\";\nimport invariants from \"../invariants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.UPDATE_ERROR;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function error(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  // We don\"t want to rollback\n  var key = config.key;\n  var updatedId = record[key];\n  var updatedRecord = current[updatedId];\n\n  if (updatedRecord == null) return current;\n\n  updatedRecord = prepareRecord(updatedRecord);\n\n  return store.merge(config, current, updatedRecord);\n}\n","import {prepareRecord} from \"../../common/update/start\";\nimport constants from \"../../../constants\";\nimport invariants from \"../invariants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.UPDATE_START;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function start(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  // mark record as unsaved and busy\n  var newRecord = prepareRecord(record);\n\n  // replace record\n  return store.merge(config, current, newRecord);\n}\n","import constants from \"../../../constants\";\nimport invariants from \"../invariants\";\nimport store from \"../store\";\n\nvar reducerName = constants.REDUCER_NAMES.UPDATE_SUCCESS;\nvar invariantArgs = {\n  reducerName,\n  canBeArray: false\n};\n\nexport default function success(\n  config,\n  current,\n  record\n) {\n  invariants(invariantArgs, config, current, record);\n\n  return store.merge(config, current, record);\n}\n","import * as merge from \"ramda/src/merge\"\n\nimport commonReducersFor from \"../common/reducersFor\";\nimport createError from \"./create/error\";\nimport createStart from \"./create/start\";\nimport createSuccess from \"./create/success\";\nimport deleteError from \"./delete/error\";\nimport deleteStart from \"./delete/start\";\nimport deleteSuccess from \"./delete/success\";\nimport fetchSuccess from \"./fetch/success\";\nimport updateError from \"./update/error\";\nimport updateStart from \"./update/start\";\nimport updateSuccess from \"./update/success\";\n\nconst baseReducers = {\n  createError,\n  createStart,\n  createSuccess,\n  deleteError,\n  deleteStart,\n  deleteSuccess,\n  fetchSuccess,\n  updateError,\n  updateStart,\n  updateSuccess\n};\n\nexport default function reducersFor(resourceName, args = {}, deps) {\n  const reducers = merge(baseReducers, deps);\n  return commonReducersFor(resourceName, args, {}, reducers);\n}\n","import reducersFor from \"./map/reducersFor\";\n\nexport default {\n  reducersFor\n};\n","\nimport actionCreatorsFor from \"./actionCreatorsFor\";\nimport actionTypesFor from \"./actionTypesFor\";\nimport constants from \"./constants\";\nimport List from \"./reducers/list\";\nimport Map from \"./reducers/map\";\n\nexport default {\n  actionCreatorsFor,\n  actionTypesFor,\n  constants,\n  List,\n  Map\n};\n","import axios from 'axios';\nimport _ from 'lodash';\nconst user = JSON.parse(localStorage.getItem('user-infos'));\nconst defaults = {\n  baseURL: process.env.API_URL || 'http://localhost:1200/api/',\n\n  headers: () => {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: user && user.token ? user.token : {},\n    };\n  },\n  error: {\n    code: 'INTERNAL_ERROR',\n    message:\n      \"Quelque chose s'est mal passé. Veuillez vérifier votre connexion Internet ou contacter notre support.\",\n    status: 503,\n    data: {},\n  },\n};\nconst request = axios;\nrequest.interceptors.request.use(\n  config => {\n    if (!config.headers.Authorization) {\n      const user = JSON.parse(localStorage.getItem('user-infos'));\n      if (user?.token)\n        request.defaults.headers.common.Authorization = `${user?.token}`;\n    }\n    return config;\n  },\n  error => console.log(error)\n);\nrequest.interceptors.response.use(\n  response => {\n    if (_.isUndefined(response)) {\n      return [];\n    } else {\n      return response;\n    }\n  },\n  error => console.log(error)\n);\n\n//console.log( user.token);\nconst api = (method, url, hasFile, variables) =>\n  new Promise((resolve, reject) => {\n    let formData = variables;\n    request({\n      url: `${url}`,\n      method,\n      headers: defaults.headers(),\n      params: method == 'get' ? variables : undefined,\n      data: method !== 'get' ? formData : undefined,\n    }).then(\n      response => {\n        if (_.isUndefined(response)) {\n          resolve([]);\n        } else {\n          resolve(response.data);\n        }\n      },\n      error => {\n        if (error?.response) {\n          if (error?.response?.data?.error) {\n            reject(error?.response?.data?.error);\n          } else if (error?.response.data?.errors) {\n            reject(error?.response.data?.errors);\n          }\n        } else {\n          reject(defaults.error);\n        }\n      }\n    );\n  });\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  get: (...args) => api('get', ...args),\n  post: (...args) => api('post', ...args),\n  put: (...args) => api('put', ...args),\n  patch: (...args) => api('patch', ...args),\n  delete: (...args) => api('delete', ...args),\n};\n","import reduxCrud from '../crud';\nimport humps from 'humps';\nimport { singular } from 'pluralize';\nimport api from '../api';\nimport { isArray } from 'lodash';\nconst wrapArray = objectOrArray =>\n  isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n\nconst transformKeys = (json = {}, key) => {\n  const items = key ? json[key] || json[singular(key)] : json;\n  return humps.camelizeKeys(items);\n};\nconst fetchSuccessRequest = (\n  action,\n  nextId,\n  totalItems,\n  totalPages,\n  currentPage,\n  success\n) => ({\n  ...action,\n  records: wrapArray(action.records),\n  receivedAt: new Date(),\n  success: success || '',\n  totalItems: totalItems,\n  totalPages: totalPages,\n  currentPage: currentPage,\n});\n\nexport const fetch =\n  (resourceName, options = {}, params = {}, successCallback, errorCallback) =>\n  dispatch => {\n    const actionCreators = reduxCrud.actionCreatorsFor(resourceName);\n    const path = options.path || humps.decamelize(resourceName);\n    const reduxCrudOptions = options.replace\n      ? { replace: options.replace }\n      : undefined;\n    const url =\n      options.url || process.env.API_URL || 'http://localhost:1200/api';\n    dispatch(actionCreators.fetchStart());\n    return api\n      .get(`${url}/${path}`, false, params, options)\n      .then(response => {\n        if (!response.hasOwnProperty('data')) {\n          if (!response.hasOwnProperty('rows')) {\n            dispatch(\n              fetchSuccessRequest(\n                actionCreators.fetchSuccess(\n                  transformKeys(response),\n                  reduxCrudOptions\n                ),\n                null,\n                null,\n                null\n              )\n            );\n            if (successCallback) {\n              successCallback(transformKeys(response));\n            }\n          } else {\n            dispatch(\n              fetchSuccessRequest(\n                actionCreators.fetchSuccess(\n                  transformKeys(response, 'rows'),\n                  reduxCrudOptions\n                ),\n                response.totalItems,\n                response.totalPages,\n                response.currentPage\n              )\n            );\n            if (successCallback) {\n              successCallback(transformKeys(response, 'rows'));\n            }\n          }\n        } else {\n          let data = response.data;\n          dispatch(\n            fetchSuccessRequest(\n              actionCreators.fetchSuccess(\n                transformKeys(data, 'rows'),\n                reduxCrudOptions\n              ),\n              data.totalItems,\n              data.totalPages,\n              data.currentPage\n            )\n          );\n          if (successCallback) {\n            successCallback(transformKeys(data, 'rows'));\n          }\n        }\n      })\n      .catch(err => {\n        if (err.response) {\n          if (errorCallback) {\n            errorCallback(err.response);\n          }\n          dispatch(actionCreators.fetchError(err?.response.data.error));\n        } else {\n          if (errorCallback) {\n            errorCallback(err);\n          }\n          dispatch(actionCreators.fetchError(err));\n        }\n      });\n  };\n\n// Create action\n\nexport const create =\n  (\n    resourceName,\n    record,\n    options = {\n      hasFile: false,\n    },\n    successCallback,\n    errorCallback\n  ) =>\n  dispatch => {\n    const actionCreators = reduxCrud.actionCreatorsFor(resourceName);\n\n    const path = options.path || humps.decamelize(resourceName);\n    const url =\n      options.url || process.env.API_URL || 'http://localhost:1200/api';\n    dispatch(actionCreators.createStart(record));\n\n    return api\n      .post(`${url}/${path}`, options.hasFile, record, {\n        replace: true,\n      })\n      .then(json => {\n        dispatch(\n          actionCreators.createSuccess(record, json.id, {\n            receivedAt: new Date(),\n          })\n        );\n        if (successCallback) {\n          successCallback(record);\n        }\n      })\n      .catch(function (error) {\n        if (error) {\n          dispatch(actionCreators.createError(error, record));\n          if (errorCallback) {\n            errorCallback(error);\n          }\n        } else if (error.message) {\n          dispatch(actionCreators.createError(error, record));\n          if (errorCallback) {\n            errorCallback(error.message);\n          }\n        } else if (error?.response?.data?.message) {\n          if (errorCallback) {\n            errorCallback(error?.response.data.message);\n          }\n          dispatch(\n            actionCreators.createError(error?.response.data.message, record)\n          );\n        }\n      });\n  };\n\n// Update action\n\nexport const update =\n  (\n    resourceName,\n    body,\n    options = {\n      hasFile: false,\n    },\n    successCallback,\n    errorCallback\n  ) =>\n  dispatch => {\n    const actionCreators = reduxCrud.actionCreatorsFor(resourceName);\n    const path =\n      options.path || [humps.decamelize(resourceName), body.id].join('/');\n    const url =\n      options.url || process.env.API_URL || 'http://localhost:1200/api';\n    dispatch(actionCreators.updateStart(body));\n\n    return api\n      .put(`${url}/${path}`, options.hasFile, body, options)\n      .then(json => {\n        dispatch(\n          actionCreators.updateSuccess(body, body.id, {\n            receivedAt: new Date(),\n          })\n        );\n        if (successCallback) {\n          successCallback(body);\n        }\n      })\n      .catch(error => {\n        if (error) {\n          dispatch(actionCreators.updateError(error, body));\n          if (errorCallback) {\n            errorCallback(error);\n          }\n        } else if (error.message) {\n          dispatch(actionCreators.updateError(error, body));\n          if (errorCallback) {\n            errorCallback(error.message);\n          }\n        } else if (error?.response?.data?.message) {\n          dispatch(\n            actionCreators.updateError(error?.response.data.message, body)\n          );\n          if (errorCallback) {\n            errorCallback(error?.response.data.message);\n          }\n        }\n      });\n  };\n\n// Destroy action\n\nexport const destroy =\n  (resourceName, body, options = {}, successCallback, errorCallback) =>\n  dispatch => {\n    const actionCreators = reduxCrud.actionCreatorsFor(resourceName);\n    const path =\n      options.path || [humps.decamelize(resourceName), body.id].join('/');\n    const url =\n      options.url || process.env.API_URL || 'http://localhost:1200/api';\n    dispatch(actionCreators.deleteStart(body));\n\n    return api\n      .delete(`${url}/${path}`, false, body, options)\n      .then(() => {\n        dispatch(\n          actionCreators.deleteSuccess(body, { receivedAt: new Date() })\n        );\n        if (successCallback) {\n          successCallback(body);\n        }\n      })\n      .catch(error => {\n        dispatch(actionCreators.deleteError(error, body));\n        if (errorCallback) {\n          errorCallback(error);\n        }\n      });\n  };\n\n// Exports\n\nexport const actionTypesFor = resourceName =>\n  reduxCrud.actionTypesFor(resourceName);\nexport const actionCreatorsFor = resourceName =>\n  reduxCrud.actionCreatorsFor(resourceName);\n","import { combineReducers } from 'redux';\nimport crud from '../crud';\n\nexport const metaInitialState = {\n  isFetching: false,\n  didInvalidate: false,\n  lastUpdatedAt: null,\n  error: null,\n  success: null,\n  nextId: null,\n};\n\nexport const metaFor = (resourceName, options = {}) => {\n  const actionTypes = crud.actionTypesFor(resourceName);\n\n  return (state = metaInitialState, action) => {\n    switch (action.type) {\n      case actionTypes.createStart:\n        return {\n          isLoading: true,\n          error: null,\n          success: '',\n        };\n      case actionTypes.createError:\n        return {\n          isLoading: false,\n          error: action.error,\n          success: action.success,\n        };\n\n      case actionTypes.createSuccess:\n        return {\n          ...action.payload,\n          isLoading: false,\n          error: null,\n          success: action.success,\n          lastUpdatedAt: action.receivedAt,\n        };\n      case actionTypes.createFailed:\n        return {\n          ...action.payload,\n          isLoading: false,\n          error: action.error,\n          success: '',\n        };\n      case actionTypes.updateStart:\n        return {\n          ...state,\n          isLoading: true,\n          error: null,\n          success: '',\n        };\n      case actionTypes.updateError:\n        return {\n          isLoading: false,\n          error: action.error,\n          success: '',\n        };\n\n      case actionTypes.updateSuccess:\n        return {\n          ...state,\n          isLoading: false,\n          error: null,\n          success: action.success,\n          lastUpdatedAt: action.receivedAt,\n        };\n      case actionTypes.updateFailed:\n        return {\n          ...state,\n          isLoading: false,\n          error: action.error,\n          success: action.success,\n        };\n\n      case actionTypes.destroyStart:\n        return {\n          ...state,\n          isLoading: true,\n          error: null,\n          success: '',\n        };\n      case actionTypes.destroySuccess:\n        return {\n          ...state,\n          isLoading: false,\n          error: null,\n          success: action.success,\n          lastUpdatedAt: action.receivedAt,\n        };\n      case actionTypes.deleteError:\n        return {\n          isLoading: false,\n          error: action.error,\n          success: '',\n        };\n\n      case actionTypes.destroyFailed:\n        return {\n          ...state,\n          isLoading: false,\n          error: action.error,\n          success: '',\n        };\n      case actionTypes.fetchStart:\n        return {\n          ...state,\n          isLoading: true,\n          didInvalidate: false,\n          isFetching: true,\n          error: null,\n          success: '',\n        };\n\n      case actionTypes.fetchSuccess:\n        return {\n          ...state,\n          didInvalidate: false,\n          isFetching: false,\n          isLoading: false,\n          success: action.success,\n          nextId: action.nextId,\n          totalPages: action.totalPages,\n          totalItems: action.totalItems,\n          currentPage: action.currentPage,\n          lastUpdatedAt: action.receivedAt,\n          error: null,\n        };\n      case actionTypes.fetchError:\n        return {\n          ...state,\n          isFetching: false,\n          isLoading: false,\n          error: action.error,\n        };\n      default:\n        return {\n          ...state,\n        };\n    }\n  };\n};\n\nexport const itemsFor =\n  (resourceName, options = {}) =>\n  (state = {}, action) =>\n    crud.Map.reducersFor(resourceName, options)(state, action);\n\nexport const reducersFor = (resourceName, options = {}) =>\n  combineReducers({\n    items: itemsFor(resourceName, options),\n    meta: metaFor(resourceName, options),\n  });\nexport const isFetching = state => state.meta.isFetching;\n","import { create, fetch, update, destroy } from \".\";\nimport { values } from \"lodash\";\n//importer { createSelector } à partir de 'reselect' ;\n//https://itnext.io/3-small-tips-for-better-redux-performance-in-a-react-app-9cde549df6af\nexport function action(model) {\n  return {\n    get: id => fetch(model, { path: `${model}/${id}`, replace: true }),\n    create: (body, options) => create(model, body, options),\n    update: (body, options) => update(model, body, options),\n    destroy: (body, options) => destroy(model, body, options),\n    fetch: (options, params) => fetch(model, options, params),\n    createTransaction: (body, path) => create(model, body, { path: path }),\n    updateTransaction: (body, path) => update(model, body, { path: path }),\n    deleteTransaction: (body, path) => destroy(model, body, { path: path }),\n  };\n}\nexport function getData(model) {\n  return {\n    value: (state) => values(state[model].items),\n    meta: (state) => state[model].meta,\n  };\n}\n","const Lang ={\n    fromMagasin:{\n        emptyOrder:\"Aucune commande\"\n    }\n}\nexport default Lang;","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//import useModal from '../../hooks/useModal';\nimport { Link } from \"react-router-dom\";\nimport FromMagasinItem from \"./FromMagasinItem\";\nimport { Card } from \"react-bootstrap\";\nimport { clearFromMagasin } from \"../../../../store/frommagasin/actions/frommagasin\";\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport { displayMoney, checkHasExistText } from \"../../../../utils/functions\";\nimport { HISTORIQUEVENTEVENDEUR } from \"../../../../constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport Lang from \"../../../../constants/lang\";\nimport {\n  handleSoldQuantityCC,\n  handleMinusProduct,\n  isSpecialProductHandle,\n  handlePhtyoSpecific,\n  handleMinusCondML,\n} from \"../../../../store/functions/function\";\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n  const total = arr.reduce((acc, val) => acc + val, 0);\n  return total;\n};\n\nconst FromMagasin = () => {\n  const [type, setType] = useState(\"vente-cva\");\n  const [idFournisseur, setIdFournisseur] = useState(1);\n  const [vaccinateurId, setVaccinateurId] = useState(null);\n  const [emprunter, setEmprunter] = useState(null);\n  const history = useHistory();\n\n  const { frommagasins } = useSelector((state) => ({\n    frommagasins: state.frommagasins,\n  }));\n  const dispatch = useDispatch();\n  const emprunters = useSelector(getData(\"emprunters\").value);\n  const meta = useSelector(getData(\"commandes\").meta);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const date = new Date();\n  const [dateCom, setDateCom] = useState(date);\n  useEffect(() => {\n    dispatch(action(\"commandes\").fetch());\n    dispatch(action(\"emprunters\").fetch());\n  }, []);\n\n  const onCheckOut = () => {\n    frommagasins.forEach((element) => {\n      if (isSpecialProductHandle(element)) {\n        handleMinusCondML(element);\n      } else {\n        //  handleMinusProduct(element);\n        handleSoldQuantityCC(element);\n      }\n    });\n    dispatch(\n      action(\"commandes\").createTransaction(\n        {\n          id: Math.floor(Date.now() / 1000),\n          contenu: frommagasins,\n          type: type,\n          sorte: \"sortie\",\n          vaccinateurId: vaccinateurId,\n          status: type === \"vente-cva\" ? true : false,\n          emprunterId: emprunter,\n          dateCom: dateCom != null ? dateCom : date,\n        },\n        \"add-from-magasin\"\n      )\n    );\n    /*if (!meta.error) {\n      frommagasins.forEach((element) => {\n        let idElement = element.id;\n        element.quantityParProduct = 0;\n        element.qttByCC = 0;\n        element.qttyspecificmirror = 0;\n        element.id = idElement;\n        dispatch(action(\"products\").update(element));\n      });\n    }*/\n    dispatch(clearFromMagasin());\n    history.push(HISTORIQUEVENTEVENDEUR);\n  };\n\n  const onClearBasket = () => {\n    frommagasins.forEach((element) => {\n      element.quantityParProduct = 0;\n      element.qttByCC = 0;\n    });\n\n    dispatch(clearFromMagasin());\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Header className=\" bg-dark py-2 text-white d-flex justify-content-between align-items-center\">\n          <div style={{ width: \"60%\" }}>\n            BON DE SORTIE (\n            {` ${frommagasins?.length} ${\n              frommagasins?.length > 1 ? \"articles\" : \"article\"\n            }`}\n            )\n          </div>\n          <div style={{ width: \"40%\" }} className=\"text-right\">\n            <select\n              className=\"form-control input-sm\"\n              onChange={(e) => {\n                setType(e.target.value);\n              }}\n            >\n              <option value=\"vente-cva\" selected>\n                Comptant\n              </option>\n              <option value=\"credit-cva\">Credit</option>\n            </select>\n          </div>\n        </Card.Header>\n        <div className=\"commande-vente\">\n          <Card.Body\n            style={{ padding: 2, marginTop: 3, marginRight: 2, marginLeft: 2 }}\n          >\n            <div className=\"d-flex justify-content-end\">\n              <Link\n                className=\"btn btn-primary mb-2 btn-sm\"\n                to={HISTORIQUEVENTEVENDEUR}\n              >\n                Voir l'historique de vente\n              </Link>\n            </div>\n            <div\n              style={{\n                overflowY: \"auto\",\n                height: \"350px\",\n                maxHeight: \"350px\",\n                overflowX: \"hidden\",\n              }}\n            >\n              <div class=\"form-group\">\n                <label>Date de sortie :</label>\n                <div>\n                  <input\n                    type=\"date\"\n                    onChange={(e) => setDateCom(e.target.value)}\n                    value={dateCom}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              {type === \"credit-cva\" && (\n                <>\n                  <label>Crediteur:</label>\n                  <select\n                    className=\"form-control\"\n                    onChange={(e) => {\n                      setEmprunter(e.target.value);\n                    }}\n                  >\n                    <option value=\"\"></option>\n                    {emprunters.map((v) => (\n                      <option value={v.id}>{v.name}</option>\n                    ))}\n                  </select>\n                </>\n              )}\n              {frommagasins?.length <= 0 && (\n                <div className=\"alert alert-success \">\n                  {Lang.fromMagasin.emptyOrder}\n                </div>\n              )}\n              {frommagasins?.map((product, i) => (\n                <FromMagasinItem\n                  key={`${product?.id}_${i}`}\n                  product={product}\n                  basket={frommagasins}\n                  dispatch={dispatch}\n                />\n              ))}\n            </div>\n          </Card.Body>\n\n          {frommagasins?.length > 0 && (\n            <Card.Footer className=\"d-flex align-items-center justify-content-between\">\n              <div style={{ width: \"30%\" }}>\n                <h2 className=\"p-2 text-uppercase bg-primary\">\n                  <strong data-test-id=\"total-price-orders\">\n                    Total:\n                    {displayMoney(\n                      calculateTotal(\n                        frommagasins.map((product) => {\n                          return product.prixVente * product.quantityParProduct;\n                        })\n                      ) +\n                        calculateTotal(\n                          frommagasins.map((product) => {\n                            return product.prixParCC * product.qttByCC;\n                          })\n                        )\n                    )}\n                  </strong>\n                </h2>\n              </div>\n              <div style={{ width: \"70%\" }}>\n                {frommagasins.length > 0 && (\n                  <div className=\"d-flex text-right align-items-end justify-content-end\">\n                    <button\n                      className=\"btn btn-green btn-sm mr-2\"\n                      disabled={frommagasins.length === 0}\n                      onClick={onCheckOut}\n                      type=\"button\"\n                    >\n                      Valider l'operation\n                    </button>\n                    <button\n                      className=\"btn btn-danger btn-sm\"\n                      onClick={onClearBasket}\n                      type=\"button\"\n                    >\n                      <span>Annuler</span>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </Card.Footer>\n          )}\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default FromMagasin;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { action, getData } from \"./utils/lib/call\";\nconst GetDataContext = React.createContext();\n\nfunction GetOne({ model ,children }) {\n  const { id } = useParams();\n  const [regenerate, setRegenerate] = React.useState(false)\n  const data = useSelector(getData(model).value);\n  const meta = useSelector(getData(model).meta);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n      dispatch(action(model).get(id));\n\n  }, [id]);\n  React.useEffect(() => {\n    if (regenerate == true) {\n      dispatch(action(model).get(id));\n      setRegenerate(false);\n    }\n    return () => {\n      setRegenerate(false);\n    };\n\n  }, [regenerate]);\n  const value = { data:data[0], meta,setRegenerate };\n  return (\n    <GetDataContext.Provider value={value}>{children}</GetDataContext.Provider>\n  );\n}\n\nfunction GetAll({ model,options,children }) {\n  const data = useSelector(getData(model).value);\n  const meta = useSelector(getData(model).meta);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(action(model).fetch(options));\n  }, [options]);\n  const value = { data, meta };\n  return (\n    <GetDataContext.Provider value={value}>{children}</GetDataContext.Provider>\n  );\n}\nfunction Data({ children }) {\n  return (\n    <GetDataContext.Consumer>\n      {(context) => {\n        if (context === undefined) {\n          throw new Error(\"Data  must be used within a GetDataContext\");\n        }\n        return children(context);\n      }}\n    </GetDataContext.Consumer>\n  );\n}\nexport { GetAll,GetOne, Data };\n","import { fetch } from \"../../utils/lib\";\n\nexport const getCredit = (deb, fin) =>\n  fetch(\"commandes\", { path: `/credit?deb=${deb}&fin=${fin}`, replace: true });\n  \nexport const getCreditVaccinateur = () =>\n  fetch(\"commandes\", { path: `/credit-vaccinateur`, replace: true });\n\nexport const getCommandeDirect = () =>\n  fetch(\"commandes\", { path: `/direct`, replace: true });\nexport const setPayerCommande = (id) =>\n  fetch(\"commandes\", { path: `/set-payer-commande?cId=${id}`, replace: true });\n\nexport const getBenefice = (deb, fin) =>\n  fetch(\"commandes\", {\n    path: `/benefices?deb=${deb}&fin=${fin}`,\n    replace: true,\n  });\nexport const getResteAPayer = (deb, fin) =>\n  fetch(\"commandes\", {\n    path: `/reste-a-payer?deb=${deb}&fin=${fin}`,\n    replace: true,\n  });\n  export const getTdbCommande = (type,deb, fin) =>\n  fetch(\"commandes\", { path: `/get-tdb-commande?type=${type}&deb=${deb}&fin=${fin}`, replace: true });\n  \n\nexport const getEntree = (deb, fin) =>\n  fetch(\"commandes\", { path: `/entree?deb=${deb}&fin=${fin}`, replace: true });\n\nexport const getSortie = (deb, fin) =>\n  fetch(\"commandes\", { path: `/sortie?deb=${deb}&fin=${fin}`, replace: true });\n\nexport const getCommandeCVA = (deb, fin) =>\n  fetch(\"commandes\", {\n    path: `/vente-cva?deb=${deb}&fin=${fin}`,\n    replace: true,\n  });\nexport const getCVA = (deb, fin) =>\n  fetch(\"commandes\", { path: `/cva?deb=${deb}&fin=${fin}`, replace: true });\n\nexport const getCommande = (deb, fin) =>\n  fetch(\"commandes\", { path: `/journal?deb=${deb}&fin=${fin}`, replace: true });\n\nexport const getRecetteToDay = () => {\n  fetch(\"commandes\", { path: `/ recette/to/day`, replace: true });\n};\n","import React, { useEffect, useState } from \"react\";\nimport { displayDate } from '../../../../utils/functions';\nimport { reactFastCompare } from 'react-fast-compare';\nconst date = new Date();\nfunction Horloge() {\n  const [dateTime, setDateTime] = useState({\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n    seconds: date.getSeconds(),\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const date = new Date();\n      setDateTime({\n        hours: date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours(),\n        minutes:\n          date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes(),\n        seconds:\n          date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds(),\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  return (\n    <div className=\"bg-dark py-1 px-4 text-center\">\n      <h1 style={{ fontSize: \"20px\" }} >\n        {dateTime.hours} : {dateTime.minutes} : {dateTime.seconds}\n      </h1>\n      <h4 className=\"bg-thead p-1\">{displayDate(date)}</h4>\n    </div>\n  );\n}\nexport default React.memo(Horloge,reactFastCompare);","function strOp(str) {\n  return str.toString().replace(/\\s/g, \"\").toLowerCase();\n}\nfunction copy(object) {\n  var output, value, key;\n  output = Array.isArray(object) ? [] : {};\n  for (key in object) {\n    value = object[key];\n    output[key] = typeof value === \"object\" ? copy(value) : value;\n  }\n  return output;\n}\nconst searchByNameAndFournisseur = (data, query, id) => {\n  return copy(data).filter((el) => {\n    return (\n      (query != \"\" ? strOp(el.name).includes(strOp(query)) : true) &&\n      (id != \"\" ? el.fournisseurId == id : true)\n    );\n  });\n};\nexport default searchByNameAndFournisseur;\n","function strOp(str) {\n  return str.toString().replace(/\\s/g, \"\").toLowerCase();\n}\nfunction copy(object) {\n  var output, value, key;\n  output = Array.isArray(object) ? [] : {};\n  for (key in object) {\n    value = object[key];\n    output[key] = typeof value === \"object\" ? copy(value) : value;\n  }\n  return output;\n}\nconst searchByFournisseur = (data, query) => {\n  return copy(data).filter((el) => {\n    return query !=\"\" ? el.fournisseurId == query : true;\n  });\n};\nexport default searchByFournisseur;\n","function strOp(str) {\n    return str.toString().replace(/\\s/g, \"\").toLowerCase();\n  }\n  function copy(object) {\n    var output, value, key;\n    output = Array.isArray(object) ? [] : {};\n    for (key in object) {\n      value = object[key];\n      output[key] = typeof value === \"object\" ? copy(value) : value;\n    }\n    return output;\n  }\nconst searchByName = (data, query) => {\n    return copy(data).filter((el) => {\n      return query!=\"\" ? strOp(el.name).includes(strOp(query)):true;\n    });\n  };\n  export default searchByName;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport ProductItem from \"./item\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, Card, ListGroup } from \"react-bootstrap\";\nimport FromMagasin from \"./FromMagasin\";\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport { Link } from \"react-router-dom\";\nimport { HISTORIQUEVENTEVENDEUR } from \"../../../../constants/routes\";\nimport { fetchProductsByFournisseur } from \"../../../../store/actions/products\";\nimport { GetAll, Data } from \"../../../../context\";\nimport { Select } from \"@chakra-ui/select\";\nimport { displayDate, displayMoney } from \"../../../../utils/functions\";\nimport { getCommandeCVA } from \"../../../../store/actions/commandes\";\nimport Horloge from \"./Horloge\";\nimport searchByNameAndFournisseur from \"../../../../filters/searchByNameAndFournisseur\";\nimport searchByFournisseur from \"../../../../filters/searchByFournisseur\";\nimport searchByName from \"../../../../filters/searchByName\";\nimport { moment } from \"moment\";\nconst Products = () => {\n  const products = useSelector(getData(\"products\").value);\n  const meta = useSelector(getData(\"products\").meta);\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const [idFournisseur, setIdFournisseur] = useState(2);\n  const [regenerate, setRegenerate] = useState(false);\n  const refDateDeb = useRef(null);\n  const refDateFin = useRef(null);\n\n  const [productData, setProductData] = useState([]);\n\n  useEffect(() => {\n    dispatch(action(\"products\").fetch());\n  }, []);\n  useEffect(() => {\n    if (regenerate == true) {\n      dispatch(action(\"products\").fetch());\n      setRegenerate(false);\n    }\n    return () => {\n      setRegenerate(false);\n    };\n  }, [regenerate]);\n\n  useEffect(() => {\n    if (!meta.isFetching) {\n      setProductData(products);\n    }\n  }, [meta]);\n  useEffect(() => {\n    setProductData(searchByName(products, value));\n  }, [value]);\n\n  const calculateTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    const total = arr.reduce((acc, val) => acc + val, 0);\n    return total;\n  };\n\n  const totalDevente = (arr) => {\n    return (\n      calculateTotal(\n        arr.map((product) => {\n          return product.prixVente * product.quantityParProduct;\n        })\n      ) +\n      calculateTotal(\n        arr.map((product) => {\n          return product.prixParCC * product.qttByCC;\n        })\n      )\n    );\n  };\n  const recetteDuJour = (arr) => {\n    let total = 0;\n    arr.map((c) => {\n      total += totalDevente(c?.contenu);\n    });\n    return total;\n  };\n  return (\n    <>\n      <div className=\"bg-dark text-white py-3 d-flex justify-content-center align-items-center\">\n        <h1 className=\"\">CABINET VETERINAIRE AMBALAVAO</h1>\n      </div>\n      <Container>\n        <div className=\"py-2\">\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <div></div>\n            <div>\n              <Horloge />\n            </div>\n            <div className=\"bg-thead\"></div>\n          </div>\n         \n          <Row>\n            <Col xs={6}>\n              <Card className=\"mt-2\">\n                <Card.Header className=\"bg-dark p-2 text-white d-flex text-uppercase justify-content-between align-items-center\">\n                  <div style={{ width: \"60%\" }}>Produits</div>\n                  <div>\n                    <button\n                      className=\"btn btn-green btn-sm\"\n                      onClick={() => {\n                        setValue(\"\");\n                        setRegenerate(true);\n                      }}\n                    >\n                      Mettre à jour\n                    </button>\n                  </div>\n                </Card.Header>\n                <Card.Body>\n                  <div class=\"d-flex justify-content-between align-items-center\">\n                    <input\n                      type=\"text\"\n                      onChange={(e) => {\n                        setValue(e.target.value);\n                      }}\n                      placeholder=\"Nom du produit\"\n                      className=\"form-control mb-2\"\n                    />{\" \"}\n                  </div>\n                  <ListGroup>\n                    <div\n                      style={{\n                        overflowY: \"auto\",\n                        width: \"100%\",\n                        height: \"350px\",\n                        maxHeight: \"350px\",\n                        overflowX: \"hidden\",\n                      }}\n                    >\n                      <div class=\"d-flex justify-content-start flex-wrap\">\n                        {productData\n                          .sort(\n                            (low, high) =>\n                              high.quantityBruteCVA - low.quantityBruteCVA\n                          )\n                          .map((p) => (\n                            <ProductItem product={p} />\n                          ))}\n                        {productData.length == 0 &&\n                          \"Aucune enregistrement trouvé\"}\n                      </div>{\" \"}\n                    </div>\n                  </ListGroup>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col xs={6}>\n              <div className=\" py-2\">\n                <FromMagasin setRegenerate={setRegenerate} />\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Products;\n","import React from \"react\";\nimport Products from \"../vendeur/fromMagasin/product\";\n\nconst Vendeur = () => {\n  return (\n    <>\n      <Products />\n    </>\n  );\n};\n\nexport default Vendeur;\n","import React, { useState, useEffect, Suspense } from \"react\";\nimport Vendeur from './components/composants/vendeur/index';\nimport './App.css';\nfunction App() {\n\n  return (\n    <>\n      <Vendeur/>\n    </>\n  );\n}\n\nexport default App;\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const REFRESH_TOKEN = \"REFRESH_TOKEN\";\nexport const RESET_PASSWORD=\"RESET_PASSWORD\";\nexport const FORGOT_PASSWORD_REQUEST_SUCCESS=\"FORGOT_PASSWORD_REQUEST_SUCCESS\";\nexport const FORGOT_PASSWORD_REQUEST_FAIL=\"FORGOT_PASSWORD_REQUEST_FAIL\";\n\nexport const RESET_PASSWORD_REQUEST_SUCCESS=\"RESET_PASSWORD_REQUEST_SUCCESS\";\nexport const RESET_PASSWORD_REQUEST_FAIL=\"RESET_PASSWORD_REQUEST_FAIL\";\n\nexport const UPDATE_STOCK_REQUEST_SUCCESS=\"UPDATE_STOCK_REQUEST_SUCCESS\";\nexport const UPDATE_STOCK_REQUEST_FAIL=\"UPDATE_STOCK_REQUEST_FAIL\";\n\n\nexport const GET_BENEFICE_SUCCESS=\"GET_BENEFICE_SUCCESS\";","import React, { useState,useEffect } from \"react\";\nimport { useDomEvent } from \"framer-motion\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateStockSuccess } from \"../store/basket/actions/stock\";\nimport { action,getData } from \"../utils/lib/call\";\nconst ApprovItem = ({ product }) => {\n  const [selected, setSelected] = useState(false);\n  const meta = useSelector(getData(\"commandes\").meta);\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(1);\n  useEffect(()=>{\n    dispatch(action(\"commandes\").fetch());\n  },[])\n  const AddToStock = () => {\n    dispatch(updateStockSuccess(product.id, value, 0));\n    dispatch(\n      action(\"commandes\").create({\n        id: meta.nextId,\n        contenu: [product],\n        type: \"approv\",\n        sorte: \"entree\",\n        vaccinateurId: null,\n        qtteBrute: value,\n        qtteCC: 0,\n        status: true,\n        emprunterId: null,\n        dateCom: new Date(),\n      })\n    );\n    setSelected(true);\n  };\n  return (\n    <tr\n      className={`product-card ${!product.id ? \"product-loading\" : \"\"}`}\n      style={{\n        border: product && selected ? \"1px solid #a6a5a5\" : \"\",\n        boxShadow:\n          product && selected ? \"0 10px 15px rgba(0, 0, 0, .07)\" : \"none\",\n      }}\n    >\n      <td>{product.name}</td>\n      <td>{product.quantityBrute + value}</td>\n      <td className=\"d-flex justify-content-center align-items-center\">\n        <div class=\"input-group inline-group\">\n          <div class=\"input-group-prepend\">\n            <button\n              class=\"btn btn-sm btn-dark btn-minus\"\n              onClick={() => {\n                if (value > 0) setValue(value - 1);\n              }}\n            >\n              -\n            </button>\n          </div>\n          <input\n            class=\"form-control quantity text-center  p-0\"\n            min=\"0\"\n            name=\"quantity\"\n            value={value}\n            type=\"number\"\n          />\n          <div class=\"input-group-append\">\n            <button\n              class=\"btn btn-sm btn-dark btn-plus mr-2\"\n              onClick={() => setValue(value + 1)}\n            >\n              +\n            </button>\n          </div>\n          <div class=\"input-group-append ml-2\"></div>\n        </div>\n      </td>\n      <td>\n        {product.id && (\n          <button className=\"btn btn-success  btn-sm\" onClick={AddToStock}>\n            Modifier le stock\n          </button>\n        )}\n      </td>\n    </tr>\n  );\n};\n\nexport default ApprovItem;\n","import axios from \"axios\";\nimport {\n  UPDATE_STOCK_REQUEST_FAIL,\n  UPDATE_STOCK_REQUEST_SUCCESS,\n} from \"../../../constants/actions\";\n\nexport const updateStockSuccess =\n  (id, newStockBrute, newStockCC) => async (dispatch) => {\n\n  try {\n    const res = await axios.post(\"http://localhost:1200/api/update-product\", {\n      productId: id,\n      newStockBrute: newStockBrute,\n      newStockCC: newStockCC,\n    });\n    dispatch({\n      type: UPDATE_STOCK_REQUEST_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: UPDATE_STOCK_REQUEST_FAIL,\n      payload: err,\n    });\n  }\n};\n","import React from \"react\";\nimport reactFastCompare from \"react-fast-compare\";\n\nfunction Content({ children }) {\n  return (\n    <>\n      <div\n        class=\"content-wrapper\"\n      >\n        {children}\n      </div>\n    </>\n  );\n}\nexport default React.memo(Content, reactFastCompare);\n","import React from \"react\";\nimport reactFastCompare from \"react-fast-compare\";\n\nfunction ActiveLink({ title }) {\n  return (\n    <>\n      <li class=\"breadcrumb-item active\">{title}</li>\n    </>\n  );\n}\n\nexport default React.memo(ActiveLink, reactFastCompare);\n","import React from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport reactFastCompare from \"react-fast-compare\";\nimport {\n  TDB_VENTE_CBV,\n  TDB_FACTURES,\n  TDB_DEPOT_VERS_MAGASIN,\n} from \"../../../constants/routes\";\n\nfunction ContentHeader({ children, title }) {\n  const history = useHistory();\n  return (\n    <>\n      <div>\n        <div class=\"content-header p-2 shadow-sm bg-white\">\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6\">\n                <h4 class=\"mt-2 text-uppercase\">{title}</h4>\n              </div>\n              <div class=\"col-sm-6\">\n                <ol class=\"breadcrumb float-sm-right\">\n                  <li class=\"breadcrumb-item\">\n                    <Link to={\"/\"}>Accueil</Link>\n                  </li>\n                  {children}\n                </ol>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-1\">\n          <button\n            type=\"button\"\n            onClick={() => history.goBack()}\n            className=\"btn btn-link\"\n          >\n            {\"<<\"} Revenir en arriere\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(ContentHeader, reactFastCompare);\n","import React from \"react\";\nfunction Page({ children }) {\n  return (\n    <section class=\"content\" >\n      <div class=\"container-fluid\">{children}</div>\n    </section>\n  );\n}\nexport default React.memo(Page);","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { action, getData } from \"../utils/lib/call\";\nimport ApprovItem from \"../components/ApprovItem\";import Content from \"../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../@adminlte/adminlte/Content/Page\";\n\nexport default function Approv() {\n  const products = useSelector(getData(\"products\").value);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(action(\"products\").fetch());\n  }, []);\n  return (\n    <Content>\n      <ContentHeader title=\"Approvisionnement\">\n        <ActiveLink title=\"Approvisionnement\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <table className=\"table table-bordered table-striped\">\n          <thead>\n            <tr className=\"text-center\">\n              <th>Nom de l'article</th>\n              <th style={{ width: \"15%\" }}>Qte</th>\n              <th style={{ width: \"15%\" }}>Nouvel</th>\n              <th style={{ width: \"20%\" }}>Actions</th>\n            </tr>\n          </thead>\n    <tbody>\n          {products.map((p) => (\n            <ApprovItem product={p} />\n          ))}\n\n    </tbody>\n        </table>\n      </Page>\n    </Content>\n  );\n}\n","import React, { forwardRef, useEffect } from \"react\";\nimport { Input, useColorModeValue } from \"@chakra-ui/react\";\nimport { isFunction } from \"lodash\";\nconst TextInput = forwardRef(\n  (\n    {\n      icon,\n      className,\n      filter,\n      setData,\n      name,\n      value,\n      data = 0,\n      placeholder,\n      changeValue,\n      invalid,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const handleChange = React.useCallback(\n      (event) => {\n        if (!filter || filter.test(event.target.value)) {\n          if (isFunction(changeValue)) {\n            changeValue(event.target.value, event);\n          }\n        }\n      },\n      [name]\n    );\n    useEffect(() => {\n      if (data) changeValue(data);\n    }, [data]);\n    return (\n      <div className={className}>\n        {icon && <i className={`fa fa-${icon}`} />}\n        <Input\n          bg={\"gray.100\"}\n          boxShadow=\"sm\"\n          isInvalid={invalid}\n          color={\"gray.700\"}\n          placeholder={placeholder}\n          ref={ref}\n          defaultValue={value}\n          onBlur={handleChange}\n        />\n      </div>\n    );\n  }\n);\nexport default TextInput;\n","import { Radio, Stack ,RadioGroup} from \"@chakra-ui/react\";\nimport React, { forwardRef, useState } from \"react\";\n\nconst RadioButton = forwardRef(\n  (\n    {\n      name,\n      className,\n      options,\n      radioValue,\n      valueKey,\n      direction,\n      filter,\n      setData,\n      changeValue,\n      setRadio,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const [radioValueData,setRadioValue]=useState(radioValue);\n    const [value, setValue] = React.useState(`${radioValueData}`);\n    React.useLayoutEffect(()=>{\n      changeValue(value);\n      if(setData){\n        setData(value);\n        setRadioValue(value);\n      }\n    },[value])\n    React.useLayoutEffect(()=>{\n      if(setRadio){\n        setRadio(radioValueData);\n      }\n    },[radioValueData])\n    return (\n      <RadioGroup \n      onChange={setValue}\n       defaultValue={`${radioValueData}`} className={className}>\n        <Stack spacing={4} direction={direction}>\n          {options.map((value) => (\n            <>\n              <Radio\n                name={`${value.id}`}\n                isChecked={value.id == radioValueData ? true : false}\n                {...inputProps}\n                value={`${value.id}`}\n                ref={ref}\n              >\n                {value[valueKey]}\n              </Radio>\n            </>\n          ))}\n        </Stack>\n      </RadioGroup>\n    );\n  }\n);\nexport default RadioButton;\n","import { Select, useColorModeValue } from \"@chakra-ui/react\";\nimport { isFunction } from \"lodash-es\";\nimport React, { forwardRef } from \"react\";\n\nconst SelectButton = forwardRef(\n  (\n    {\n      name,\n      className,\n      invalid,\n      options,\n      selectValue,\n      valueKey,\n      filter,\n      isNumeric = true,\n      emptyValue = true,\n      setData,\n      changeValue,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const handleChange = (event) => {\n      if (!filter || filter.test(event.target.value)) {\n        if (isFunction(changeValue)) {\n          if (isNumeric) {\n            changeValue(Number(event.target.value), event);\n          } else {\n            changeValue(event.target.value, event);\n          }\n        }\n        if (setData) {\n          if (isNumeric) {\n            setData(Number(event.target.value));\n          } else {\n            setData(event.target.value);\n          }\n        }\n      }\n    };\n    return (\n      <div className={className}>\n        <Select\n          {...inputProps}\n          bg={\"gray.200\"}\n          boxShadow=\"sm\"\n          defaultValue={`${selectValue}`}\n          //   valueKey={valueKey}\n          isRequired\n          name={name}\n          isInvalid={invalid}\n          onChange={handleChange}\n          ref={ref}\n        >\n          {emptyValue && <option value=\"\">Selectionner</option>}\n          {options.map((value) => (\n            <option\n              defaultChecked={`${selectValue}`}\n              value={`${valueKey ? value.id : value}`}\n            >\n              {valueKey ? value[valueKey] : value}\n            </option>\n          ))}\n        </Select>\n      </div>\n    );\n  }\n);\nexport default SelectButton;\n","import { Textarea,useColorModeValue } from \"@chakra-ui/react\";\nimport { isFunction } from \"lodash-es\";\nimport React, { forwardRef } from \"react\";\n\nconst TextareaInput = forwardRef(\n  (\n    { icon, className, filter, setData,placeholder, changeValue, invalid, ...inputProps },\n    ref\n  ) => {\n    const handleChange = (event) => {\n      if (!filter || filter.test(event.target.value)) {\n       if(isFunction(changeValue)) changeValue(event.target.value, event);\n        if (setData) {\n          setData(event.target.value);\n        }\n      }\n    };\n\n    return (\n      <div className={className}>\n        <Textarea bg={\"gray.200\"} boxShadow=\"sm\"\n          isInvalid={invalid}\n          placeholder={placeholder}\n          {...inputProps}\n          onChange={handleChange}\n          ref={ref}\n        />\n      </div>\n    );\n  }\n);\nexport default TextareaInput;\n","import { Input } from \"@chakra-ui/input\";\nimport React, { forwardRef, useCallback, useEffect, useLayoutEffect, useState } from \"react\";\nimport ReactTags from \"react-tag-autocomplete\";\nimport \"../styles/tags.css\";\nconst TagInput = forwardRef(\n  (\n    {\n      icon,\n      className,\n      filter,\n      setData,\n      tags,\n      options,\n      changeValue,\n      invalid,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const [changed, setChanged] = useState(false);\n    const [tagsData, setTagsData] = useState(tags ? tags : []);\n\n    const onDelete = useCallback(\n      (tagIndex) => {\n        setTagsData(tagsData.filter((_, i) => i !== tagIndex));\n        setChanged(true);\n      },\n      [tagsData]\n    );\n    useLayoutEffect(() => {\n      if (changed) changeValue(tagsData);\n      if (setData) {\n        setData(tagsData);\n      }\n      setChanged(false);\n    }, [changed]);\n\n    const onAddition = useCallback(\n      (newTag) => {\n        setTagsData([...tagsData, newTag]);\n        setChanged(true);\n      },\n      [tagsData]\n    );\n\n    return (\n      <div className={className}>\n        {icon && <i className={`fa fa-${icon}`} />}\n        <ReactTags\n          as={Input}\n          ref={ref}\n          tags={tagsData}\n          suggestions={options}\n          onDelete={onDelete}\n          onAddition={onAddition}\n        />\n      </div>\n    );\n  }\n);\nexport default TagInput;\n","import React, { forwardRef } from \"react\";\nimport { Input, useColorModeValue } from \"@chakra-ui/react\";\nimport {isFunction} from \"lodash\";\nconst DateInput = forwardRef(\n  (\n    {\n      icon,\n      className,\n      filter,\n      setData,\n      name,\n      placeholder,\n      changeValue,\n      invalid,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const handleChange =React.useCallback((event) => {\n      if (!filter || filter.test(event.target.value)) {\n        if (isFunction(changeValue)) {\n          changeValue(event.target.value, event);\n        }\n      }\n    },[name]);\n    return (\n      <div className={className}>\n        {icon && <i className={`fa fa-${icon}`} />}\n        <Input\n          bg={\"gray.100\"}\n          type=\"date\"\n          boxShadow=\"sm\"\n          isInvalid={invalid}\n          color={\"gray.700\"}\n          placeholder={placeholder}\n          ref={ref}\n          onBlur={handleChange}\n        />\n      </div>\n    );\n  }\n);\nexport default  DateInput;\n\n","import { Select } from '@chakra-ui/react';\nimport { isFunction } from 'lodash-es';\nimport React, { forwardRef, useEffect, useState } from 'react';\n//import api from \"../../../../../utils/api\";\nconst SelectObject = forwardRef(\n  (\n    {\n      name,\n      className,\n      invalid,\n      isFieldArray = true,\n      options,\n      selectValue,\n      valueKey,\n      filter,\n      setData,\n      objectKey,\n      index,\n      inArray,\n      changeValue,\n      model,\n\n      debug,\n      array,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const [objectId, setObjectId] = useState(selectValue);\n    const handleChange = event => {\n      if (!filter || filter.test(event.target.value)) {\n        if (isFunction(changeValue)) {\n          if (isFieldArray) {\n            changeValue(Number(event.target.value, event));\n          }\n        }\n        if (setData) {\n          setData(Number(event.target.value));\n        }\n        setObjectId(Number(event.target.value));\n      }\n    };\n    /*useEffect(() => {\n      (async () => {\n        await api.get(`http://localhost:1200/api/${model}/${objectId}`).then(\n          (data) => {\n            inArray.forEach((element) => {\n              if (index) {\n                array[index][element] = data[element];\n              } else {\n                array[element] = data[element];\n              }\n            \n            });\n            changeValue(array);\n          },\n          (err) => {\n            console.log(err);\n          }\n        );\n      })();\n    }, [objectId]);*/\n    return (\n      <div className={className}>\n        <Select\n          {...inputProps}\n          bg={'gray.200'}\n          boxShadow=\"sm\"\n          defaultValue={`${selectValue}`}\n          //   valueKey={valueKey}\n          isRequired\n          name={name}\n          isInvalid={invalid}\n          onChange={handleChange}\n          ref={ref}\n        >\n          <option value=\"\">Selectionner</option>\n          {options.map(value => (\n            <option defaultChecked={`${selectValue}`} value={`${value.id}`}>\n              {valueKey ? value[valueKey] : value}\n            </option>\n          ))}\n        </Select>\n      </div>\n    );\n  }\n);\nexport default SelectObject;\n","import { Radio, Stack, RadioGroup } from \"@chakra-ui/react\";\nimport React, { forwardRef, useState } from \"react\";\nimport { Button } from \"@chakra-ui/button\";\nimport { useDispatch } from \"react-redux\";\n\nconst RadioObject = forwardRef(\n  (\n    {\n      name,\n      className,\n      options,\n      radioValue,\n      valueKey,\n      direction,\n      inArray,\n      filter,\n      setData,\n      changeValue,\n      setRadio,\n      masterKey,\n      filtrable,\n      callback = null,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const [radioValueData, setRadioValue] = useState(radioValue);\n    const [value, setValue] = React.useState(`${radioValueData}`);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n      if (masterKey) {\n        changeValue(options.find((option) => option[masterKey].id == value));\n      } else {\n        changeValue(options.find((option) => option.id == value));\n      }\n    }, [value]);\n    React.useLayoutEffect(() => {\n      if (setRadio) {\n        setRadio(radioValueData);\n      }\n    }, [radioValueData]);\n    return (\n      <>\n        <RadioGroup\n          onChange={setValue}\n          name={name}\n          defaultValue={`${radioValueData}`}\n          className={className}\n        >\n          <Stack spacing={4} direction={direction}>\n            {options.map((value) => (\n              <>\n                {masterKey ? (\n                  <>\n                    <Radio\n                      {...inputProps}\n                      value={`${value[masterKey].id}`}\n                      ref={ref}\n                    >\n                      {value[masterKey][valueKey]}\n                    </Radio>\n                    {filtrable == true && (\n                      <Button\n                        variant=\"solid\"\n                        onClick={() => dispatch(callback(value[masterKey].id))}\n                        colorScheme={\"yellow\"}\n                        size=\"xs\"\n                      >\n                        Annuler\n                      </Button>\n                    )}\n                  </>\n                ) : (\n                  <>\n                    <Radio {...inputProps} value={`${value.id}`} ref={ref}>\n                      {value[valueKey]}\n                    </Radio>\n                    {filtrable == true && (\n                      <Button\n                        variant=\"solid\"\n                        onClick={() => dispatch(callback(value.id))}\n                        colorScheme={\"yellow\"}\n                        size=\"xs\"\n                      >\n                        Annuler\n                      </Button>\n                    )}\n                  </>\n                )}\n              </>\n            ))}\n          </Stack>\n        </RadioGroup>\n      </>\n    );\n  }\n);\nexport default RadioObject;\n","import {\n  Radio,\n  Button,\n  Box,\n  Stack,\n  RadioGroup,\n  useRadio,\n  useRadioGroup,\n  HStack,\n} from \"@chakra-ui/react\";\nimport React, { forwardRef, useState } from \"react\";\nfunction RadioCard(props) {\n  const { getInputProps, getCheckboxProps } = useRadio(props);\n\n  const input = getInputProps();\n  const checkbox = getCheckboxProps();\n\n  return (\n    <Box as=\"label\">\n      <input {...input} />\n      <Box\n        {...checkbox}\n        cursor=\"pointer\"\n        borderWidth=\"1px\"\n        borderRadius=\"md\"\n        boxShadow=\"md\"\n        _checked={{\n          bg: \"teal.600\",\n          color: \"white\",\n          borderColor: \"teal.600\",\n        }}\n        _focus={{\n          boxShadow: \"outline\",\n        }}\n        px={5}\n        py={3}\n      >\n        {props.children}\n      </Box>\n    </Box>\n  );\n}\nconst RadioProduct = forwardRef(\n  (\n    {\n      name,\n      className,\n      options,\n      radioValue,\n      valueKey,\n      direction,\n      inArray,\n      filter,\n      setData,\n      changeValue,\n      setRadio,\n      filtrable,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const [radioValueData, setRadioValue] = useState(radioValue);\n    const [value, setValue] = React.useState(`${radioValueData}`);\n    const removeFromArray = (value) => {\n      options.filter((option) => option.id != value);\n    };\n    React.useEffect(() => {\n      changeValue(options.find((option) => option.id == value));\n      if (setData) {\n        setData(value);\n        setRadioValue(value);\n      }\n    }, [value]);\n    React.useLayoutEffect(() => {\n      if (setRadio) {\n        setRadio(radioValueData);\n      }\n    }, [radioValueData]);\n    const { getRootProps, getRadioProps } = useRadioGroup({\n      name: name,\n      defaultValue: 1,\n      onChange: (value) => {\n        console.log(\"hiii\", value);\n      },\n    });\n\n    const group = getRootProps();\n    return (\n      <>\n        <HStack {...group}>\n          {options.map(({ id }) => {\n            const radio = getRadioProps({ id });\n\n            return (\n              <RadioCard key={id} {...radio}>\n                {id}\n              </RadioCard>\n            );\n          })}\n        </HStack>\n        {/**\n       <RadioGroup\n        onChange={setValue}\n        name={name}\n        defaultValue={`${radioValueData}`}\n        className={className}\n      >\n        <Stack spacing={4} direction={direction}>\n          {options.map((value) => (\n            <>\n              <Radio {...inputProps} value={`${value.id}`} ref={ref}>\n                {value[valueKey]}\n              </Radio>\n              {filtrable == true && (\n                <Button\n                  variant=\"solid\"\n                  onClick={() => removeFromArray(value.id)}\n                  colorScheme={\"yellow\"}\n                  size=\"xs\"\n                >\n                  Annuler\n                </Button>\n              )}\n            </>\n          ))}\n        </Stack>\n      </RadioGroup>\n      \n      \n       */}\n      </>\n    );\n  }\n);\nexport default RadioProduct;\n","import React, { forwardRef } from \"react\";\nimport { Input, useColorModeValue } from \"@chakra-ui/react\";\nimport {isFunction} from \"lodash\";\nconst PasswordInput = forwardRef(\n  (\n    {\n      icon,\n      className,\n      filter,\n      setData,\n      name,\n      value,\n      placeholder,\n      changeValue,\n      invalid,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const handleChange =React.useCallback((event) => {\n      if (!filter || filter.test(event.target.value)) {\n        if (isFunction(changeValue)) {\n          changeValue(event.target.value, event);\n        }\n      }\n    },[name]);\n    return (\n      <div className={className}>\n        {icon && <i className={`fa fa-${icon}`} />}\n        <Input\n          bg={\"gray.100\"}\n          boxShadow=\"sm\"\n          type=\"password\"\n          isInvalid={invalid}\n          color={\"gray.700\"}\n          placeholder={placeholder}\n          ref={ref}\n          defaultValue={value}\n          onBlur={handleChange}\n          \n        />\n      </div>\n    );\n  }\n);\nexport default  PasswordInput;\n\n","import React, { forwardRef } from 'react';\nimport { Input, Checkbox, useColorModeValue } from '@chakra-ui/react';\nimport { isFunction } from 'lodash';\nconst CheckBoxInput = forwardRef(\n  (\n    {\n      icon,\n      className,\n      filter,\n      setData,\n      name,\n      value,\n      label,\n      placeholder,\n      changeValue,\n      invalid,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const handleChange = React.useCallback(\n      event => {\n        if (!filter || filter.test(event.target.value)) {\n          if (isFunction(changeValue)) {\n            changeValue(event.target.value, event);\n          }\n        }\n      },\n      [name]\n    );\n    return (\n      <div className={className}>\n        {icon && <i className={`fa fa-${icon}`} />}\n        <Checkbox\n          colorScheme=\"teal\"\n          ref={ref}\n          defaultValue={value}\n          onChange={handleChange}\n          name={name}\n          defaultIsChecked\n        >\n          {label}\n        </Checkbox>\n       \n      </div>\n    );\n  }\n);\nexport default CheckBoxInput;\n","import React, { forwardRef, useEffect } from \"react\";\nimport { Input, useColorModeValue } from \"@chakra-ui/react\";\nimport { isFunction } from \"lodash\";\n\nimport {\n  NumberInput,\n  NumberInputField\n} from \"@chakra-ui/react\";\n\nconst NumberInputComponent = forwardRef(\n  (\n    {\n      icon,\n      className,\n      filter,\n      setData,\n      name,\n      value,\n      data = 0,\n      min=0,\n      placeholder,\n      changeValue,\n      invalid,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const handleChange = React.useCallback(\n      (value) => {\n        if (!filter || filter.test(value)) {\n          if (isFunction(changeValue)) {\n            changeValue(Number(value));\n          }\n        }\n      },\n      [name]\n    );\n    useEffect(() => {\n      if (data) changeValue(Number(data));\n    }, [data]);\n    return (\n      <div className={className}>\n        {icon && <i className={`fa fa-${icon}`} />}\n         <NumberInput\n          inputMode={\"numeric\"}\n          bg={\"gray.100\"}\n          boxShadow=\"sm\"\n          color={\"gray.700\"}\n          isInvalid={invalid}\n          name={name}\n          ref={ref}\n          step={1}\n          onChange={handleChange}\n          min={min}\n          defaultValue={value}\n        >\n          <NumberInputField />\n        </NumberInput>\n      </div>\n    );\n  }\n);\nexport default NumberInputComponent;\n","import React, { useState, useEffect } from \"react\";\nimport TextInput from \"./components/TextInput\";\nimport RadioButton from \"./components/RadioButton\";\nimport SelectButton from \"./components/SelectButton\";\nimport TextareaInput from \"./components/TextareaInput\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { InfoIcon } from \"@chakra-ui/icons\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { Flex, Box } from \"@chakra-ui/layout\";\nimport TagInput from \"./components/TagInput\";\nimport DateInput from \"./components/DateInput\";\nimport SelectObject from \"./components/SelectObject\";\nimport RadioObject from \"./components/RadioObject\";\nimport RadioProduct from \"./components/RadioProduct\";\nimport PasswordInput from \"./components/PasswordInput\";\nimport CheckBoxInput from \"./components/CheckBoxInput\";\nimport NumberInputComponent from \"./components/NumberInput\";\nconst generateField = (FormComponent) => {\n  return ({\n    className,\n    label,\n    labelSize = \"13px\",\n    labelWeight = \"400\",\n    tip,\n    info,\n    isBool = false,\n    options,\n    optional,\n    error,\n    name,\n    half = false,\n    ...otherProps\n  }) => {\n    const [labelText, setLabelText] = useState(\"\");\n    useEffect(() => {\n      setLabelText(label);\n    }, [label]);\n    return (\n      <Box style={{ width: half ? \"50%\" : \"100%\" }}>\n        <FormControl isInvalid={!!error}>\n          <Flex justifyContent=\"flex-start\" alignItems=\"center\">\n            {!isBool && (\n              <>\n                {labelText && (\n                  <>\n                    <FormLabel\n                      fontSize={labelSize}\n                      fontWeight={labelWeight}\n                      mb={1}\n                      mr={1}\n                      color={\"muted.400\"}\n                      htmlFor={label}\n                    >\n                      {labelText}\n                    </FormLabel>\n                    {tip && (\n                      <Tooltip\n                        placement=\"bottom-end\"\n                        label={tip}\n                        bg={\"gray.800\"}\n                        aria-label=\"Guide d'utilisation\"\n                      >\n                        <InfoIcon fontSize=\"11px\" color={\"gray\"} />\n                      </Tooltip>\n                    )}\n                    {optional && (\n                      <chakra.small color=\"blue.700\">\n                        {\"(\"} facultatif {\")\"}\n                      </chakra.small>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </Flex>\n\n          <FormComponent\n            invalid={!!error}\n            options={options}\n            name={name}\n            label={label}\n            {...otherProps}\n          />\n          {info && (\n            <chakra.small\n              my={4}\n              color=\"muted.500\"\n              fontStyle=\"italic\"\n              fontWeight=\"medium\"\n            >\n              {info}\n            </chakra.small>\n          )}\n          {error && <p style={{ color: \"red\" }}>{error}</p>}\n        </FormControl>\n      </Box>\n    );\n  };\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  Input: generateField(TextInput),\n  Number: generateField(NumberInputComponent),\n  Radio: generateField(RadioButton),\n  Select: generateField(SelectButton),\n  Textarea: generateField(TextareaInput),\n  Tag: generateField(TagInput),\n  SelectObject: generateField(SelectObject),\n  RadioObject: generateField(RadioObject),\n  RadioProduct: generateField(RadioProduct),\n  Date: generateField(DateInput),\n  Password: generateField(PasswordInput),\n  Checkbox: generateField(CheckBoxInput),\n};\n","import React from 'react';\nimport {\n  Formik,\n  Form as FormikForm,\n  FastField as FormikField,\n  ErrorMessage,\n} from 'formik';\nimport { get, mapValues } from 'lodash';\nimport Field from './field/Field';\nconst Form = ({ validate, validations, children, ...otherProps }) => (\n  <Formik\n    {...otherProps}\n    enableReinitialize={true}\n    validationSchema={validations}\n    validateOnChange={false}\n    validateOnBlur={false}\n    \n  />\n);\nForm.Element = props => <FormikForm noValidate {...props} />;\n\nForm.Field = mapValues(\n  Field,\n  FieldComponent =>\n    ({ name, validate, ...props }) =>\n      (\n        <>\n          <FormikField name={name} validate={validate}>\n            {({ field, form: { touched, errors, setFieldValue } }) => (\n              <FieldComponent\n                {...field}\n                {...props}\n                name={name}\n                mb={2}\n                error={get(touched, name) && get(errors, name)}\n                changeValue={value => setFieldValue(name, value)}\n              />\n            )}\n          </FormikField>\n        </>\n      )\n);\n\nForm.initialValues = (data, getFieldValues) =>\n  getFieldValues((key, defaultValue = '') => {\n    const value = get(data, key);\n    return value === undefined || value === null ? defaultValue : value;\n  });\n\nexport default Form;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nimport Form from \"../../utils/form\";\nimport { action, getData } from \"../../utils/lib/call\";\nconst AddProd = () => {\n  const { id } = useParams();\n  const fournisseurs = useSelector(getData(\"fournisseurs\").value);\n  const categories = useSelector(getData(\"categories\").value);\n  const meta = useSelector(getData(\"products\").meta);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(action(\"fournisseurs\").fetch());\n    dispatch(action(\"categories\").fetch());\n    dispatch(action(\"products\").fetch());\n  }, []);\n  return (\n    <Content>\n      <ContentHeader title=\"Ajouter un produit\">\n        <ActiveLink title=\"Ajouter un produit\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <Form\n          id=\"add-form-product\"\n          enableReinitialize\n          initialValues={{\n            \n          }}\n          validations={{}}\n          onSubmit={(values, form) => {\n            console.log(values);\n          }}\n        >\n          <Form.Element>\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <div className=\"card\">\n                  <div className=\"card-header bg-dark text-white\">\n                    <h5>Information générale</h5>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <Form.Field.Select\n                      name=\"categoryId\"\n                      label=\"Categorie\"\n                      valueKey=\"name\"\n                      options={categories}\n                    />\n                    <Form.Field.Select\n                      name=\"fournisseurId\"\n                      label=\"Fournisseur\"\n                      valueKey=\"name\"\n                      options={fournisseurs}\n                    />\n                    <Form.Field.Input\n                      name=\"name\"\n                      label=\"Désignation\"\n                      placeholder={\"Désignation\"}\n                    />\n                    <Form.Field.Radio\n                      radioValue={\"1\"}\n                      valueKey=\"name\"\n                      label=\"Type d'article\"\n                      name=\"type\"\n                      options={[\n                        { id: \"BOLUS\", name: \"BOLUS\" },\n                        { id: \"FLACON\", name: \"FLACON\" },\n                        { id: \"UNITE\", name: \"UNITE\" },\n                        { id: \"SACHET\", name: \"SACHET\" },\n                      ]}\n                      direction=\"row\"\n                    />\n                    <Form.Field.Input\n                      name=\"prixFournisseur\"\n                      label=\"prix unitaire\"\n                      placeholder={\"prix unitaire\"}\n                    />\n                    <Form.Field.Input\n                      name=\"quantity\"\n                      label=\"Quantité\"\n                      placeholder={\"Quantité\"}\n                    />\n                    <Form.Field.Input\n                      type=\"date\"\n                      name=\"datePer\"\n                      label=\"date de peremption\"\n                      placeholder={\"date de peremption\"}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-lg-6\">\n                <div className=\"card\">\n                  <div className=\"card-header bg-dark text-white\" >\n                    <h5>Vente</h5>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <Form.Field.Input\n                      name=\"prixVente\"\n                      label=\"Prix de vente\"\n                      placeholder={\"prix de vente\"}\n                    />\n\n                    <Form.Field.Input\n                      name=\"prixVaccinateur\"\n                      label=\"Prix du vaccinateur\"\n                      placeholder={\"prix du vaccinateur\"}\n                    />\n                    <Form.Field.Input\n                      name=\"prixParCC\"\n                      label=\"Prix de Vente en ml\"\n                      placeholder={\"Prix de Vente en ml\"}\n                    />\n                  </div>\n                </div>\n                <button className=\"btn btn-green  btn-sm \" type=\"submit\">\n                  Ajouter\n                </button>\n              </div>\n            </div>\n          </Form.Element>\n        </Form>\n      </Page>\n    </Content>\n  );\n};\n\nexport default AddProd;\n","import React from \"react\";\nimport Content from \"../../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport { useParams } from \"react-router-dom\";\nimport { NumberToLetter } from \"convertir-nombre-lettre\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NumberFormat from \"react-number-format\";\nimport { Card } from \"react-bootstrap\";\nimport { displayDate } from \"../../../utils/functions\";\nconst DetailApprov = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const approv = useSelector(getData(\"approvis\").value);\n  React.useEffect(() => {\n    dispatch(action(\"approvis\").get(id));\n  }, [id]);\n  return (\n    <Content>\n      <ContentHeader title=\"Détail d'approv.\">\n        <ActiveLink title=\"Detail d'approv.\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <div className=\"bg-white p-2\">\n          <Card>\n            <Card.Header className=\"d-flex justify-content-between align-items-center bg-dark text-white\">\n              Détail du facture ({displayDate(approv[0]?.dateApprov)})\n            </Card.Header>\n            <Card.Body>\n              <p>Arrêté à la somme de </p>\n              <p className=\"text-uppercase my-2\">\n                <strong>{NumberToLetter(approv[0]?.total)} ARIARY</strong>\n              </p>\n              <tr>\n                <td>\n                  <strong>Date Echeance</strong> :{\" \"}\n                  {displayDate(approv[0]?.dateEcheance)}\n                </td>{\" \"}\n              </tr>\n              <td className=\"mb-1\">\n                <h3>Remarque</h3>\n                <p class=\"text-info\">{approv[0]?.remarque}</p>\n              </td>\n              <br />\n              <h3 >\n                {\" \"}\n                <strong>ARTICLES</strong>\n              </h3>\n              {approv[0]?.contenu.map((app) => (\n                <div className=\"border mb-3 p-3\">\n                  <tr>\n                    <td>Nom de l'article:</td>\n                    <td>{app?.name}</td>\n                  </tr>\n                  <tr>\n                    <td>Quantité:</td>\n                    <td>{app?.quantityParProduct}</td>\n                  </tr>\n                  <tr>\n                    <td>Prix unitaire:</td>\n                    <td>\n                      <NumberFormat\n                        value={app?.prixFournisseur}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                        suffix={\"Ar\"}\n                        renderText={(value, props) => (\n                          <div {...props}>{value}</div>\n                        )}\n                      />\n                    </td>\n                  </tr>\n                </div>\n              ))}\n              <tr>\n                <td>\n                  <strong>Remise :</strong> {approv[0]?.remise} %\n                </td>\n              </tr>\n              <tr>\n                <td class=\"text-uppercase\">\n                  <strong>Paiement en :</strong>\n                  {approv[0]?.typePaye}\n                </td>\n              </tr>\n              <tr>\n                <td class=\"text-uppercase\">\n                  <strong>Total:</strong>\n                  <NumberFormat\n                    value={approv[0]?.total}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                    suffix={\"Ar\"}\n                    renderText={(value, props) => <div {...props}>{value}</div>}\n                  />\n                </td>\n              </tr>{\" \"}\n            </Card.Body>\n          </Card>\n        </div>\n      </Page>\n    </Content>\n  );\n};\n\nexport default DetailApprov;\n","import React from \"react\";\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\nimport {\n  useTable,\n  useSortBy,\n  useFilters,\n  useGlobalFilter,\n  useAsyncDebounce,\n  usePagination,\n} from \"react-table\";\nimport { Link } from \"react-router-dom\";\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <input\n      className=\"form-control\"\n      value={filterValue || \"\"}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n      placeholder={`Rechercher...`}\n    />\n  );\n}\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return (\n    <div w={200}>\n      <input\n        className=\"form-control\"\n        value={value || \"\"}\n        onChange={(e) => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        placeholder={`Rechercher ...`}\n      />\n    </div>\n  );\n}\nexport default function DataTable({\n  columns,\n  data,\n  meta,\n  addUrl,\n  urlName,\n  footer,\n  tip = \"\",\n  filter = true,\n  paginate = true,\n  guide,\n}) {\n  const colspan = columns.length;\n  const defaultColumn = React.useMemo(\n    () => ({\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize, globalFilter },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <>\n      <div className=\"d-flex my-2 justify-content-between align-items-center\">\n        {filter && (\n          <GlobalFilter\n            preGlobalFilteredRows={preGlobalFilteredRows}\n            globalFilter={globalFilter}\n            setGlobalFilter={setGlobalFilter}\n          />\n        )}\n        <div>\n          {addUrl && urlName && (\n            <Link\n              className=\"btn btn-sm btn-green\"\n              variant=\"solid\"\n              to={addUrl}\n            >\n              {urlName}\n            </Link>\n          )}\n        </div>\n      </div>\n      {tip && <h3>{tip}</h3>}\n      <table {...getTableProps()} className=\"table table-bordered striped\">\n        <thead className=\"bg-thead \">\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  isNumeric={column.isNumeric}\n                >\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" 🔽\"\n                        : \" 🔼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {meta.isFetching ? (\n            <td colSpan={colspan} className=\"text-center\">\n              <p>Chargement des données en cours ....</p>\n            </td>\n          ) : (\n            <>\n              {page.length == 0 && (\n                <tr>\n                  <td colSpan={colspan} style={( guide ? {\"textAlign\":\"left\"} : {\"textAlign\":\"center\"})}>\n                    {guide ? (\n                      <div\n                        style={{\n                          width: \"100%\",\n                          color: \"blue.700\",\n                          backgroundColor: \"gray.200\",\n                          padding: \"10px\",\n                        }}\n                      >\n                        <h3 className=\"py-3\">{tip}</h3>\n                        {guide}\n                      </div>\n                    ) : (\n                      \"Aucune enregistrement à afficher\"\n                    )}\n                  </td>\n                </tr>\n              )}\n              {page.map((row) => {\n                prepareRow(row);\n                return (\n                  <tr p={0} {...row.getRowProps()}>\n                    {row.cells.map((cell) => (\n                      <td\n                        fontSize=\"11px\"\n                        {...cell.getCellProps()}\n                        isNumeric={cell.column.isNumeric}\n                      >\n                        {cell.render(\"Cell\")}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              })}\n            </>\n          )}\n        </tbody>\n        {footer && (\n          <tfoot bg={\"blue.900\"}>\n            <tr>\n              <td colSpan={colspan} color={\"white\"}>\n                {footer}\n              </td>\n            </tr>\n          </tfoot>\n        )}\n      </table>\n      {paginate && (\n        <div className=\"d-flex  justify-content-between align-items-center py-3\">\n          <div style={{ width: \"200px\" }}>\n            <div className=\"d-flex justify-content-center align-items-center\">\n              <input\n                className=\"form-control  mr-2\"\n                // eslint-disable-next-line react-hooks/rules-of-hooks\n                type=\"number\"\n                placeholder=\"Page\"\n                value={pageIndex + 1}\n                onChange={(e) => {\n                  const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                  gotoPage(page);\n                }}\n              />\n              <select\n                // eslint-disable-next-line react-hooks/rules-of-hooks\n                className=\"form-control\"\n                value={pageSize}\n                onChange={(e) => {\n                  setPageSize(Number(e.target.value));\n                }}\n                size=\"sm\"\n              >\n                {[5, 10, 20, 30, 40, 50, 100, 150, 250].map((pageSize) => (\n                  <option key={pageSize} value={pageSize}>\n                    {pageSize}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div>\n            <>\n              Page{\" \"}\n              <strong>\n                {pageIndex > 0 ? pageIndex + 1 : 1} sur {pageOptions.length}\n              </strong>{\" \"}\n            </>\n          </div>\n          <div className=\"mb-6\">\n            <div>\n              <button\n                className=\"mr-2 btn btn-sm btn-green\"\n                onClick={() => previousPage()}\n                disabled={!canPreviousPage}\n              >\n                {\"<<\"} Précedent\n              </button>\n              <button\n                className=\"mr-2 btn btn-sm btn-green\"\n                onClick={() => nextPage()}\n                disabled={!canNextPage}\n              >\n                Suivant {\">>\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { action } from \"../../../utils/lib/call\";\nfunction DeleteApprov({ model, entity }) {\n  const dispatch = useDispatch();\n  const deleteEntity = () => {\n    dispatch(action(model).deleteTransaction(entity, \"/delete-facture\"));\n   // window.location.reload();\n  };\n  return (\n    <>\n      <button\n        className=\"btn btn-danger btn-sm\"\n        onClick={(e) => {\n          e.preventDefault();\n          if (window.confirm(`Vous voulez vraiment supprimer ce facture ?`)) {\n            deleteEntity();\n          }\n        }}\n      >\n        Supprimer\n      </button>\n    </>\n  );\n}\n\nexport default DeleteApprov;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Content from \"../../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport NumberFormat from \"react-number-format\";\nimport { getApprov } from \"../../../store/actions/approv\";\nimport { displayDate, displayMoney } from \"../../../utils/functions\";\nimport DataTable from \"../../../utils/admin/DataTable\";\nimport { NOUVELLEFACTURE } from \"../../../constants/routes\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\nimport DeleteApprov from \"./DeleteApprov\";\n\nexport default function ListApprov() {\n  var start = moment().isoWeekday(1).startOf(\"week\");\n  var end = moment().endOf(\"week\");\n  const [deb, setDeb] = useState(start);\n  const [fin, setFin] = useState(end);\n  const [dateRange, onChangeDateRange] = useState([start, end]);\n  const refDateDeb = useRef(null);\n  const refDateFin = useRef(null);\n  const approvisionnements = useSelector(getData(\"approvis\").value);\n  const meta = useSelector(getData(\"approvis\").meta);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(action(\"approvis\").fetch());\n  }, []);\n  useEffect(() => {\n    if (dateRange !== null) {\n      if (dateRange[0]) {\n        setDeb(dateRange[0]);\n      }\n      if (dateRange[1]) {\n        setFin(dateRange[1]);\n      }\n    } else {\n      setDeb(start);\n      setFin(end);\n    }\n  }, [dateRange]);\n  useEffect(() => {\n    dispatch(getApprov(deb, fin));\n  }, [deb, fin]);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"#\",\n        accessor: \"id\",\n      },\n     {\n        Header: \"Produit\",\n        Cell: (data) => {\n          return (\n            <div style={{width:'200px'}}>\n              {data.row.original.contenu.map((c) => (\n                <span>\n                  {c.name}\n                  {\",\"}\n                </span>\n              ))}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Date du facture\",\n        Cell: (data) => {\n          return (\n            <>\n              <span className=\"badge badge-primary\">\n                {displayDate(data.row.original?.dateApprov)}\n              </span>\n            </>\n          );\n        },\n      },\n      {\n        Header: \"Date echeance\",\n        Cell: (data) => {\n          return (\n            <>\n              <span className=\"badge badge-warning\">\n                {displayDate(data.row.original?.dateEcheance)}\n              </span>\n            </>\n          );\n        },\n      },\n      {\n        Header: \"Mode de paiement\",\n        accessor: \"typePaye\",\n      },\n      {\n        Header: \"Total\",\n        Cell: (data) => {\n          return <div>{displayMoney(data.row.original?.total)}</div>;\n        },\n      },\n      {\n        Header: \"Actions\",\n        Cell: (data) => {\n          return (\n            <>\n              <Link\n                to={`/approvis/detail/${data.row.original?.id}`}\n                className=\"btn btn-green btn-sm mr-2\"\n              >\n                Détails\n              </Link>\n              <Link\n                to={`/editer/facture/${data.row.original?.id}`}\n                className=\"btn btn-warning btn-sm mr-2\"\n              >\n                Editer\n              </Link>\n              <DeleteApprov model=\"approvis\" entity={data.row.original} />\n            </>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <Content>\n      <ContentHeader title=\"Factures\">\n        <ActiveLink title=\"Factures\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div>\n              <h3 className=\"text-uppercase\">Factures</h3>\n              <p>{`${displayDate(deb)} ->  ${displayDate(fin)}`}</p>\n            </div>\n          </div>\n          <div className=\"col-lg-6 text-right\">\n            <DateRangePicker\n              locale=\"fr-FR\"\n              onChange={onChangeDateRange}\n              value={dateRange}\n            />\n          </div>{\" \"}\n        </div>\n\n        <DataTable\n        filter={false}\n          data={approvisionnements.sort((low, high) => high.id - low.id)}\n          meta={meta}\n          columns={columns}\n          addUrl={NOUVELLEFACTURE}\n          urlName={\"Ajouter un facture\"}\n        />\n      </Page>\n    </Content>\n  );\n}\n","import { fetch } from \"../../utils/lib\";\nexport const getApprov = (deb,fin) => fetch('approvis', { path: `/get-approv-by-date?deb=${deb}&fin=${fin}`,replace:true })\nexport const getApprovData = (deb,fin) => fetch('approvis', { path: `/get-approv-by-date?deb=${deb}&fin=${fin}`,replace:true })\nexport const fetchProductsById = (id) =>\n  fetch(\"approvis\", { path: `/approvis/${id}`, replace: true });\n","import React from \"react\";\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nconst BSortie = () => {\n  return (\n    <Content>\n      <ContentHeader title=\"Sortie\">\n        <ActiveLink title=\"Sortie\"></ActiveLink>\n      </ContentHeader>\n      <Page></Page>\n    </Content>\n  );\n};\n\nexport default BSortie;\n","export const SET_BASKET_ITEMS = 'SET_BASKET_ITEMS';\nexport const ADD_TO_BASKET = 'ADD_TO_BASKET';\nexport const REMOVE_FROM_BASKET = 'REMOVE_FROM_BASKET';\nexport const CLEAR_BASKET = 'CLEAR_BASKET';\nexport const ADD_QTY_ITEM = 'ADD_QTY_ITEM';\nexport const MINUS_QTY_ITEM = 'MINUS_QTY_ITEM';\nexport const ADD_QTY_PORTION_ITEM = 'ADD_QTY_PORTION_ITEM';\nexport const MINUS_QTY_PORTION_ITEM = 'MINUS_QTY_PORTION_ITEM';\n\nexport const SET_CHECKOUT_SHIPPING_DETAILS = 'SET_CHECKOUT_SHIPPING_DETAILS';\nexport const SET_CHECKOUT_PAYMENT_DETAILS = 'SET_CHECKOUT_PAYMENT_DETAILS';\nexport const RESET_CHECKOUT = 'RESET_CHECKOUT';\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { BONDESORTIE } from \"../../constants/routes\";\nimport { action } from '../../utils/lib/call';\nfunction DeleteFromDepot({ model, entity }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const deleteEntity = () => {\n    dispatch(action(model).deleteTransaction(entity, \"/delete-from-depot\"));\n    history.push(BONDESORTIE);\n  };\n  return (\n    <>\n      <button\n        className=\"btn btn-danger btn-sm\"\n        onClick={(e) => {\n          e.preventDefault();\n          if (window.confirm(`Vous voulez vraiment supprimer ce commande ?`)) {\n            deleteEntity();\n          }\n        }}\n      >\n        Supprimer\n      </button>\n    </>\n  );\n}\n\nexport default DeleteFromDepot;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport { getCredit, setPayerCommande } from \"../../store/actions/commandes\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\n\nimport { displayDate, displayMoney } from \"../../utils/functions\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker/dist/DateRangePicker\";\nimport DataTable from '../../utils/admin/DataTable';\nimport DeleteFromDepot from \"../fromDepot/DeleteFromDepot\";\nfunction Credit(props) {\n  var start = moment().isoWeekday(1).startOf(\"week\");\n  var end = moment().endOf(\"week\");\n  const [deb, setDeb] = useState(start);\n  const [fin, setFin] = useState(end);\n  const [dateRange, onChangeDateRange] = useState([start, end]);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const meta = useSelector(getData(\"commandes\").meta);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (dateRange !== null) {\n      if (dateRange[0]) {\n        setDeb(dateRange[0]);\n      }\n      if (dateRange[1]) {\n        setFin(dateRange[1]);\n      }\n    } else {\n      setDeb(start);\n      setFin(end);\n    }\n  }, [dateRange]);\n  const calculateTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.prixVente * el.quantityParProductDepot;\n    });\n    return total;\n  };\n  const quantiteBruteTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.quantityParProductDepot * 1;\n    });\n    return total;\n  };\n  const quantiteCCTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.qttByCCDepot * 1;\n    });\n    return total;\n  };\n  useEffect(() => {\n    dispatch(getCredit(deb, fin));\n  }, [deb, fin]);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Date de credit\",\n        Cell: (data) => {\n          return <>{displayDate(data.row.original?.dateCom)}</>;\n        },\n      },\n      {\n        Header: \"Produits\",\n        width: 50,\n        Cell: (data) => {\n          return (\n            <div style={{ width: \"100px\" }}>\n              {data.row.original?.contenu?.map((d) => (\n                <span>\n                  {d.name}\n                  {\",\"}\n                </span>\n              ))}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Status\",\n        Cell: (data) => {\n          return (\n            <div>\n              {data.row.original?.status == true ? (\n                <h3 className=\"badge badge-success\">payé</h3>\n              ) : (\n                <h3 className=\"badge badge-danger\">non payé</h3>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Nom de la personne\",\n        accessor: \"emprunter.name\",\n      },\n      {\n        Header: \"Contact\",\n        accessor: \"emprunter.contact\",\n      },\n      \n      {\n        Header: \"Quantité\",\n        Cell: (data) => {\n          return (\n            <div>\n              {quantiteBruteTotal(data.row.original?.contenu)}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Total\",\n        Cell: (data) => {\n          return (\n            <div>\n              {displayMoney(calculateTotal(data.row.original?.contenu))}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Actions\",\n        Cell: (data) => {\n          return (\n            <>\n              <Link\n                to={`/detail/${data.row.original?.id}`}\n                className=\"btn btn-green btn-sm mr-2\"\n              >\n                Détails\n              </Link>\n              <Link\n                to={`/editer/commande/${data.row.original?.id}`}\n                className=\"btn btn-warning btn-sm mr-2\"\n              >\n                Editer\n              </Link>\n              <DeleteFromDepot model=\"fromdepots\" entity={data.row.original} />\n            </>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <Content>\n      <ContentHeader title=\"Crédit\">\n        <ActiveLink title=\"Crédit\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n      <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div>\n              <h3 className=\"text-uppercase\">Credit</h3>\n              <p>{`${displayDate(deb)} ->  ${displayDate(fin)}`}</p>\n            </div>\n          </div>\n          <div className=\"col-lg-6 text-right\">\n            <DateRangePicker\n              locale=\"fr-FR\"\n              onChange={onChangeDateRange}\n              value={dateRange}\n            />\n          </div>{\" \"}\n        </div>\n        <DataTable\n          data={commandes.sort((low, high) => high.id - low.id)}\n          meta={meta}\n          columns={columns}\n          //  addUrl={NOUVELLEFACTURE}\n          //  urlName={\"Ajouter un facture\"}\n        />\n      </Page>\n    </Content>\n  );\n}\n\nexport default Credit;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport { getCredit, getCreditVaccinateur, setPayerCommande } from \"../../store/actions/commandes\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\n\nimport { displayDate, displayMoney } from \"../../utils/functions\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker/dist/DateRangePicker\";\nimport DataTable from '../../utils/admin/DataTable';\nimport DeleteFromDepot from \"../fromDepot/DeleteFromDepot\";\nfunction CreditVaccinateur(props) {\n  var start = moment().isoWeekday(1).startOf(\"week\");\n  var end = moment().endOf(\"week\");\n  const [deb, setDeb] = useState(start);\n  const [fin, setFin] = useState(end);\n  const [dateRange, onChangeDateRange] = useState([start, end]);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const meta = useSelector(getData(\"commandes\").meta);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (dateRange !== null) {\n      if (dateRange[0]) {\n        setDeb(dateRange[0]);\n      }\n      if (dateRange[1]) {\n        setFin(dateRange[1]);\n      }\n    } else {\n      setDeb(start);\n      setFin(end);\n    }\n  }, [dateRange]);\n  const calculateTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.prixVente * el.quantityParProductDepot;\n    });\n    return total;\n  };\n  const quantiteBruteTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.quantityParProductDepot * 1;\n    });\n    return total;\n  };\n  const quantiteCCTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.qttByCCDepot * 1;\n    });\n    return total;\n  };\n  useEffect(() => {\n    dispatch(getCreditVaccinateur(deb, fin));\n  }, [deb, fin]);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Date du credit\",\n        Cell: (data) => {\n          return <>{displayDate(data.row.original?.dateCom)}</>;\n        },\n      },\n      {\n        Header: \"Produits\",\n  \n        Cell: (data) => {\n          return (\n            <div style={{ width: \"100px\" }}>\n              {data.row.original?.contenu?.map((d) => (\n                <span>\n                  {d.name}\n                  {\",\"}\n                </span>\n              ))}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Status\",\n        Cell: (data) => {\n          return (\n            <div>\n              {data.row.original?.status == true ? (\n                <h3 className=\"badge badge-success\">payé</h3>\n              ) : (\n                <h3 className=\"badge badge-danger\">non payé</h3>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Nom du vaccinateur\",\n        accessor: \"vaccinateur.name\",\n      },\n      {\n        Header: \"Contact du vaccinateur\",\n        accessor: \"vaccinateur.contact\",\n      },\n      \n      {\n        Header: \"Quantité\",\n        Cell: (data) => {\n          return (\n            <div>\n              {quantiteBruteTotal(data.row.original?.contenu)}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Total\",\n        Cell: (data) => {\n          return (\n            <div>\n              {displayMoney(calculateTotal(data.row.original?.contenu))}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Actions\",\n        Cell: (data) => {\n          return (\n            <>\n              <Link\n                to={`/detail/${data.row.original?.id}`}\n                className=\"btn btn-green btn-sm mr-2\"\n              >\n                Détails\n              </Link>\n              <Link\n                to={`/editer/commande/${data.row.original?.id}`}\n                className=\"btn btn-warning btn-sm mr-2\"\n              >\n                Editer\n              </Link>\n              <DeleteFromDepot model=\"fromdepots\" entity={data.row.original} />\n            </>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <Content>\n      <ContentHeader title=\"Crédit  pour les vaccinateurs\">\n        <ActiveLink title=\"Crédit  pour les vaccinateurs\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n      <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div>\n              <h3 className=\"text-uppercase\">Credit pour les vaccinateurs</h3>\n              <p>{`${displayDate(deb)} ->  ${displayDate(fin)}`}</p>\n            </div>\n          </div>\n          <div className=\"col-lg-6 text-right\">\n            <DateRangePicker\n              locale=\"fr-FR\"\n              onChange={onChangeDateRange}\n              value={dateRange}\n            />\n          </div>{\" \"}\n        </div>\n        <DataTable\n          data={commandes.sort((low, high) => high.id - low.id)}\n          meta={meta}\n          columns={columns}\n          //  addUrl={NOUVELLEFACTURE}\n          //  urlName={\"Ajouter un facture\"}\n        />\n      </Page>\n    </Content>\n  );\n}\n\nexport default CreditVaccinateur;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect, useParams } from \"react-router-dom\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport { useLocation } from \"react-router-dom\";\nimport { CREDIT } from \"../../constants/routes\";\nimport { getCredit, setPayerCommande } from \"../../store/actions/commandes\";\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nimport NumberFormat from \"react-number-format\";\nimport { withRouter } from \"react-router-dom\";\nimport { displayDate, displayMoney } from \"../../utils/functions\";\nimport { useHistory } from 'react-router-dom';\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n  let total = 0;\n  arr.forEach((el) => {\n    total += el.prixVente * el.quantityParProductDepot * 1;\n  });\n  return total;\n};\nfunction Detail(props) {\n  let history = useHistory();\n  const { id } = useParams();\n  const commande = useSelector(getData(\"commandes\").value);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(action(\"commandes\").get(id));\n  }, [id]);;\n  return (\n    <Content>\n      <ContentHeader title=\"Détail de sortie ou entrée\">\n        <ActiveLink title=\"Détail de sortie ou entrée\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <div className=\"badge badge-info my-2\">\n          {commande[0]?.type == \"vente-depot-credit\" && <h3>Credit</h3>}\n\n          {commande[0]?.type == \"vente-depot-vaccinateur\" && (\n            <h3>Credit pour vaccinateur</h3>\n          )}\n\n          {commande[0]?.type == \"direct\" && <h3>Direct</h3>}\n        </div>\n        {commande[0]?.type == \"vente-depot-vaccinateur\" && (\n          <div className=\"border pl-3 py-3 bg-white\">\n            <>\n              <h3 className=\"my-2\">\n                {\" \"}\n                Nom du vaccinateur : {commande[0]?.vaccinateur.name}\n              </h3>\n              <h5>Contact : {commande[0]?.vaccinateur.contact}</h5>\n            </>\n          </div>\n        )}\n        {commande[0]?.type == \"vente-depot-credit\" && (\n          <div className=\"border pl-3 py-3 bg-white\">\n            <>\n              <h3 className=\"my-2\">Nom:{commande[0]?.emprunter.name}</h3>\n              <h5>Contact: {commande[0]?.emprunter.contact}</h5>\n            </>\n          </div>\n        )}\n        {commande.length > 0 && (\n          <div className=\"d-flex justify-content-between\">\n            <p className=\"text-uppercase\">\n              Commande du : {displayDate(commande[0]?.dateCom)}\n            </p>\n            {commande[0]?.status == true ? (\n              <p className=\"btn btn-sm btn-green my-2 mt-4\">payé</p>\n            ) : (\n              <button\n              className=\"btn btn-sm btn-warning my-3\"\n              onClick={() => {\n                dispatch(setPayerCommande(commande[0]?.id));\n                history.goBack();\n              }}\n            >\n              Marquer comme payé\n            </button>\n            )}\n          </div>\n        )}\n        <table className=\"table table-bordered \">\n          <tr className=\"bg-thead\">\n            <td>Nom de l'article</td>\n            <td>Quantité</td>\n            <td>Sous total</td>\n          </tr>\n          {commande.length > 0 &&\n            commande[0]?.contenu.map((c) => (\n              <tr>\n                <td style={{ width: \"40%\" }}>{c.name}</td>\n                <td className=\"d-flex align-items-center\">\n                  {displayMoney(c.prixVente)}({\"x\"} {c.quantityParProductDepot})\n                </td>\n\n                <td>{displayMoney(c.prixVente * c.quantityParProductDepot)}</td>\n              </tr>\n            ))}\n        </table>\n        <div className=\"d-flex justify-content-end\">\n          <strong>Total</strong>:\n          {displayMoney(calculateTotal(commande[0]?.contenu))}\n        </div>\n        \n      </Page>\n    </Content>\n  );\n}\n\nexport default withRouter(Detail);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect, useParams } from \"react-router-dom\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport { useLocation } from \"react-router-dom\";\nimport { CREDIT } from \"../../constants/routes\";\nimport { getCredit, setPayerCommande } from \"../../store/actions/commandes\";\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nimport NumberFormat from \"react-number-format\";\nimport { withRouter } from \"react-router-dom\";\nimport { displayDate, displayMoney } from \"../../utils/functions\";\nconst calculateTotal\n\n= (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n  let total = 0;\n  arr.forEach((el) => {\n    total += el.prixVente * el.quantityParProductDepot*1;\n  });\n  return total;\n};\nfunction DetailSortie(props) {\n  let history = useLocation();\n  const { id } = useParams();\n  const commande = useSelector(getData(\"commandes\").value);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(action(\"commandes\").get(id));\n  }, [id]);\n  return (\n    <Content>\n      <ContentHeader title=\"Détail de sortie ou entrée\">\n        <ActiveLink title=\"Détail de sortie ou entrée\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n     \n        <p>\n          {commande[0]?.type == \"credit\" && <p>Credit</p>}\n\n          {commande[0]?.type == \"vaccinateur\" && <p>Sortie vaccinateur</p>}\n\n          {commande[0]?.type == \"direct\" && <p>Sortie Magasion</p>}\n        </p>\n        {commande[0]?.type == \"vaccinateur\" && (\n          <div className=\"border\">\n            <>\n              <h3>{commande[0]?.vaccinateur.name}</h3>\n              <h5>{commande[0]?.vaccinateur.contact}</h5>\n            </>\n          </div>\n        )}\n        {commande[0]?.type == \"credit\" && (\n          <div className=\"border\">\n            <>\n              <h3>{commande[0]?.emprunter.name}</h3>\n              <h5>{commande[0]?.emprunter.contact}</h5>\n            </>\n          </div>\n        )}\n        {commande.length > 0 && (\n          <div className=\"d-flex justify-content-between\">\n            <p className=\"text-uppercase\">\n              Commande du : {displayDate(commande[0]?.dateCom)}\n            </p>\n            {/* <p className=\"btn btn-sm btn-green mt-4\">payé</p>*/}\n          </div>\n        )}\n        <table className=\"table table-bordered \">\n          <tr className=\"bg-thead\">\n            <td>Nom de l'article</td>\n            <td>Quantité</td>\n            <td>Sous total</td>\n          </tr>\n          {commande.length > 0 &&\n            commande[0]?.contenu.map((c) => (\n              <tr>\n                <td style={{ width: \"40%\" }}>{c.name}</td>\n                <td className=\"d-flex align-items-center\">\n                  {displayMoney(c.prixVente)}({\"x\"} {c.quantityParProductDepot}\n                  )\n                </td>\n                \n                <td>\n                  {displayMoney(c.prixVente * c.quantityParProductDepot)}\n                </td>\n              </tr>\n            ))}\n        </table>\n        <div className=\"d-flex justify-content-end\">\n          <strong>Total</strong>:\n          {displayMoney(calculateTotal(commande[0]?.contenu))}\n        </div>\n        {/*{commande[0]?.status == false && (\n          <button\n            className=\"btn btn-sm btn-green\"\n            onClick={() => {\n              dispatch(setPayerCommande(commande[0]?.id));\n              dispatch(getCredit());\n              history.push(CREDIT);\n            }}\n          >\n            Marquer comme payé\n          </button>\n        )}*/}\n      </Page>\n    </Content>\n  );\n}\n\nexport default withRouter(DetailSortie);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport { getCommandeDirect } from \"../../store/actions/commandes\";\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nimport { Link } from \"react-router-dom\";\nfunction Direct(props) {\n  const commandes = useSelector(getData(\"commandes\").value);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCommandeDirect());\n  }, []);\n  const calculateTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total=0;\n    arr.forEach(el => {\n      total+=el.prixVente;\n    });\n    return total.toFixed(2);\n  };\n  return (\n    <Content>\n    <ContentHeader title=\"Sortie pour le magasin\">\n      <ActiveLink title=\"Sortie pour le magasin\"></ActiveLink>\n    </ContentHeader>\n    <Page>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr>\n            <th>Date de commande</th>\n            <th>Nb</th>\n            <th>Montant</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          {commandes.map((p) => (\n            <tr>\n              <td>{p?.createdAt}</td>\n              <td>{p?.contenu?.length}</td>\n              <td>{calculateTotal(p?.contenu)}</td>\n              <td className=\"d-flex justify-content-around\">\n                  <Link\n                    className=\"btn btn-sm  btn-green\"\n                    to={`detail/${p.id}`}\n                  >\n                    Detail \n                  </Link>\n                </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      </Page>\n    </Content>\n  );\n}\n\nexport default Direct;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport Content from \"../../@adminlte/adminlte/Content/index\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nimport { displayDate, displayMoney } from \"../../utils/functions\";\nimport { getCommande } from \"../../store/actions/commandes\";\n\nconst Journal = () => {\n  const [deb, setDeb] = useState(new Date());\n  const [fin, setFin] = useState(new Date());\n  const refDateDeb = useRef(null);\n  const refDateFin = useRef(null);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCommande(deb, fin));\n  }, [deb, fin]);\n  const getByDate = () => {\n    if(refDateDeb.current.value==\"\"){\n      setDeb(new Date());\n    }else{\n      setDeb(refDateDeb.current.value);\n    }\n    if(refDateFin.current.value==\"\"){\n      setFin(new Date());\n    }else{\n      setFin(refDateFin.current.value);\n    }\n  };\n  const calculateTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    const total = arr.reduce((acc, val) => acc + val, 0);\n    return total;\n  };\n\n  const totalDevente = (arr) => {\n    return (\n      calculateTotal(\n        arr.map((product) => {\n          return product.prixVente * product.quantityParProduct;\n        })\n      ) +\n      calculateTotal(\n        arr.map((product) => {\n          return product.prixParCC * product.qttByCC;\n        })\n      )\n    );\n  };\n  const recetteDuJour = (arr) => {\n    let total = 0;\n    arr.map((c) => {\n      total += totalDevente(c?.contenu);\n    });\n    return total;\n  };\n  return (\n    <>\n      <Content>\n        <ContentHeader title=\"Journal de sortie\">\n          <ActiveLink title=\"Journal de sortie\"></ActiveLink>\n        </ContentHeader>\n        <Page>\n          <div className=\"row\">\n            <div className=\"col-lg-8\"></div>\n            <div className=\"col-lg-4\">\n              <div className=\"d-flex align-items-center mb-3\">\n                <input\n                  type=\"date\"\n                  name=\"datedeb\"\n                  ref={refDateDeb}\n                  placeholder=\"date debut\"\n                  className=\"form-control mr-2\"\n                />\n                <input\n                  type=\"date\"\n                  name=\"datefin\"\n                  ref={refDateFin}\n                  placeholder=\"date fin\"\n                  className=\"form-control mr-2\"\n                />\n                <button className=\"btn btn-primary\" onClick={getByDate}>\n                  Filtrer\n                </button>\n              </div>{\" \"}\n            </div>{\" \"}\n          </div>\n          <div className=\"table-responsive\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Date </th>\n                  <th>Type de sortie</th>\n                  <th>Montant Total</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {commandes.map((p) => (\n                  <tr>\n                    <td>{displayDate(p?.createdAt)}</td>\n                    <td>\n                      <>\n                        {p?.type == \"cva\" && (\n                          <div className=\"badge badge-info\">\n                            Approvisionnement du magasin\n                          </div>\n                        )}\n                        {p?.type == \"vente-magasin-direct\" && (\n                          <div className=\"badge badge-success\">\n                            Vente direct depuis le magasin\n                          </div>\n                        )}\n                        {p?.type == \"vente-magasin-credit\" && (\n                          <div className=\"badge badge-info\">\n                            credit client depuis magasin\n                          </div>\n                        )}\n                        {p?.type == \"credit\" && (\n                          <div className=\"badge badge-danger\">\n                            Credit personne\n                          </div>\n                        )}\n                        {p?.type == \"vaccinateur\" && (\n                          <div className=\"badge badge-warning\">\n                            Credit Vaccinateur\n                          </div>\n                        )}\n                        {p?.type == \"direct\" && (\n                          <div className=\"badge badge-dark\">\n                            Vente direct depuis le depôt\n                          </div>\n                        )}\n                      </>\n                    </td>\n                    <td>{displayMoney(totalDevente(p?.contenu))}</td>\n                    <td>\n                      <Link\n                        className=\"btn btn-sm  btn-green\"\n                        to={`/detail/${p.id}`}\n                      >\n                        Afficher le detail\n                      </Link>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <h3>Total:{displayMoney(recetteDuJour(commandes))}</h3>\n        </Page>\n      </Content>\n    </>\n  );\n};\nexport default Journal;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport Form from \"../../utils/form\";\nimport { action, getData } from \"../../utils/lib/call\";\n\nfunction ParametrageSuppl() {\n  const parametres = useSelector(getData(\"parametres\").value);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(action(\"parametres\").get(1));\n  }, []);\n  return (\n    <div>\n      <h3 className=\"mb-2 text-bold title\">Parametres supplementaires</h3>\n      <div className=\"card mt-2\">\n        <div className=\"card-body\">\n          <Form\n            id=\"parametrage-form\"\n            enableReinitialize\n            initialValues={{\n              nb_mois: parametres[0]?.nbMois,\n              nb_produit: parametres[0]?.nbProduits,\n            }}\n            validations={{}}\n            onSubmit={(values, form) => {\n              dispatch(\n                action(\"parametres\").update({\n                  id: 1,\n                  nb_mois: values.nb_mois,\n                  nb_produits: values.nb_produit,\n                })\n              );\n            }}\n            render={()=>(\n              <Form.Element>\n              <Form.Field.Input\n                name=\"nb_mois\"\n                label=\"Nombre de mois\"\n                placeholder=\"Nombre de mois\"\n                type=\"number\"\n              />\n              <Form.Field.Input\n                name=\"nb_produit\"\n                label=\"Nombre de produit\"\n                placeholder=\"Nombre de produit\"\n                type=\"number\"\n              />\n              <button type=\"submit\" className=\"btn btn-success mt-2 btn-sm\">\n                Sauvegarder la modification\n              </button>\n            </Form.Element>\n            )}\n          />\n        </div>{\" \"}\n      </div>{\" \"}\n    </div>\n  );\n}\n\nexport default ParametrageSuppl;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nimport { fetchProductsPerime } from \"../../store/actions/products\";\nimport DataTable from \"../../utils/admin/DataTable\";\nimport { displayDate } from \"../../utils/functions\";\nimport { action, getData } from \"../../utils/lib/call\";\n\nexport const Perime = () => {\n  const products = useSelector(getData(\"products\").value);\n  const meta = useSelector(getData(\"products\").meta);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchProductsPerime());\n  }, []);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Produit\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Quantité\",\n        accessor: \"quantityBrute\",\n      },\n      {\n        Header: \"Date de peremption\",\n        Cell: (data) => {\n          return <h3>{displayDate(data.row.original?.datePer)}</h3>;\n        },\n      },\n    ],\n    []\n  );\n  return (\n    <Content>\n      <ContentHeader title=\"Article perimé\">\n        <ActiveLink title=\"Article perimé\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <DataTable data={products} meta={meta} columns={columns} />\n      </Page>\n    </Content>\n  );\n};\n","import { create, update, fetch } from \"../../utils/lib\";\n\nexport const fetchProductsPerime = () =>\n  fetch(\"products\", { path: `/perimer`, replace: true });\nexport const fetchProductsRuptureStock = () =>\n  fetch(\"products\", { path: `/rupture/stock`, replace: true });\n\nexport const fetchProductsByFournisseur = (id) =>\n  fetch(\"products\", { path: `/product/fournisseur?id=${id}`, replace: true });\n\n  export const fetchProductsById = (id) =>\n  fetch(\"products\", { path: `/products/${id}`, replace: true });\n  \nexport const fetchProductsByCategory = (id) =>\n  fetch(\"products\", { path: `/product/category?id=${id}`, replace: true });\n\nexport const createProduct = (data) =>\n  create(\"products\", data, { path: `/create-product` });\n\nexport const updateProduct = (data) =>\n  update(\"products\", data, { path: `/update-data-product` });\n\nexport const getSortieDepotByProductId = (id) =>\n  fetch(\"sortiedepots\", {\n    path: `/sortie/depot/by/product?productId=${id}`, replace: true \n  });\n","import * as Yup from \"yup\";\nexport function validationSchema() {\n  return Yup.object().shape({\n    name: Yup.string().required(\"Le champ est requis\")\n  });\n}\n","import React from 'react';\n\nconst Guide = () => {\n return (\n   <div>\n       Description du guide\n   </div>\n )\n}\n\nexport default Guide;","import React from \"react\";\nimport {\n  Alert,\n  AlertIcon,\n} from \"@chakra-ui/react\";\nfunction Success({ message }) {\n  return (\n    <>\n      <Alert mb={3} status=\"success\" variant=\"top-accent\">\n       \n        {typeof message === \"string\" && (\n          <>\n            <AlertIcon />\n            {message}\n          </>\n        )}\n      </Alert>\n    </>\n  );\n}\n\nexport default Success;\n","import React from \"react\";\nimport {\n  Alert,\n  List,\n  ListItem,\n  ListIcon,\n  AlertIcon,\n  CloseButton,\n} from \"@chakra-ui/react\";\nimport {\n  MdCheckCircle,\n  MdError,\n  MdErrorOutline,\n  MdSettings,\n} from \"react-icons/md\";\nfunction Error({ error }) {\n  return (\n    <>\n      <Alert mb={3} status=\"error\" variant=\"top-accent\">\n        {typeof error === \"object\" && error.length > 0 && (\n          <>\n            <List spacing={3}>\n              {error.map((err, i) => (\n                <ListItem key={i}>\n                  <ListIcon key={i} as={MdError} color=\"red.500\" />\n                  {err.msg}\n                </ListItem>\n              ))}\n            </List>\n          </>\n        )}\n        {typeof error === \"object\" && (\n          <>\n            <MdErrorOutline color=\"red.500\" />\n            {error.message}\n          </>\n        )}\n        {typeof error === \"string\" && (\n          <>\n            <AlertIcon />\n            {error.message}\n          </>\n        )}\n      </Alert>\n    </>\n  );\n}\n\nexport default Error;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { createProduct } from \"../../../store/actions/products\";\nimport Form from \"../../../utils/form\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport { PRODUCTS } from \"../../../constants/routes\";\nimport { validationSchema } from \"./validation\";\nimport Guide from \"./Guide\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport Content from \"../../../@adminlte/adminlte/Content/index\";\nimport Success from \"../../../utils/admin/Resource/Success\";\nimport Error from \"../../../utils/admin/Resource/Error\";\nfunction Create() {\n  const fournisseurs = useSelector(getData(\"fournisseurs\").value);\n  const categories = useSelector(getData(\"categories\").value);\n  const meta = useSelector(getData(\"products\").meta);\n  const [qttCcPVente, setQttCcPVente] = useState(0);\n  const [prixQttCcVente, setPrixQttCCVente] = useState(0);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(action(\"fournisseurs\").fetch());\n    dispatch(action(\"categories\").fetch());\n    dispatch(action(\"products\").fetch());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <>\n      <Content>\n        <ContentHeader title=\"Ajouter un produit\">\n          <ActiveLink title=\"Ajouter un produit\"></ActiveLink>\n        </ContentHeader>\n        <Page>\n          {meta.success != \"\" && meta.success != null && (\n            <Success message={meta.success} />\n          )}\n          {meta.error && <Error error={meta.error} />}\n\n          <Form\n            id=\"add-form-product\"\n            enableReinitialize\n            initialValues={{\n              name: \"\",\n              type: \"BOLUS\",\n              doseDefault: 0,\n              prixVente: 0,\n              prixFournisseur: 0,\n              prixVaccinateur: 0,\n              quantityParProduct: 0,\n              prixParCC: 0,\n              datePer: \"\",\n              uniteMesure: \"ml\",\n              qttByCC: 0,\n              newStockBrute: 0,\n              newStockCC: 0,\n              fournisseurId: 1,\n              qttyspecificmirror: 0,\n              quantityBruteCVA: 0,\n              categoryId: 1,\n              quantityBrute: 0,\n              quantityCCCVA: 0,\n              quantityCC: 0,\n              condml: 0,\n              condval: 0,\n              condsize: 0,\n              conditionnement: 1,\n              qttccpvente: 0,\n              prixqttccvente: 0,\n            }}\n            validations={validationSchema}\n            onSubmit={(values, form) => {\n              const {\n                name,\n                type,\n                doseDefault,\n                prixVente,\n                prixFournisseur,\n                prixVaccinateur,\n                prixParCC,\n                datePer,\n                fournisseurId,\n                categoryId,\n                condml,\n                condval,\n                qttccpvente,\n                conditionnement,\n                prixqttccvente,\n                condsize,\n              } = values;\n              dispatch(\n                action(\"products\").create({\n                  id: meta.nextId,\n                  name: name,\n                  type: type,\n                  doseDefault: doseDefault,\n                  prixVente: parseFloat(prixVente),\n                  prixFournisseur: parseFloat(prixFournisseur),\n                  prixVaccinateur: parseFloat(prixVaccinateur),\n                  quantityParProduct: 0,\n                  quantityBruteCVA: 0,\n                  quantityBrute: 0,\n                  quantityCCCVA: 0,\n                  quantityCC: 0,\n                  prixParCC: parseFloat(prixParCC),\n                  datePer: new Date(),\n                  uniteMesure: \"ml\",\n                  qttByCC: 0,\n                  newStockBrute: 0,\n                  newStockCC: 0,\n                  categoryId: parseInt(categoryId),\n                  fournisseurId: parseInt(fournisseurId),\n                  condml: parseFloat(condml),\n                  condsize: parseFloat(condsize),\n                  conditionnement: conditionnement,\n                  qttccpvente: parseFloat(qttccpvente),\n                  prixqttccvente: parseInt(prixqttccvente),\n                  refSortie: \"0\",\n                  refQtSortie: 0,\n                  qttByCCDepot: 0,\n                  condmldepot: 0,\n                  condvaldepot: 0,\n                  qttccpventedepot: 0,\n                  prixqttccventedepot: 0,\n                  quantityParProductDepot: 0,\n                  condsizedepot: 0,\n                })\n              );\n              history.push(PRODUCTS);\n            }}\n            render={({ values }) => (\n              <Form.Element>\n                <div className=\"row\">\n                  <div className=\"col-lg-6\">\n                    <div className=\"card\">\n                      <div className=\"card-header bg-dark text-white\">\n                        Information générale\n                      </div>\n                      <div className=\"card-body\">\n                        <Form.Field.Select\n                          name=\"categoryId\"\n                          label=\"Categorie\"\n                          emptyValue={true}\n                          valueKey=\"name\"\n                          defaultValue={1}\n                          options={categories}\n                        />\n                        <Form.Field.Select\n                          name=\"fournisseurId\"\n                          label=\"Fournisseur\"\n                          emptyValue={true}\n                          valueKey=\"name\"\n                          options={fournisseurs}\n                        />\n\n                        <Form.Field.Input\n                          name=\"name\"\n                          label=\"Désignation\"\n                          placeholder={\"Désignation\"}\n                        />\n                        <Form.Field.Select\n                          name=\"type\"\n                          label=\"Type d'article\"\n                          emptyValue={false}\n                          isNumeric={false}\n                          valueKey=\"name\"\n                          options={[\n                            { id: \"BOLUS\", name: \"BOLUS\" },\n                            { id: \"FLACON\", name: \"FLACON\" },\n                            { id: \"UNITE\", name: \"UNITE\" },\n                            { id: \"SACHET\", name: \"SACHET\" },\n                          ]}\n                        />\n                        {values.type === \"FLACON\" && (\n                          <div className=\"ml-3\">\n                            <Form.Field.Number\n                              name=\"doseDefault\"\n                              label=\"Quantité en ml\"\n                              placeholder={\"Quantité en ml\"}\n                            />\n                            <Form.Field.Select\n                              name=\"conditionnement\"\n                              label=\"Conditionnement\"\n                              valueKey=\"name\"\n                              options={[\n                                { id: 1, name: \"Sans conditionnement\" },\n                                { id: 2, name: \"Avec conditionnement\" },\n                              ]}\n                            />\n                            {values.conditionnement == 2 && (\n                              <>\n                                <Form.Field.Number\n                                  name=\"condml\"\n                                  defaultValue={0}\n                                  label=\"Conditionnement (ML)\"\n                                  placeholder={\"Conditionnement en ML\"}\n                                />\n                                <Form.Field.Number\n                                  name=\"condsize\"\n                                  defaultValue={0}\n                                  label=\"Diviser en combien de flacon\"\n                                  placeholder={\"Diviser en combien de flacon\"}\n                                />\n                                <Form.Field.Number\n                                  name=\"qttccpvente\"\n                                  defaultValue={0}\n                                  label=\"Quantité de vente en ML\"\n                                  placeholder={\"Quantité de vente en ML\"}\n                                />\n                                <Form.Field.Number\n                                  name=\"prixqttccvente\"\n                                  disabled={\n                                    values.qttccpvente == null ||\n                                    values.qttccpvente == \"\"\n                                  }\n                                  label={`Prix de vente equivalent à ${values.qttccpvente} ML.`}\n                                  placeholder={`Prix de vente equivalent à ${values.qttccpvente} ML.`}\n                                />\n                              </>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-lg-6\">\n                    <div className=\"card\">\n                      <div className=\"card-header bg-dark text-white\">\n                        Vente\n                      </div>\n                      <div className=\"card-body\">\n                        <Form.Field.Number\n                          name=\"prixFournisseur\"\n                          defaultValue={0}\n                          label=\"prix unitaire\"\n                          placeholder={\"prix unitaire\"}\n                        />\n\n                        {/** Prix du fournisseur */}\n\n                        <Form.Field.Number\n                          name=\"prixVente\"\n                          defaultValue={0}\n                          label=\"Prix de vente\"\n                          placeholder={\"prix de vente\"}\n                        />\n\n                        <Form.Field.Number\n                          name=\"prixVaccinateur\"\n                          defaultValue={0}\n                          label=\"Prix du vaccinateur\"\n                          placeholder={\"prix du vaccinateur\"}\n                        />\n                        <>\n                          {values.type === \"FLACON\" && (\n                            <Form.Field.Number\n                              type={\n                                values.qttccpvente == null ||\n                                values.qttccpvente == \"\"\n                                  ? \"text\"\n                                  : \"text\"\n                              }\n                              data={\n                                values.qttccpvente != 0 &&\n                                values.qttccpvente != \"\" &&\n                                values.prixqttccvente / values.qttccpvente !=\n                                  \"Infinity\"\n                                  ? values.prixqttccvente / values.qttccpvente\n                                  : 0\n                              }\n                              name=\"prixParCC\"\n                              label={\"Prix de vente ml\"}\n                              placeholder={\"Prix de vente ml\"}\n                            />\n                          )}\n                        </>\n                      </div>\n                    </div>\n\n                    <button className=\"btn btn-green  btn-sm \" type=\"submit\">\n                      Ajouter\n                    </button>\n                    <button\n                      className=\"btn btn-danger ml-2  btn-sm \"\n                      type=\"reset\"\n                    >\n                      Annuler\n                    </button>\n                  </div>\n                </div>\n              </Form.Element>\n            )}\n          />\n        </Page>\n      </Content>\n    </>\n  );\n}\n\nexport default Create;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Content from \"../../../@adminlte/adminlte/Content\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport NumberFormat from \"react-number-format\";\nimport { displayDate, displayMoney } from \"../../../utils/functions\";\n\nfunction DetailProduct() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const products = useSelector(getData(\"products\").value);\n  useEffect(() => {\n    dispatch(action(\"products\").get(id));\n  }, []);\n  const forceRerender = () => {\n    return Math.random(10000);\n  };\n  return (\n    <Content>\n      <ContentHeader title=\"Détail du produit\">\n        <ActiveLink title=\"Détail du produit\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        {products[0]?.conditionnement != 2 ||\n          (products[0]?.conditionnement != null && (\n            <div className=\"card card-info\">\n              <div className=\"card-header\">Conditionnement</div>\n              <div className=\"card-body\">\n                <p>\n                  Conditionnement (ML):{\" \"}\n                  <span className=\"badge badge-info\">\n                    {products[0]?.condml}\n                  </span>\n                </p>\n                <p>\n                  Division en flacon:{\" \"}\n                  <span className=\"badge badge-info\">\n                    {products[0]?.condsize}\n                  </span>\n                </p>\n                <p>\n                  Quantité de vente par ML:\n                  <span className=\"badge badge-info\">\n                    {products[0]?.qttccpvente}\n                  </span>\n                </p>\n                <p>\n                  Prix de vente pour {products[0]?.qttccpvente} ML:{\" \"}\n                  <span className=\"badge badge-info\">\n                    {displayMoney(products[0]?.prixqttccvente)}{\" \"}\n                  </span>\n                </p>\n              </div>\n            </div>\n          ))}\n        <table className=\"table table-striped\">\n          <tr className=\"bg-thead\">\n            <td >\n              <strong>Nom de l'article:</strong>\n            </td>\n            <td>{products[0]?.name} </td>\n          </tr>\n          <tr>\n            <td>\n              <strong>Fournisseur :</strong>\n            </td>\n            <td>{products[0]?.fournisseur?.name}</td>\n          </tr>\n          <tr>\n            <td>\n              <strong>Categorie :</strong>\n            </td>\n            <td>{products[0]?.category?.name}</td>\n          </tr>\n\n          <tr>\n            <td>\n              <strong>Type:</strong>\n            </td>\n            <td>{products[0]?.type} </td>\n          </tr>\n          <tr>\n            <td>\n              <strong>Dose:</strong>\n            </td>\n            <td>{products[0]?.doseDefault} ML </td>\n          </tr>\n\n          <tr>\n            <td>\n              <strong>Prix unitaire:</strong>\n            </td>\n            <td>{displayMoney(products[0]?.prixFournisseur)}</td>\n          </tr>\n          <tr>\n            <td>\n              <strong>Prix de vente:</strong>\n            </td>\n            <td>{displayMoney(products[0]?.prixVente)}</td>\n          </tr>\n\n          <tr>\n            <td>\n              <strong>Prix pour le vaccinateur:</strong>\n            </td>\n            <td>{displayMoney(products[0]?.prixVaccinateur)}</td>\n          </tr>\n\n          <tr>\n            <td>\n              <strong>Prix par ML:</strong>\n            </td>\n            <td>\n              {products[0]?.qttccpvente != 0\n                ? displayMoney(\n                    products[0]?.prixParCC * products[0]?.qttccpvente\n                  )\n                : displayMoney(products[0]?.prixParCC)}\n            </td>\n          </tr>\n        \n        </table>\n      </Page>\n    </Content>\n  );\n}\n\nexport default DetailProduct;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport Content from \"../../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport { PRODUCTS } from \"../../../constants/routes\";\nimport { fetchProductsById } from \"../../../store/actions/products\";\nimport Error from \"../../../utils/admin/Resource/Error\";\nimport Success from \"../../../utils/admin/Resource/Success\";\nimport Form from \"../../../utils/form\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport { validationSchema } from \"./validation\";\nfunction Edit() {\n  const { id } = useParams();\n  const fournisseurs = useSelector(getData(\"fournisseurs\").value);\n  const categories = useSelector(getData(\"categories\").value);\n  const products = useSelector(getData(\"products\").value);\n  const meta = useSelector(getData(\"products\").meta);\n  const history = useHistory();\n  const [categoryId, setCategoryId] = useState(1);\n  const [cond, setCond] = useState(1);\n  const [qttCcPVente, setQttCcPVente] = useState(0);\n  const [prixQttCcVente, setPrixQttCCVente] = useState(0);\n  const dispatch = useDispatch();\n\n  const [formVal, setFormVal] = useState({});\n  const [flac, setFlac] = useState(products[0]?.type);\n  useEffect(() => {\n    dispatch(action(\"products\").get(id));\n    setFlac(products[0]?.type);\n    setPrixQttCCVente(products[0]?.prixqttccvente);\n    setQttCcPVente(products[0]?.qttccpvente);\n  }, [id]);\n  useEffect(() => {\n    if (!meta.isFetching) {\n      setFormVal({\n        name: products[0]?.name,\n      });\n    }\n  }, [meta]);\n  useEffect(() => {\n    dispatch(action(\"fournisseurs\").fetch());\n    dispatch(action(\"categories\").fetch());\n  }, []);\n  return (\n    <Content>\n      <ContentHeader title=\"Editer un article\">\n        <ActiveLink title=\"Editer un article\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        {meta.success != \"\" && meta.success != null && (\n          <Success message={meta.success} />\n        )}\n        {products[0].name}\n        {meta.error && <Error error={meta.error} />}\n        <Form\n          id=\"add-form-product\"\n          initialValues={{\n            name: products[0]?.name,\n            type: products[0]?.type,\n            doseDefault: products[0]?.doseDefault,\n            prixVente: products[0]?.prixVente,\n            prixFournisseur: products[0]?.prixFournisseur,\n            prixVaccinateur: parseFloat(products[0]?.prixVaccinateur),\n            prixParCC: parseFloat(products[0]?.prixParCC),\n            datePer: products[0]?.datePer,\n            uniteMesure: \"ml\",\n            conditionnement: products[0]?.conditionnement,\n            categoryId: parseInt(products[0]?.categoryId),\n            datePer: products[0]?.datePer,\n            fournisseurId: parseInt(products[0]?.fournisseurId),\n            condml:\n              products[0]?.condml == null ? 0 : parseInt(products[0]?.condml),\n            condsize:\n              products[0]?.condsize == null\n                ? 0\n                : parseInt(products[0]?.condsize),\n            qttccpvente:\n              products[0]?.qttccpvente == null\n                ? 0\n                : parseInt(products[0]?.qttccpvente),\n            prixqttccvente:\n              products[0]?.prixqttccvente == null\n                ? 0\n                : parseInt(products[0]?.prixqttccvente),\n          }}\n          validations={validationSchema}\n          onSubmit={(values, form) => {\n            const {\n              name,\n              type,\n              doseDefault,\n              prixVente,\n              prixFournisseur,\n              prixVaccinateur,\n              prixParCC,\n              datePer,\n              fournisseurId,\n              categoryId,\n              condml,\n              condval,\n              qttccpvente,\n              prixqttccvente,\n              conditionnement,\n            } = values;\n            dispatch(\n              action(\"products\").update({\n                id: products[0]?.id,\n                name: name,\n                type: type,\n                doseDefault: doseDefault,\n                prixVente: parseFloat(prixVente),\n                prixFournisseur: parseFloat(prixFournisseur),\n                prixVaccinateur: parseFloat(prixVaccinateur),\n                prixParCC: parseFloat(prixParCC),\n                datePer: new Date(datePer),\n                qttByCC: parseFloat(products[0]?.qttByCC),\n                quantityBrute: parseFloat(products[0]?.quantityBrute),\n                quantityBruteCVA: parseFloat(products[0]?.quantityBruteCVA),\n                quantityCCCVA: parseFloat(products[0]?.quantityCCCVA),\n                quantityCC: parseFloat(products[0]?.quantityCC),\n                uniteMesure: \"ml\",\n                condml: parseFloat(condml),\n                condval: parseFloat(condval),\n                qttccpvente: parseFloat(qttccpvente),\n                fournisseurId: parseInt(fournisseurId),\n                categoryId: parseInt(categoryId),\n                conditionnement: parseInt(conditionnement),\n                prixqttccvente: parseInt(prixqttccvente),\n                updatedAt: new Date(),\n                refSortie: \"0\",\n                refQtSortie: 0,\n                qttByCCDepot: 0,\n                condmldepot: 0,\n\n                condvaldepot: 0,\n                qttccpventedepot: 0,\n                prixqttccventedepot: 0,\n                quantityParProductDepot: 0,\n                condsizedepot: 0,\n              })\n            );\n            history.push(PRODUCTS);\n          }}\n          render={({ values }) => (\n            <Form.Element>\n              <div className=\"row\">\n                <div className=\"col-lg-6\">\n                  <div className=\"card\">\n                    <div className=\"card-header bg-dark text-white\">\n                      Information générale\n                    </div>\n                    <div className=\"card-body\">\n                      <Form.Field.Select\n                        name=\"categoryId\"\n                        label=\"Categorie\"\n                        valueKey=\"name\"\n                        selectValue={products[0]?.categoryId}\n                        options={categories}\n                      />\n                      <Form.Field.Select\n                        name=\"fournisseurId\"\n                        label=\"Fournisseur\"\n                        valueKey=\"name\"\n                        selectValue={products[0]?.fournisseurId}\n                        options={fournisseurs}\n                      />\n                      <Form.Field.Input\n                        name=\"name\"\n                        value={values?.name}\n                        label=\"Désignation\"\n                        placeholder={\"Désignation\"}\n                      />\n                      <Form.Field.Select\n                        name=\"type\"\n                        label=\"Type d'article\"\n                        emptyValue={false}\n                        isNumeric={false}\n                        valueKey=\"name\"\n                        options={[\n                          { id: \"BOLUS\", name: \"BOLUS\" },\n                          { id: \"FLACON\", name: \"FLACON\" },\n                          { id: \"UNITE\", name: \"UNITE\" },\n                          { id: \"SACHET\", name: \"SACHET\" },\n                        ]}\n                      />\n                      {values.type === \"FLACON\" && (\n                        <div className=\"ml-3\">\n                          <Form.Field.Number\n                            name=\"doseDefault\"\n                            label=\"Quantité en ml\"\n                            placeholder={\"Quantité en ml\"}\n                          />\n                          <Form.Field.Select\n                            name=\"conditionnement\"\n                            label=\"Conditionnement\"\n                            valueKey=\"name\"\n                            emptyValue={false}\n                            options={[\n                              { id: 1, name: \"Sans conditionnement\" },\n                              { id: 2, name: \"Avec conditionnement\" },\n                            ]}\n                          />\n                          {values.conditionnement == 2 && (\n                            <>\n                              <Form.Field.Number\n                                name=\"condml\"\n                                label=\"Conditionnement\"\n                                placeholder={\"Conditionnement en ML\"}\n                              />\n                              <Form.Field.Number\n                                name=\"condsize\"\n                                label=\"Diviser par \"\n                                placeholder={\"Diviser par\"}\n                              />\n                              <Form.Field.Number\n                                name=\"qttccpvente\"\n                                label=\"Conditionnement de vente par ML\"\n                                placeholder={\"Quantité cc par vente.\"}\n                              />\n                              <Form.Field.Number\n                                name=\"prixqttccvente\"\n                                disabled={\n                                  values.qttccpvente == null ||\n                                  values.qttccpvente == \"\"\n                                }\n                                label={`Prix de vente equivalent à ${values.qttccpvente} ML.`}\n                                placeholder={`Prix de vente equivalent à ${values.qttccpvente} ML.`}\n                              />\n                            </>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-lg-6\">\n                  <div className=\"card\">\n                    <div className=\"card-header bg-dark text-white\">Vente</div>\n                    <div className=\"card-body\">\n                      <Form.Field.Number\n                        name=\"prixFournisseur\"\n                        label=\"prix unitaire\"\n                        placeholder={\"prix unitaire\"}\n                      />\n\n                      <Form.Field.Number\n                        name=\"prixVente\"\n                        label=\"Prix de vente\"\n                        placeholder={\"prix de vente\"}\n                      />\n                      {flac == \"FLACON\" && (\n                        <Form.Field.Number\n                          type={\n                            qttCcPVente == null || qttCcPVente == \"\"\n                              ? \"text\"\n                              : \"text\"\n                          }\n                          data={\n                            qttCcPVente != 0 &&\n                            qttCcPVente != \"\" &&\n                            prixQttCcVente / qttCcPVente != \"Infinity\"\n                              ? prixQttCcVente / qttCcPVente\n                              : 0\n                          }\n                          name=\"prixParCC\"\n                          label={\"Prix de vente ml\"}\n                          placeholder={\"Prix de vente ml\"}\n                        />\n                      )}\n                      <Form.Field.Number\n                        name=\"prixVaccinateur\"\n                        label=\"Prix du vaccinateur\"\n                        placeholder={\"prix du vaccinateur\"}\n                      />\n                    </div>\n                  </div>\n\n                  <button className=\"btn btn-green  btn-sm \" type=\"submit\">\n                    Editer\n                  </button>\n                  <button className=\"btn btn-danger ml-2 btn-sm \" type=\"reset\">\n                    Annuler\n                  </button>\n                </div>\n              </div>\n            </Form.Element>\n          )}\n        />\n      </Page>\n    </Content>\n  );\n}\n\nexport default Edit;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { action, getData } from \"../../lib/call\";\nfunction Drop({ model, entity,attribute }) {\n  const dispatch = useDispatch();\n \n  const deleteEntity = () => {\n    dispatch(action(model).destroy(entity));\n  };\n  return (\n    <>\n      <button\n      className=\"btn btn-danger btn-sm\"\n        onClick={(e) => {\n          e.preventDefault();\n          if (window.confirm(`Vous voulez vraiment supprimer \"${entity[attribute]}\" ?`)) {\n            deleteEntity();\n          }\n        }}\n      >\n        Supprimer\n      </button>\n    </>\n  );\n}\n\nexport default Drop;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Flex, Box, Text, Heading,Divider } from \"@chakra-ui/layout\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Button,\n  chakra,\n} from \"@chakra-ui/react\";\nimport {  InfoIcon } from \"@chakra-ui/icons\";\nimport { NavLink } from \"react-router-dom\";\nimport {useDisclosure} from \"@chakra-ui/hooks\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\"\nfunction GuideModal({isOpen,onOpen,onClose,title,guide,tip}){\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} size={\"4xl\"}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <chakra.small size=\"sm\" color=\"gray.400\">\n            Guide d'utilisation\n          </chakra.small>\n          <Heading textTransform=\"uppercase\" color=\"blue.700\" size=\"md\">\n            {title}\n          </Heading>\n          <Divider my={2}/>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Box\n            width={\"100%\"}\n          >\n            <Heading size=\"md\" my={2}>\n              {tip}\n            </Heading>\n            {guide}\n\n          </Box>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\nfunction Nav({ title,tip=\"\", list, guide, to,backTo, icon,...props }) {\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  return (\n    <>\n      <Flex\n        p={3}\n        mb={2}\n        borderBottom={\"1px\"}\n        borderColor=\"blue.700\"\n        bg=\"white\"\n        boxShadow=\"lg\"\n        alignItems=\"center\"\n        justifyContent={guide ? \"space-between\":\"flex-end\"}\n      >\n        {guide && <Button size=\"sm\" onClick={onOpen} color=\"white\" on aria-label=\"Cliquer ici pour avoir plus d'information sur la page\">  <InfoIcon mr={1} color={\"white\"} fontSize=\"12px\"  /> Guide d'utilisation </Button>}\n        <GuideModal isOpen={isOpen} onOpen={onOpen} onClose={onClose} title={title} tip={tip} guide={guide}/>\n        <Box>\n          <Breadcrumb spacing=\"8px\">\n           {/** {to != \"/\" && ( */}\n              <>\n                <BreadcrumbItem>\n                  <BreadcrumbLink as={NavLink} to={to}>\n                    Accueil {\" > \"}\n                  </BreadcrumbLink>\n                </BreadcrumbItem>\n                <BreadcrumbItem ml={1} isCurrentPage>\n                  <BreadcrumbLink href=\"#\">{title}</BreadcrumbLink>\n                </BreadcrumbItem>\n              </>\n            {/**)} */}\n          </Breadcrumb>\n        </Box>\n      </Flex>\n      <Flex px={4} mr={2} \n        mt={4} {...props} flexDir=\"column\" justifyContent=\"flex-start\">\n        {backTo &&\n        <Box mt={3}>\n          <Button py={2} mx={1} as={NavLink} colorScheme=\"facebook\" size=\"sm\" color=\"white\" to={backTo}>\n           {\"<<\"} Revenir en arriere\n          </Button>\n        </Box>}\n        {list && \n        <Box  mt={4} mb={1} >\n          <Heading size=\"md\" textTransform=\"uppercase\"  color={\"blue.700\"}>\n            {title || \"Titre de la page\"}\n          </Heading>\n\n        </Box>\n        }\n      </Flex>\n    </>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport Drop from \"./Drop\";\nimport { Link } from 'react-router-dom';\n\nexport const CrudAction = ({ route, model,modelKey, data }) => {\n  return (\n    <div>\n      <Link  className=\"btn btn-sm btn-primary mr-2\"  to={`/${route}/detail/${data.row.original.id}`}>\n        Detail\n      </Link>\n      <Link className=\"btn btn-sm btn-warning mr-2\"  to={`/${route}/edit/${data.row.original.id}`}>\n        Editer\n      </Link>\n      <Drop model={model} entity={data.row.original} attribute={modelKey} />\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, NavLink,useHistory } from \"react-router-dom\";\nimport Content from \"../../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport { ADMIN, CREATEPRODUCT, EDITPRODUCT } from \"../../../constants/routes\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport NumberFormat from \"react-number-format\";\nimport ReactToPrint from \"react-to-print\";\nimport $ from \"jquery\";\nimport { Flex, Button } from \"@chakra-ui/react\";\nimport { FaEdit, FaEye, FaTrash } from \"react-icons/fa\";\nimport Drop from \"../../../utils/admin/Resource/Drop\";\nimport Success from \"../../../utils/admin/Resource/Success\";\nimport Error from \"../../../utils/admin/Resource/Error\";\nimport DataTable from \"../../../utils/admin/DataTable\";\nimport { displayMoney } from \"../../../utils/functions\";\nimport Nav from \"../../../utils/admin/Nav\";\nimport Guide from \"./Guide\";\nimport { CrudAction } from \"../../../utils/admin/Resource/CrudAction\";\nimport { ActionCreators } from 'react-redux-undo';\n//initialize datatable\n/*   $(document).ready(function () {\n      $('table').DataTable();\n  });*/\nexport const ProductAll = () => {\n  const products = useSelector(getData(\"products\").value);\n  const meta = useSelector(getData(\"products\").meta);\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(action(\"products\").fetch());\n  }, []);\n  const deleteProduct = (prod) => {\n    dispatch(action(\"products\").destroy(prod));\n    dispatch(action(\"products\").fetch());\n  };\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Id\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"Produit\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Fournisseur\",\n        Cell: (data) => {\n          return (\n            <>\n              <span className=\"badge badge-primary\">\n                {data.row.original?.fournisseur?.name}\n              </span>\n            </>\n          );\n        },\n      },\n      {\n        Header: \"Quantité\",\n        accessor: \"quantityBrute\",\n      },\n      {\n        Header: \"Reste en ML\",\n        accessor: \"quantityCC\",\n      },\n      {\n        Header: \"Prix unitaire\",\n        Cell: (data) => {\n          return <div>{displayMoney(data.row.original?.prixFournisseur)}</div>;\n        },\n      },\n      {\n        Header: \"Prix de vente\",\n        Cell: (data) => {\n          return <div>{displayMoney(data.row.original?.prixVente)}</div>;\n        },\n      },\n\n      {\n        Header: \"Prix en ML\",\n        Cell: (data) => {\n          return (\n            <div>\n              {data.row.original?.qttccpvente != 0\n                ? displayMoney(\n                    data.row.original?.prixParCC *\n                      data.row.original?.qttccpvente\n                  )\n                : displayMoney(data.row.original?.prixParCC)}\n            </div>\n          );\n        },\n      },\n\n      {\n        Header: \"Actions\",\n        Cell: (data) => {\n          return (\n            <CrudAction\n              route={\"product\"}\n              model={\"products\"}\n              modelKey={\"name\"}\n              data={data}\n            />\n          );\n        },\n      },\n    ],\n    []\n  );\n  return (\n    <Content>\n      <ContentHeader title=\"Tous les produits\">\n        <ActiveLink title=\"Tous les produits\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <DataTable\n          data={products}\n          meta={meta}\n          columns={columns}\n          addUrl={CREATEPRODUCT}\n          urlName={\"Ajouter un produit\"}\n        />\n      </Page>\n    </Content>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchProductsByCategory,\n  fetchProductsByFournisseur,\n} from \"../../store/actions/products\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nimport { Link } from \"react-router-dom\";\nimport { displayMoney } from \"../../utils/functions\";\nfunction ProductByCategory() {\n  const products = useSelector(getData(\"products\").value);\n\n  const categories = useSelector(getData(\"categories\").value);\n  const dispatch = useDispatch();\n  const [id, setId] = useState(1);\n  useEffect(() => {\n    //recuperer la premiere ligne dans le tableau fournisseur\n    dispatch(fetchProductsByCategory(id));\n    dispatch(action(\"categories\").fetch());\n  }, [id]);\n  return (\n    <Content>\n      <ContentHeader title=\"Liste des articles par categories\">\n        <ActiveLink title=\"Liste des articles par categories\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <div className=\"row\">\n          <div className=\"col-lg-8\"></div>\n          <div className=\"col-lg-4\">\n            <div className=\"d-flex align-items-center mb-3\">\n              <label htmlFor=\"\">Categorie:</label>\n              <select\n                className=\"form-control\"\n                onChange={(e) => {\n                  setId(e.target.value);\n                }}\n              >\n                {categories.map((f) => (\n                  <option value={f.id}>{f.name}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <table className=\"table table-bordered table-striped\">\n          <thead className=\"bg-thead\">\n            <tr>\n              <th>Nom</th>\n              <th>Prix Unitaire</th>\n              <th>Categorie</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((p) => (\n              <tr>\n              <td>{p?.name}</td>\n              <td>{displayMoney(p?.prixFournisseur)}</td>\n              <td>{p?.category?.name}</td>\n              <td>\n              <Link\n                  className=\"btn btn-sm btn-primary\"\n                  to={`/product/detail/${p.id}`}\n                >\n                  Detail\n                </Link></td>\n            </tr>\n            ))}\n          </tbody>\n        </table>\n      </Page>\n    </Content>\n  );\n}\n\nexport default ProductByCategory;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProductsByFournisseur } from \"../../store/actions/products\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nimport { Link } from \"react-router-dom\";\nimport { displayMoney } from \"../../utils/functions\";\nfunction ProductByFournisseur() {\n  const products = useSelector(getData(\"products\").value);\n\n  const fournisseurs = useSelector(getData(\"fournisseurs\").value);\n  const dispatch = useDispatch();\n  const [id, setId] = useState(1);\n  useEffect(() => {\n    //recuperer la premiere ligne dans le tableau fournisseur\n    dispatch(fetchProductsByFournisseur(id));\n    dispatch(action(\"fournisseurs\").fetch());\n  }, [id]);\n  return (\n    <Content>\n      <ContentHeader title=\"Liste des articles par fournisseurs\">\n        <ActiveLink title=\"Liste des articles par fournisseurs\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <div className=\"row\">\n          <div className=\"col-lg-8\"></div>\n          <div className=\"col-lg-4\">\n            <div className=\"d-flex align-items-center mb-3\">\n              <label htmlFor=\"\">Fournisseur:</label>\n              <select\n                className=\"form-control\"\n                onChange={(e) => {\n                  setId(e.target.value);\n                }}\n              >\n                {fournisseurs.map((f) => (\n                  <option value={f.id}>{f.name}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n        <table className=\"table table-bordered table-striped\">\n          <thead>\n            <tr>\n              <th>Nom</th>\n              <th>Prix</th>\n              <th>Fournisseur</th>\n              <td>Actions</td>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((p) => (\n              <tr>\n                <td>{p?.name}</td>\n                <td>{displayMoney(p?.prixFournisseur)}</td>\n                <td>{p?.fournisseur?.name}</td>\n                <td>\n                <Link\n                    className=\"btn btn-sm btn-primary\"\n                    to={`/product/detail/${p.id}`}\n                  >\n                    Detail\n                  </Link></td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Page>\n    </Content>\n  );\n}\n\nexport default ProductByFournisseur;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProductsRuptureStock } from \"../../store/actions/products\";\nimport { action, getData } from \"../../utils/lib/call\";\n\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nimport { displayDate } from \"../../utils/functions\";\nimport DataTable from \"../../utils/admin/DataTable\";\nexport const Rupture = () => {\n  const products = useSelector(getData(\"products\").value);\n  const meta = useSelector(getData(\"products\").meta);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchProductsRuptureStock());\n  }, []);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Produit\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Quantité\",\n        accessor: \"quantityBrute\",\n      },\n      {\n        Header: \"Date de peremption\",\n        Cell: (data) => {\n          return (\n            <h3>\n                {displayDate(data.row.original?.datePer)}\n            </h3>\n          );\n        },\n      },\n    ],\n    []\n  );\n  return (\n    <Content>\n      <ContentHeader title=\"Article en rupture de stock\">\n        <ActiveLink title=\"Article en rupture de stock\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <DataTable data={products} meta={meta} columns={columns} />\n      </Page>\n    </Content>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getEntree } from \"../store/actions/commandes\";\nimport { action, getData } from \"../utils/lib/call\";\nimport Content from \"../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../@adminlte/adminlte/Content/Page\";\nimport NumberFormat from \"react-number-format\";\nfunction Entree() {\n  const [deb, setDeb] = useState(new Date());\n  const [fin, setFin] = useState(new Date());\n  const calculateTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.prixVente;\n    });\n    return total;\n  };\n  const quantiteBruteTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.quantityBrute;\n    });\n    return total;\n  };\n  const quantiteCCTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.quantityCC;\n    });\n    return total;\n  };\n\n  const refDateDeb = useRef(null);\n  const refDateFin = useRef(null);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const dispatch = useDispatch();\n  const getEntreeByDate = () => {\n    setDeb(refDateDeb.current.value);\n    setFin(refDateFin.current.value);\n  };\n  useEffect(() => {\n    dispatch(getEntree(deb, fin));\n  }, [deb, fin]);\n  return (\n    <Content>\n      <ContentHeader title=\"Factures\">\n        <ActiveLink title=\"Factures\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <div className=\"row\">\n          <div className=\"col-lg-4 mb-2\">\n\n          <Link to={\"/approv\"} className=\"btn  btn-primary\"> Effectuer un approvisionnement</Link>\n          </div>\n          <div className=\"col-lg-8\">\n          </div>\n        </div>\n        <div className=\"border p-3 bg-white\">\n          <div className=\"row mb-3\">\n            <div className=\"col-lg-7\"></div>\n            <div className=\"col-lg-5\">\n            <div className=\"d-flex justify-content-around\">\n            \n            <input\n              type=\"date\"\n              name=\"datedeb\"\n              className=\"form-control mr-3\"\n              format=\"DD-MM-YYYY\"\n              ref={refDateDeb}\n              placeholder=\"Début\"\n              \n            />\n            <input\n              type=\"date\"\n              name=\"datefin\"\n              className=\"form-control mr-3\"\n              ref={refDateFin}\n              placeholder=\"Fin\"\n            />\n\n          <Button onClick={getEntreeByDate}>Filtrer</Button>\n          </div>\n            </div>\n          </div>\n         \n          <table className=\"table table-bordered table-striped\">\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Quantite Brute</th>\n                <th>Quantite en CC</th>\n                <th>Montant Total</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {commandes.map((p) => (\n                <tr>\n                  <td>{p?.createdAt}</td>\n                  <td>{quantiteBruteTotal(p?.contenu)}</td>\n                  <td>{quantiteCCTotal(p?.contenu)}</td>\n                  <td>\n                  \n                  <NumberFormat\n                  value={calculateTotal(p?.contenu)}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  suffix={\"Ar\"}\n                  renderText={(value, props) => <div {...props}>{value}</div>}\n                />\n                  </td>\n                  <td className=\"d-flex justify-content-around\">\n                    <Link\n                      className=\"btn btn-sm  btn-success\"\n                      to={`detail/${p.id}`}\n                    >\n                      Afficher le detail\n                    </Link>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </Page>\n    </Content>\n  );\n}\n\nexport default Entree;\n","export const ROLE_VENDEUR = 'ROLE_VENDEUR';\nexport const ROLE_ADMIN = 'ROLE_ADMIN';\nexport const ROLE_SEMI_ADMIN = 'ROLE_SEMI_ADMIN';\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  REFRESH_TOKEN,\n} from \"../../constants/actions\";\nimport axios from \"axios\";\nconst SIGNUP_URL = process.env.SIGNUP_URL || \"http://localhost:1200/api/signup\";\nconst SIGNIN_URL = process.env.SIGNIN_URL || \"http://localhost:1200/api/signin\";\n\nexport const register =\n  ({ username, password, role }) =>\n  async (dispatch) => {\n    try {\n      await axios\n        .post(SIGNUP_URL, {\n          username: username,\n          password: password,\n          role: role,\n        })\n        .then(function (response) {\n          if (response.data.token) {\n            localStorage.setItem(\"user-veto\", JSON.stringify(response.data));\n          }\n          dispatch({\n            type: REGISTER_SUCCESS,\n            payload: {\n              user: response.data,\n              success: \"success operation\",\n              error: null,\n            },\n          });\n        })\n        .catch(function (error) {\n          dispatch({\n            type: REGISTER_FAIL,\n            payload: {\n              user: null,\n              success: null,\n              error: error,\n            },\n          });\n        });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: {\n          user: null,\n          success: null,\n          error: error,\n        },\n      });\n    }\n  };\n\nexport const login =\n  ({ username, password }) =>\n  async (dispatch) => {\n    await axios\n      .post(SIGNIN_URL, {\n        username: username,\n        password: password,\n      })\n      .then(function (response) {\n        if (response.data.token) {\n          localStorage.setItem(\"user-veto\", JSON.stringify(response.data));\n        }\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: {\n            user: response.data,\n            success: \"success operation\",\n            error: null,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: LOGIN_FAIL,\n          payload: {\n            success: null,\n            error: error?.response?.data?.error,\n          },\n        });\n      });\n  };\nexport const refreshToken = (accessToken) => (dispatch) => {\n  dispatch({\n    type: REFRESH_TOKEN,\n    payload: accessToken,\n  });\n};\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"user-veto\");\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","export const SET_APPROV_ITEMS = 'SET_APPROV_ITEMS';\nexport const ADD_TO_APPROV = 'ADD_TO_APPROV';\nexport const REMOVE_FROM_APPROV = 'REMOVE_FROM_APPROV';\nexport const CLEAR_APPROV = 'CLEAR_APPROV';\nexport const ADD_QTY_APPROV_ITEM = 'ADD_QTY_APPROV_ITEM';\nexport const MINUS_QTY_APPROV_ITEM = 'MINUS_QTY_APPROV_ITEM';\nexport const ADD_NUMBER_QTY_ITEM ='ADD_NUMBER_QTY_ITEM';\nexport const ADD_QTY_NUMBER_APPROV_ITEM = 'ADD_QTY_NUMBER_APPROV_ITEM';","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\nimport {\n  ACCOUNT_URL,\n  HOME,\n  SIGNIN,\n  ENTREE,\n  SIGNUP,\n  CART,\n  PARAMETRES,\n  CREDITVACCINATEUR,\n  DIRECT,\n  PRODUCTBYFOURNISSEUR,\n  PRODUCTBYCATEGORY,\n  SORTIE,\n} from \"../constants/routes\";\nimport { ROLE_ADMIN, ROLE_USER } from \"../constants/roles\";\nimport { logout } from \"../store/actions/user\";\n\nconst Header = () => {\n  return (\n    <React.Fragment>\n      <div className=\"bg-dark m-0  p-2  text-center\">\n        <h3 className=\"m-0 p-2 text-white\">CABINET VETERINAIRE AMBALAVAO</h3>\n      </div>\n      <ul className=\"list-inline d-flex m-0  p-2 justify-content-center\">\n        <li className=\"text-white  m-0  p-2\">\n          <Link className=\"btn  btn-sm bg-success text-white\" to={\"/journal\"}>\n            Journal d'entrees et sorties\n          </Link>\n        </li>\n        <li className=\"text-white  m-0  p-2\">\n          <Link className=\"btn  btn-sm bg-success text-white\" to={ENTREE}>\n            Entree\n          </Link>\n        </li>\n        <li className=\"text-white  m-0  p-2\">\n          <Link className=\"btn  btn-sm bg-success text-white\" to={SORTIE}>\n            Sortie\n          </Link>\n        </li>\n        \n        <li className=\"text-white m-0  p-2\">\n          <Link className=\"btn btn-sm bg-success text-white\" to={\"/products\"}>\n            Articles\n          </Link>\n        </li>\n        \n        <li className=\"text-white m-0  p-2\">\n          <Link className=\"btn bg-success btn-sm text-white\" to={\"/credit\"}>\n            Credit\n          </Link>\n        </li>\n        <li className=\"text-white m-0  p-2\">\n          <Link className=\"btn bg-success btn-sm text-white\" to={CREDITVACCINATEUR}>\n            Credit Vaccinateur\n          </Link>\n        </li>\n        <li className=\"text-white m-0  p-2\">\n          <Link className=\"btn bg-success btn-sm text-white\" to={DIRECT}>\n            Commande direct\n          </Link>\n        </li>\n        <li className=\"text-white m-0  p-2\">\n          <Link className=\"btn bg-success btn-sm text-white\" to={PRODUCTBYFOURNISSEUR}>\n            Produit par fournisseur\n          </Link>\n        </li>\n        <li className=\"text-white m-0  p-2\">\n          <Link className=\"btn bg-success btn-sm text-white\" to={PRODUCTBYCATEGORY}>\n            Produit par category\n          </Link>\n        </li>\n        \n        <li className=\"text-white m-0  p-2\">\n          <Link className=\"btn  btn-sm bg-success text-white\" to={\"/\"}>\n            Bon de sortie\n          </Link>\n        </li>\n        <li className=\"text-white m-0  p-2\">\n          <Link className=\"btn  btn-sm bg-success text-white\" to={\"/approv\"}>\n            Article à approvisionner\n          </Link>\n        </li>\n        <li className=\"text-white m-0  p-2\">\n          <Link className=\"btn  btn-sm bg-success text-white\" to={\"/perimes\"}>\n            Article perimé\n          </Link>\n        </li>\n        <li className=\"text-white m-0  p-2\">\n          <Link className=\"btn  btn-sm bg-success text-white\" to={PARAMETRES}>\n            Parametres\n          </Link>\n        </li>\n      </ul>\n    </React.Fragment>\n  );\n};\nexport default withRouter(Header);\n","import {\n  ADD_QTY_APPROV_ITEM,\n  ADD_TO_APPROV,\n  CRETATE_FACTURE,\n  CLEAR_APPROV,\n  MINUS_QTY_APPROV_ITEM,\n  REMOVE_FROM_APPROV,\n  SET_APPROV_ITEMS,\n  ADD_NUMBER_QTY_ITEM,\n  ADD_QTY_NUMBER_APPROV_ITEM\n} from \"../constants\";\n\n\n\n\nexport const setApprovItems = (items = []) => ({\n  type: SET_APPROV_ITEMS,\n  payload: items ,\n});\n\nexport const addToApprov = (product) => ({\n  type: ADD_TO_APPROV,\n  payload: product,\n});\n\nexport const removeFromApprov = (id) => ({\n  type: REMOVE_FROM_APPROV,\n  payload: id,\n});\n\nexport const clearApprov = () => ({\n  type: CLEAR_APPROV,\n});\n\nexport const addQtyApprovItem = (id) => ({\n  type: ADD_QTY_APPROV_ITEM,\n  payload: { id: id},\n});\nexport const addNumberQtyItem = (id,qtt) => ({\n  type: ADD_NUMBER_QTY_ITEM,\n  payload: { id: id,qtt:qtt},\n});\n\n\nexport const minusQtyApprovItem = (id) => ({\n  type: MINUS_QTY_APPROV_ITEM,\n  payload: { id: id },\n});\nexport const setQtyApprovItem =(id,value)=>({\n  type : ADD_QTY_NUMBER_APPROV_ITEM,\n  payload:{\n    id:id,\n    value:value\n  }\n}) ","import { useDispatch, useSelector } from 'react-redux';\nimport { addToApprov as dispatchAddToApprov, removeFromApprov } from '../store/approvis/actions/approvis';\n\nconst useApprov = (approvisionnement,dispatch) => {\n  const isItemOnApprov = (id) => !!approvisionnement?.find(item => item?.id === id);\n  const addToApprov = (product) => {\n    if (isItemOnApprov(product.id)) {\n      dispatch(removeFromApprov(product.id));\n    } else {\n      dispatch(dispatchAddToApprov(product));\n    }\n  };\n  return { approvisionnement, isItemOnApprov, addToApprov };\n};\n\nexport default useApprov;\n","import React from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useApprov from \"../../../hooks/useApprov\";\nimport { displayMoney } from \"../../../utils/functions\";\n\nconst ProductItemApprov = ({\n  key,\n  product,\n  isItemOnApprov,\n  handleAddToApprov,\n}) => {\n  return (\n    <> \n      <ListGroup.Item key={key}>\n        <Row\n          className={`product-card m-2 ${!product.id ? \"product-loading\" : \"\"}`}\n          style={{\n            border:\n              product && isItemOnApprov(product.id) ? \"1px solid #a6a5a5\" : \"\",\n            boxShadow:\n              product && isItemOnApprov(product.id)\n                ? \"0 10px 15px rgba(0, 0, 0, .07)\"\n                : \"none\",\n          }}\n        >\n          <Col xs={9}>\n            <>\n              <p>{product?.name}</p>\n              <div class=\"badge badge-primary\">\n                {product?.fournisseur?.name}\n              </div>\n              <p>\n                <strong> {displayMoney(product?.prixFournisseur)}</strong>\n              </p>\n            </>\n          </Col>\n\n          <Col xs={3}>\n            {product?.id && (\n              <button\n                className={` ${\n                  isItemOnApprov(product.id)\n                    ? \"btn btn-danger btn-sm\"\n                    : \"btn btn-green btn-sm\"\n                }`}\n                onClick={() => handleAddToApprov(product)}\n              >\n                {!isItemOnApprov(product.id) ? \"Ajouter\" : \"Retirer\"}\n              </button>\n            )}\n          </Col>\n        </Row>\n      </ListGroup.Item>\n    </>\n  );\n};\n\nexport default React.memo(ProductItemApprov);\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  addQtyApprovItem,\n  minusQtyApprovItem,\n  setQtyApprovItem,\n} from \"../../../store/approvis/actions/approvis\";\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\nconst ApprovisionnementItemControl = ({ product }) => {\n  const dispatch = useDispatch();\n  const onAddQty = () => {\n    dispatch(addQtyApprovItem(product.id));\n  };\n  const onAddQtyBrute = (value) => {\n    dispatch(setQtyApprovItem(product.id, value));\n  };\n\n  const onMinusQty = () => {\n    //  if ((product.quantityBrute >= product.quantityParProduct) && product.quantityParProduct !== 0) {\n    dispatch(minusQtyApprovItem(product.id));\n    // }\n  };\n\n  return (\n    <div className=\"basket-item-control\">\n    \n      <NumberInput\n        w={28}\n        bg={\"whitesmoke\"}\n        onChange={(value) => {\n          onAddQtyBrute(Number(value));\n        }}\n        min={0}\n        defaultValue={product.quantityParProduct}\n        step={1}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n      {/**    <button\n        className=\"btn btn-dark btn-sm\"\n        onClick={onAddQty}\n        type=\"button\"\n      >\n        +\n      </button>\n      <div className=\"mr-2 ml-1 d-flex\">\n      <span>{product.quantityParProduct}</span>\n      </div>\n      <button\n        className=\"btn btn-dark btn-sm\"\n        disabled={product.quantityParProduct === 0}\n        onClick={onMinusQty}\n        type=\"button\"\n      >\n        -\n      </button>*/}\n    </div>\n  );\n};\nexport default ApprovisionnementItemControl;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport NumberFormat from \"react-number-format\";\nimport { useDispatch } from \"react-redux\";\nimport { displayMoney } from \"../../../utils/functions\";\nimport ApprovisionnementItemControl from \"./ApprovisionnementItemControl\";\nconst ApprovisionnementItem = ({ product, isItemOnApprov, addToApprov }) => {\n  const dispatch = useDispatch();\n  const handleAddToApprov = () => {\n    if (addToApprov) addToApprov(product);\n  };\n\n  const itemOnApprov = isItemOnApprov ? isItemOnApprov(product.id) : false;\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-start border   mb-2 p-2\">\n        <div style={{ width: \"65%\" }}>\n          <table border=\"1\">\n            <tr>\n              <td>Nom de l'article : </td>\n              <td>{product?.name}</td>\n            </tr>\n            <tr>\n              <td>Prix unitaire:</td>\n              <td>{displayMoney(product.prixFournisseur)}</td>\n            </tr>\n            <tr>\n              <td>Montant HT:</td>\n              <td>\n                {displayMoney(\n                  product.prixFournisseur * product.quantityParProduct -\n                    product.remise\n                )}\n              </td>\n            </tr>\n            {/**<tr>\n              <td>Remise en Ariary :{product.remise}</td>\n              <td>\n                {\" \"}\n                <input\n                  type=\"number\"\n                  onChange={(e) => (product.remise = e.target.value)}\n                  className=\"form-control\"\n                />\n              </td>\n            </tr>**/}\n          </table>\n        </div>\n        <div className=\"d-flex mt-3\">\n          <ApprovisionnementItemControl product={product} />\n        </div>\n        <div>\n          {itemOnApprov && (\n            <button\n              onClick={handleAddToApprov}\n              className=\"btn btn-danger btn-xs text-right\"\n            >\n              X\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ApprovisionnementItem;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { NumberToLetter } from \"convertir-nombre-lettre\";\n//import useModal from '../../hooks/useModal';\nimport { Card } from \"react-bootstrap\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport NumberFormat from \"react-number-format\";\nimport { clearApprov } from \"../../../store/approvis/actions/approvis\";\nimport ApprovisionnementItem from \"./ApprovisionnementItem\";\nimport { omit } from \"../../../utils/functions\";\nimport { LISTAPPROV } from \"../../../constants/routes\";\nimport { handleSoldProduct } from \"../../../store/functions/function\";\nimport useApprov from \"../../../hooks/useApprov\";\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n\n  const total = arr.reduce((acc, val) => acc + val, 0);\n\n  return total;\n};\nconst remiseEnAriary = (arr, remise) => {\n  return (calculateTotal(arr) * remise) / 100;\n};\nfunction copy(object) {\n  var output, value, key;\n  output = Array.isArray(object) ? [] : {};\n  for (key in object) {\n    value = object[key];\n    output[key] = typeof value === \"object\" ? copy(value) : value;\n  }\n  return output;\n}\nconst calculeTotalAvecRemise = (arr, remise) => {\n  return calculateTotal(arr) - remiseEnAriary(arr, remise);\n};\n\nconst Approvisionnement = ({ setRegenerate }) => {\n  const [remise, setRemise] = useState(0);\n  const [dateEcheance, setDateEcheance] = useState(new Date());\n  const [dateApprovis, setDateApprovis] = useState(null);\n  const [remarque, setRemarque] = useState(\"\");\n  const [typePaye, setTypePaye] = useState(\"espece\");\n  const meta = useSelector(getData(\"approvis\").meta);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(action(\"approvis\").fetch());\n  }, []);\n  const { approvisionnements } = useSelector((state) => ({\n    approvisionnements: state.approvisionnements,\n  }));\n  const { isItemOnApprov, addToApprov } = useApprov(\n    approvisionnements,\n    dispatch\n  );\n  const getContenu = (approvis) => {\n    return copy(approvis).map((element) => {\n      element.quantityBrute += element.quantityParProduct;\n      return element;\n    });\n  };\n\n  const onCheckOut = () => {\n    dispatch(\n      action(\"approvis\").createTransaction(\n        {\n          id: Number(meta.nextId),\n          contenu: getContenu(approvisionnements),\n          totalht: calculateTotal(\n            approvisionnements.map(\n              (product) => product.prixFournisseur * product.quantityParProduct\n            )\n          ),\n          remise: remise,\n          total: calculeTotalAvecRemise(\n            approvisionnements.map(\n              (product) => product.prixFournisseur * product.quantityParProduct\n            ),\n            remise\n          ),\n          dateApprov: dateApprovis == null ? new Date() : dateApprovis,\n          dateEcheance: dateEcheance,\n          remarque: remarque,\n          typePaye: typePaye,\n          approvisionnements: approvisionnements,\n        },\n        \"create-facture\"\n      )\n    );\n    {\n      /*approvisionnements.forEach((element) => {\n      dispatch(\n        action(\"products\").update({\n          ...element,\n          quantityBrute: element.quantityBrute + element.quantityParProduct,\n          quantityParProduct: 0,\n        })\n      );\n    });*/\n    }\n    dispatch(clearApprov());\n   //setRegenerate(true);\n   history.push(LISTAPPROV);\n    console.log(approvisionnements);\n  };\n\n  const onClearApprov = () => {\n    if (approvisionnements.length !== 0) {\n      dispatch(clearApprov());\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Header className=\"d-flex justify-content-between align-items-center bg-dark text-white\">\n          <div>\n            Factures (\n            {` ${approvisionnements.length} ${\n              approvisionnements.length > 1 ? \"produits\" : \"produit\"\n            }`}\n            )\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <div class=\"form-group\">\n            <label>Date du facture :</label>\n            <div>\n              <input\n                type=\"date\"\n                onChange={(e) => setDateApprovis(e.target.value)}\n                value={dateApprovis}\n                className=\"form-control\"\n              />\n            </div>\n          </div>\n          {approvisionnements.length <= 0 && (\n            <div class=\"alert alert-success \">Aucune produit !!!</div>\n          )}\n\n          {approvisionnements?.map((product, i) => (\n            <ApprovisionnementItem\n              key={`${product?.id}_${i}`}\n              product={product}\n              isItemOnApprov={isItemOnApprov}\n              addToApprov={addToApprov}\n              approvisionnement={approvisionnements}\n              dispatch={dispatch}\n            />\n          ))}\n          {approvisionnements.length > 0 && (\n            <>\n              <div className=\"d-flex justify-content-end align-items-center my-3 \">\n                <table>\n                  <tr>\n                    <td>REMISE :</td>\n                    <td>\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        placeholder=\"Remise\"\n                        min={0}\n                        value={remise}\n                        max={100}\n                        onChange={(e) => {\n                          setRemise(e.target.value);\n                        }}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>PAIEMENT LE :</td>\n                    <td>\n                      <input\n                        type=\"date\"\n                        onChange={(e) => setDateEcheance(e.target.value)}\n                        value={dateEcheance}\n                        className=\"form-control\"\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>TYPE DE PAIEMENT:</td>\n                    <td>\n                      <select\n                        className=\"form-control\"\n                        onChange={(e) => {\n                          setTypePaye(e.target.value);\n                        }}\n                      >\n                        <option value=\"espece\" selected>\n                          ESPECE\n                        </option>\n                        <option value=\"boa\">CHEQUE - BOA</option>\n                        <option value=\"bni\">CHEQUE - BNI</option>\n                        <option value=\"MVola\">VIREMENT - MVola</option>\n                        <option value=\"OrangeMoney\">\n                          VIREMENT - ORANGE MONEY\n                        </option>\n                      </select>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>REMARQUE :</td>\n                    <td>\n                      <textarea\n                        className=\"form-control\"\n                        onChange={(e) => {\n                          setRemarque(e.target.value);\n                        }}\n                        placeholder=\"Ecriver ici quelque chose d'autre à savoir sur l'approvisionnement\"\n                      ></textarea>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n              <div className=\"d-flex flex-column  my-3 \">\n                {\" \"}\n                <p className=\"approvisionnement-total-amount\">\n                  Total HT:\n                  <strong>\n                    <NumberFormat\n                      value={calculateTotal(\n                        approvisionnements.map(\n                          (product) =>\n                            product.prixFournisseur * product.quantityParProduct\n                        )\n                      )}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      suffix={\"Ar\"}\n                      renderText={(value, props) => (\n                        <div {...props}>{value}</div>\n                      )}\n                    />\n                  </strong>\n                </p>\n                <p className=\"approvisionnement-total-amount\">\n                  Remise:\n                  <strong>\n                    <NumberFormat\n                      value={remiseEnAriary(\n                        approvisionnements.map(\n                          (product) =>\n                            product.prixFournisseur * product.quantityParProduct\n                        ),\n                        remise\n                      )}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      suffix={\"Ar\"}\n                      renderText={(value, props) => (\n                        <div {...props}>{value}</div>\n                      )}\n                    />\n                  </strong>\n                </p>\n                <p className=\"approvisionnement-total-amount\">\n                  Total avec remise :\n                  <strong>\n                    <NumberFormat\n                      value={calculeTotalAvecRemise(\n                        approvisionnements.map(\n                          (product) =>\n                            product.prixFournisseur * product.quantityParProduct\n                        ),\n                        remise\n                      )}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      suffix={\"Ar\"}\n                      renderText={(value, props) => (\n                        <div {...props}>{value}</div>\n                      )}\n                    />\n                  </strong>\n                </p>\n                <p>Arrêté à la somme de </p>\n                <p className=\"text-uppercase\">\n                  <strong>\n                    {NumberToLetter(\n                      calculeTotalAvecRemise(\n                        approvisionnements.map(\n                          (product) =>\n                            product.prixFournisseur * product.quantityParProduct\n                        ),\n                        remise\n                      )\n                    )}{\" \"}\n                    ARIARY\n                  </strong>\n                </p>\n              </div>\n              <div className=\"d-flex justify-content-end\">\n                <button\n                  className=\"btn btn-green btn-sm mr-2\"\n                  disabled={approvisionnements.length === 0}\n                  onClick={onCheckOut}\n                  type=\"button\"\n                >\n                  Valider l'operation\n                </button>\n                <button\n                  className=\"btn btn-danger btn-sm\"\n                  onClick={onClearApprov}\n                  type=\"button\"\n                >\n                  <span>Annuler</span>\n                </button>\n              </div>\n            </>\n          )}\n        </Card.Body>\n        {approvisionnements.length > 0 && (\n          <Card.Footer className=\"d-flex flex-column\"></Card.Footer>\n        )}\n      </Card>\n    </>\n  );\n};\n\nexport default Approvisionnement;\n","import React from \"react\";\nimport { action, getData } from \"../utils/lib/call\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ProductItemApprov from \"./composants/Approvis/ProductItemApprov\";\nimport { reactFastCompare } from \"react-fast-compare\";\nimport searchByName from \"../filters/searchByName\";\nimport debouce from \"lodash.debounce\";\nimport useApprov from '../hooks/useApprov';\n\nconst FactureProduct = () => {\n  const approvisionnements = useSelector((state) => state.approvisionnements);\n  const products = useSelector(getData(\"products\").value);\n  const meta = useSelector(getData(\"products\").meta);\n  const dispatch = useDispatch();\n  const { isItemOnApprov, addToApprov } = useApprov(\n    approvisionnements,\n    dispatch\n  );\n  const [productData, setProductData] = React.useState([]);\n  const [regenerate, setRegenerate] = React.useState(false);\n  React.useEffect(() => {\n    if (regenerate == true) {\n      dispatch(action(\"products\").fetch());\n      setRegenerate(false);\n    }\n    return () => {\n      setRegenerate(false);\n    };\n  }, [regenerate]);\n\n  React.useEffect(() => {\n    dispatch(action(\"products\").fetch());\n  }, []);\n  React.useEffect(() => {\n    if (!meta.isFetching) {\n      setProductData(products);\n    }\n  }, [meta]);\n  const handleAddToApprov = React.useCallback((product) => {\n    if (addToApprov) addToApprov(product);\n  }, [addToApprov]);\n  const renderProduct = React.useMemo(\n    () => productData.map((p) => <ProductItemApprov key={p.id} product={p} isItemOnApprov={isItemOnApprov} handleAddToApprov={handleAddToApprov} />),\n    [productData]\n  );\n  const handleChange = (e) => {\n    if (e.target != null) {\n      setProductData(searchByName(products, e.target.value));\n    }\n  };\n  const debouncedResults = React.useMemo(() => {\n    return debouce(handleChange, 300);\n  }, [handleChange]);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        onKeyDown={(e) => {\n          if (e.keyCode == 13) {\n            handleChange(e);\n          }\n        }}\n        placeholder=\"Taper sur entrer pour valider votre recherche\"\n        className=\"form-control mb-2\"\n      />\n      <div\n        style={{\n          overflowY: \"auto\",\n          height: \"350px\",\n          maxHeight: \"350px\",\n          overflowX: \"hidden\",\n        }}\n      >\n        <>\n          {renderProduct}\n          {productData.length == 0 && \"Aucun produit trouvé\"}\n        </>{\" \"}\n      </div>\n    </div>\n  );\n};\nexport default React.memo(FactureProduct, reactFastCompare);\n","import React, { useEffect, useState,useRef, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, ListGroup, Card } from \"react-bootstrap\";\nimport Content from \"../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../@adminlte/adminlte/Content/Page\";\nimport ProductItemApprov from \"../components/composants/Approvis/ProductItemApprov\";\nimport { action, getData } from \"../utils/lib/call\";\nimport Approvisionnement from \"./composants/Approvis/Approvisionnement\";\nimport { Data, GetAll } from \"../context\";\nimport { fetchProductsByFournisseur } from \"../store/actions/products\";\nimport searchByName from \"../filters/searchByName\";\nimport searchByFournisseur from \"../filters/searchByFournisseur\";\nimport searchByNameAndFournisseur from \"../filters/searchByNameAndFournisseur\";\nimport { debounce } from \"lodash\";\nimport FactureProduct from './FactureProduct';\nconst request = debounce((value) => {\n  console.log(`request: ${value}`);\n}, 1000);\nconst useShadowState = (init) => {\n  const [state, setState] = useState(init);\n  const shadow = useRef(state);\n  const setShadowAndState = useCallback((nextVal) => {\n    if (typeof nextVal === \"function\") {\n      setState((s) => {\n        shadow.current = nextVal(s);\n        return shadow.current;\n      });\n    } else {\n      shadow.current = nextVal;\n      setState(nextVal);\n    }\n  }, []);\n  return [state, setShadowAndState, shadow];\n};\nconst NouvelleFacture = () => {\n \n  {\n    /**useEffect(() => {\n    if (value != \"\") {\n      dispatch(\n        action(\"products\").fetch(\n          { replace: true },\n          {\n            filter: parameterizeObjectQuery(\"q\", value),\n          }\n        )\n      );\n    }\n  }, [value]);*/\n  }\n  {\n    /** useEffect(() => {\n    //recuperer la premiere ligne dans le tableau fournisseur\n    dispatch(fetchProductsByFournisseur(id));\n  }, [id]); */\n  }\n  return (\n    <Content>\n      <ContentHeader title=\"Nouvelle facture\">\n        <ActiveLink title=\"Nouvelle Facture\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <Container>\n          <Row>\n            <Col xs={5}>\n              <ListGroup>\n                <Card>\n                  <Card.Header className=\"d-flex justify-content-between align-items-center bg-dark text-white\">\n                    Produits\n                  </Card.Header>\n                  <Card.Body>\n                    <FactureProduct/>\n                  </Card.Body>\n                </Card>\n              </ListGroup>\n            </Col>\n            <Col xs={7}>\n              <Approvisionnement setRegenerate={[]} />\n            </Col>\n          </Row>\n        </Container>\n      </Page>\n    </Content>\n  );\n};\n\nexport default React.memo(NouvelleFacture);\n","import * as Yup from \"yup\";\nexport function validationSchema() {\n  return Yup.object().shape({\n    nom: Yup.string().required(\"Le champ est requis\")\n  });\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport Form from \"../../../utils/form\";\nimport { validationSchema } from \"./validation\";\nexport const CategoryInput = ({ category }) => {\n  const [toggleEdit, setToggleEdit] = useState(false);\n  const dispatch = useDispatch();\n  const categories = useSelector(getData(\"categories\").value);\n\n  const deleteCateg = (cat) => {\n    dispatch(action(\"categories\").destroy(cat));\n    dispatch(action(\"categories\").fetch());\n  };\n  return (\n    <div\n      key={category.id}\n      className=\"mb-2 d-flex justify-content-center align-items-center\"\n    >\n      <div\n        style={{\n          width: \"50%\",\n        }}\n      >\n        {!toggleEdit ? (\n          <li className=\"list-items-row p-1 d-flex justify-content-between align-items-center mb-1 border-1\">\n            {category?.name}\n            <button\n              className=\"btn btn-danger btn-sm\"\n              onClick={() => {\n                setToggleEdit(true);\n              }}\n            >\n              Editer\n            </button>\n          </li>\n        ) : (\n          <div className=\"p-3\">\n            <Form\n              enableReinitialize\n              id={`form-${category.id}`}\n              initialValues={{\n                nom: category?.name,\n              }}\n              validations={validationSchema}\n              onSubmit={(values, form) => {\n                const { nom } = values;\n                dispatch(\n                  action(\"categories\").update({\n                    id: category.id,\n                    name: nom,\n                  })\n                );\n                dispatch(action(\"categories\").fetch());\n\n                setToggleEdit(false);\n              }}\n              render={() => (\n                <Form.Element>\n                  <Form.Field.Input\n                    name=\"nom\"\n                    placeholder={\"Nom du categorie\"}\n                  />\n                  <div className=\"d-flex justify-content-center align-items-center\">\n                    <button\n                      className=\"btn btn-success btn-sm m-1\"\n                      type=\"submit\"\n                    >\n                      Enregistrer\n                    </button>\n                    <button\n                      className=\"btn  btn-danger btn-sm m-1\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (\n                          window.confirm(\n                            `Vous voulez vraiment supprimer la categorie \"${category.name}\" ?`\n                          )\n                        ) {\n                          deleteCateg(category);\n                        }\n                      }}\n                    >\n                      Supprimer\n                    </button>\n                    <button\n                      className=\"btn btn-info btn-sm m-1\"\n                      onClick={() => {\n                        setToggleEdit(false);\n                      }}\n                    >\n                      Annuler\n                    </button>\n                  </div>\n                </Form.Element>\n              )}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { action } from \"../../../utils/lib/call\";\nimport Form from \"../../../utils/form\";\nimport { validationSchema } from \"./validation\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nexport const AddCategory = ({ categories, meta }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"mb-3\">\n      <Form\n        id=\"add-form-category\"\n        enableReinitialize\n        initialValues={{\n          nom: \"\",\n        }}\n        validations={validationSchema}\n        onSubmit={(values, form) => {\n          const { nom } = values;\n          dispatch(\n            action(\"categories\").create({\n              name: nom,\n            })\n          );\n        }}\n        render={() => (\n          <Form.Element>\n            <div className=\"d-flex justify-content-center align-items-center\">\n              <div style={{\n                width:\"300px\"\n              }}>\n                <Form.Field.Input name=\"nom\" placeholder={\"Nouvelle categorie\"} />\n              </div>\n              <button className=\"btn btn-success ml-2 \" type=\"submit\">\n                Ajouter\n              </button>\n            </div>\n          </Form.Element>\n        )}\n      />\n    </div>\n  );\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CategoryInput } from './CategoryInput'\nimport { AddCategory } from './AddCategory'\n\nfunction Categories({categories,meta}) {\n    return (\n        <div>\n           \n            <div className=\"card mt-2\">\n            <div className=\"card-body\">\n            <AddCategory categories={categories} meta={meta} />\n              <ol class=\"list-items\">\n                  \n                {categories.map((c) => (\n                  <CategoryInput category={c} />\n                ))}\n              </ol>\n              \n            </div>\n          </div>\n        </div>\n    )\n}\n\nCategories.propTypes = {\n\n}\n\nexport default Categories\n\n","import * as Yup from \"yup\";\nexport function validationSchema() {\n  return Yup.object().shape({\n    nom: Yup.string().required(\"Le champ est requis\")\n  });\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport Form from \"../../../utils/form\";\nimport { validationSchema } from \"./validation\";\nexport const FournisseurInput = ({ fournisseur }) => {\n  const [toggleEdit, setToggleEdit] = useState(false);\n  const dispatch = useDispatch();\n  const fournisseurs = useSelector(getData(\"fournisseurs\").value);\n\n  const deleteCateg = (cat) => {\n    dispatch(action(\"fournisseurs\").destroy(cat));\n    dispatch(action(\"fournisseurs\").fetch());\n  };\n\n  return (\n    <div\n      key={fournisseur.id}\n      className=\"mb-2 d-flex justify-content-center align-items-center\"\n    >\n      <div\n        style={{\n          width: \"50%\",\n        }}\n      >\n        {!toggleEdit ? (\n          <li className=\"list-items-row p-1 d-flex justify-content-between align-items-center mb-1 border-1\">\n            {fournisseur.name}\n            <button\n              className=\"btn btn-warning btn-sm\"\n              onClick={() => {\n                setToggleEdit(true);\n              }}\n            >\n              Editer\n            </button>\n          </li>\n        ) : (\n          <div className=\"p-3\">\n            <Form\n              enableReinitialize\n              id={`form-${fournisseur.id}`}\n              initialValues={{\n                nom: fournisseur.name,\n              }}\n              validations={validationSchema}\n              onSubmit={(values, form) => {\n                const { nom } = values;\n                dispatch(\n                  action(\"fournisseurs\").update({\n                    id: fournisseur.id,\n                    name: nom,\n                  })\n                );\n\n                setToggleEdit(false);\n              }}\n              render={() => (\n                <Form.Element>\n                  <Form.Field.Input\n                    name=\"nom\"\n                    placeholder={\"Nom du fournisseur\"}\n                  />\n                  <div className=\"d-flex justify-content-center align-items-center\">\n                    <button\n                      className=\"btn btn-success btn-sm m-1\"\n                      type=\"submit\"\n                    >\n                      Enregistrer\n                    </button>\n                    <button\n                      className=\"btn  btn-danger btn-sm m-1\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (\n                          window.confirm(\n                            `Vous voulez vraiment supprimer le fournisseur \"${fournisseur.name}\" ?`\n                          )\n                        ) {\n                          deleteCateg(fournisseur);\n                        }\n                      }}\n                    >\n                      Supprimer\n                    </button>\n                    <button\n                      className=\"btn btn-info btn-sm m-1\"\n                      onClick={() => {\n                        setToggleEdit(false);\n                      }}\n                    >\n                      Annuler\n                    </button>\n                  </div>\n                </Form.Element>\n              )}\n            />\n          </div>\n        )}\n      </div>\n      <div></div>{\" \"}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { action } from \"../../../utils/lib/call\";\nimport Form from \"../../../utils/form\";\nimport { validationSchema } from \"./validation\";\nexport const AddFournisseur = ({ fournisseurs, meta }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"mb-3\">\n      <Form\n        id=\"add-form-category\"\n        enableReinitialize\n        initialValues={{\n          nom: \"\",\n        }}\n        validations={validationSchema}\n        onSubmit={(values, form) => {\n          const { nom } = values;\n          dispatch(\n            action(\"fournisseurs\").create({\n              id: meta.nextId,\n              name: nom,\n            })\n          );\n        }}\n        render={() => (\n          <Form.Element>\n            <div className=\"d-flex justify-content-center align-items-center\">\n              <div\n                style={{\n                  width: \"300px\",\n                }}\n              >\n                <Form.Field.Input\n                  name=\"nom\"\n                  placeholder={\"Nom du fournisseur\"}\n                />\n              </div>\n              <button className=\"btn btn-success  ml-3\" type=\"submit\">\n                Ajouter\n              </button>\n            </div>\n          </Form.Element>\n        )}\n      />\n    </div>\n  );\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FournisseurInput } from './FournisseurInput'\nimport { AddFournisseur } from './AddFournisseur'\n\nfunction Fournisseurs({fournisseurs,meta}) {\n    return (\n        <div>\n\n            <div className=\"card mt-2\">\n            <div className=\"card-body\">\n            <AddFournisseur fournisseurs={fournisseurs} meta={meta} />\n              <ol class=\"list-items\">\n                  \n                {fournisseurs.map((f) => (\n                  <FournisseurInput fournisseur={f} />\n                ))}\n              </ol>\n              \n            </div>\n          </div>\n        </div>\n    )\n}\n\nFournisseurs.propTypes = {\n\n}\n\nexport default Fournisseurs\n\n","import * as Yup from \"yup\";\nexport function validationSchema() {\n  return Yup.object().shape({\n    nom: Yup.string().required(\"Le champ est requis\")\n  });\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport Form from \"../../../utils/form\";\nimport { validationSchema } from \"./validation\";\nexport const VaccinateurInput = ({ vaccinateur }) => {\n  const [toggleEdit, setToggleEdit] = useState(false);\n  const dispatch = useDispatch();\n  const vaccinateurs = useSelector(getData(\"vaccinateurs\").value);\n\n  const deleteCateg = (cat) => {\n    dispatch(action(\"vaccinateurs\").destroy(cat));\n    dispatch(action(\"vaccinateurs\").fetch());\n  };\n \n  return (\n    <div key={vaccinateur.id} className=\"mb-2\">\n      <div>\n        {!toggleEdit ? (\n          <li className=\"list-items-row p-1 d-flex justify-content-between align-items-center mb-1 border-1\">\n            <tr>\n              <td> {vaccinateur.name} - {vaccinateur.contact}</td>\n            </tr>\n           \n            <button\n              className=\"btn btn-secondary btn-sm\"\n              onClick={() => {\n                setToggleEdit(true);\n              }}\n            >\n              Editer\n            </button>\n            </li>\n        ) : (\n          <div  className=\"p-3\">\n            <Form\n            enableReinitialize\n              id={`form-${vaccinateur.id}`}\n              initialValues={{\n                nom: vaccinateur.name,\n                contact:vaccinateur.contact\n              }}\n              validations={validationSchema}\n              onSubmit={(values, form) => {\n                const { nom,contact } = values;\n                dispatch(\n                  action(\"vaccinateurs\").update({\n                    id: vaccinateur.id,\n                    name: nom,\n                    contact: contact\n                  })\n                );\n\n                setToggleEdit(false);\n              }}\n              render={() => (\n                <Form.Element>\n                  <Form.Field.Input name=\"nom\" label=\"Nom du vaccinateur\" placeholder={\"Nom du vaccinateur\"} />\n                  <Form.Field.Input name=\"contact\" label=\"Contact du vaccinateur\" placeholder={\"Contact du vaccinateur\"} />\n\n                  <button className=\"btn btn-success btn-sm m-1\" type=\"submit\">\n                    Enregistrer\n                  </button>\n                  <button\n                    className=\"btn  btn-success btn-sm m-1\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      if (\n                        window.confirm(\n                          `Vous voulez vraiment supprimer la vaccinateur \"${vaccinateur.name}\" ?`\n                        )\n                      ) {\n                        deleteCateg(vaccinateur);\n                      }\n                    }}\n                  >\n                    Supprimer\n                  </button>\n                  <button\n                    className=\"btn btn-success btn-sm m-1\"\n                    onClick={() => {\n                      setToggleEdit(false);\n                    }}\n                  >\n                    Annuler\n                  </button>\n                </Form.Element>\n                )}\n              />\n              \n          </div>\n        )}\n      </div>\n    </div>\n  );\n};","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { action } from \"../../../utils/lib/call\";\nimport Form from \"../../../utils/form\";\nimport { validationSchema } from \"./validation\";\nexport const AddVaccinateur = ({ categories, meta }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"mb-3\">\n      <Form\n        id=\"add-form-vaccinateur\"\n        enableReinitialize\n        initialValues={{\n          nom: \"\",\n          contact: \"\",\n        }}\n        validations={validationSchema}\n        onSubmit={(values, form) => {\n          const { nom, contact } = values;\n          dispatch(\n            action(\"vaccinateurs\").create({\n              id: meta.nextId,\n              name: nom,\n              contact: contact,\n            })\n          );\n        }}\n        render={() => (\n          <Form.Element>\n            <div className=\"d-flex flex-column justify-content-center align-items-center\">\n              <div\n                style={{\n                  width: \"300px\",\n                }}\n              >\n                <Form.Field.Input\n                  name=\"nom\"\n                  label=\"Nom du vaccinateur\"\n                  placeholder={\"Nom du vaccinateur\"}\n                />\n                <Form.Field.Input\n                  name=\"contact\"\n                  label=\"Contact du vaccinateur\"\n                  placeholder={\"Contact du vaccinateur\"}\n                />\n\n                <button className=\"btn btn-success mt-2 btn-block \" type=\"submit\">\n                  Ajouter\n                </button>\n              </div>\n            </div>\n          </Form.Element>\n        )}\n      />\n    </div>\n  );\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { VaccinateurInput } from './VaccinateurInput'\nimport { AddVaccinateur } from './AddVaccinateur'\n\nfunction Vaccinateurs({vaccinateurs,meta}) {\n    return (\n        <div>\n            <h3 className=\"mb-2 text-bold title\">Vaccinateurs</h3>\n\n            <div className=\"card mt-2\">\n            <div className=\"card-body\">\n            <AddVaccinateur vaccinateurs={vaccinateurs} meta={meta} />\n              <ol class=\"list-items\">\n                  \n                {vaccinateurs.map((c) => (\n                  <VaccinateurInput vaccinateur={c} />\n                ))}\n              </ol>\n              \n            </div>\n          </div>\n        </div>\n    )\n}\n\nVaccinateurs.propTypes = {\n\n}\n\nexport default Vaccinateurs\n\n","import * as Yup from \"yup\";\nexport function validationSchema() {\n  return Yup.object().shape({\n    nom: Yup.string().required(\"Le champ est requis\")\n  });\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport Form from \"../../../utils/form\";\nimport { validationSchema } from \"./validation\";\nexport const EmprunterInput = ({ emprunter }) => {\n  const [toggleEdit, setToggleEdit] = useState(false);\n  const dispatch = useDispatch();\n  const emprunters = useSelector(getData(\"emprunters\").value);\n\n  const deleteCateg = (cat) => {\n    dispatch(action(\"emprunters\").destroy(cat));\n    dispatch(action(\"emprunters\").fetch());\n  };\n\n  return (\n    <div key={emprunter.id}  className=\"mb-2\">\n      <div>\n        {!toggleEdit ? (\n          <li className=\"list-items-row p-1 d-flex justify-content-between align-items-center mb-1 border-1\">\n            <tr>\n              <td>\n                {\" \"}\n                {emprunter.name}({emprunter.contact})\n              </td>\n            </tr>\n\n            <button\n              className=\"btn btn-secondary btn-sm\"\n              onClick={() => {\n                setToggleEdit(true);\n              }}\n            >\n              Editer\n            </button>\n          </li>\n        ) : (\n          <div className=\"bg-gray\">\n            <Form\n              enableReinitialize\n              id={`form-${emprunter.id}`}\n              initialValues={{\n                nom: emprunter.name,\n                contact: emprunter.contact,\n              }}\n              validations={validationSchema}\n              onSubmit={(values, form) => {\n                const { nom, contact } = values;\n                dispatch(\n                  action(\"emprunters\").update({\n                    id: emprunter.id,\n                    name: nom,\n                    contact: contact,\n                  })\n                );\n\n                setToggleEdit(false);\n              }}\n              render={() => (\n                <Form.Element>\n                  <Form.Field.Input\n                    name=\"nom\"\n                    label=\"Nom du emprunter\"\n                    placeholder={\"Nom du emprunter\"}\n                  />\n                  <Form.Field.Input\n                    name=\"contact\"\n                    label=\"Contact du emprunter\"\n                    placeholder={\"Contact du emprunter\"}\n                  />\n\n                  <button className=\"btn btn-success btn-sm m-1\" type=\"submit\">\n                    Enregistrer\n                  </button>\n                  <button\n                    className=\"btn  btn-success btn-sm m-1\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      if (\n                        window.confirm(\n                          `Vous voulez vraiment supprimer la emprunter \"${emprunter.name}\" ?`\n                        )\n                      ) {\n                        deleteCateg(emprunter);\n                      }\n                    }}\n                  >\n                    Supprimer\n                  </button>\n                  <button\n                    className=\"btn btn-success btn-sm m-1\"\n                    onClick={() => {\n                      setToggleEdit(false);\n                    }}\n                  >\n                    Annuler\n                  </button>\n                </Form.Element>\n              )}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { action } from \"../../../utils/lib/call\";\nimport Form from \"../../../utils/form\";\nimport { validationSchema } from \"./validation\";\nexport const AddEmprunter = ({ categories,meta }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"mb-3\">\n      <Form\n        id=\"add-form-category\"\n        enableReinitialize\n        initialValues={{\n          nom: \"\",\n          contact: \"\",\n        }}\n        validations={validationSchema}\n        onSubmit={(values, form) => {\n          const { nom, contact } = values;\n          dispatch(\n            action(\"emprunters\").create({\n              id:meta.nextId,\n              name: nom,\n              contact: contact,\n            })\n          );\n        }}\n        render={() =>(\n\n          <Form.Element>\n          <Form.Field.Input\n            name=\"nom\"\n            label=\"Nom du emprunter\"\n            placeholder={\"Nom du emprunter\"}\n          />\n          <Form.Field.Input\n            name=\"contact\"\n            label=\"Contact du emprunter\"\n            placeholder={\"Contact du emprunter\"}\n          />\n\n          <button className=\"btn btn-success  btn-sm \" type=\"submit\">\n            Ajouter\n          </button>\n        </Form.Element>\n        )}\n\n      />\n    </div>\n  );\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { EmprunterInput } from './EmprunterInput'\nimport { AddEmprunter } from './AddEmprunter'\n\nfunction Emprunters({emprunters,meta}) {\n    return (\n        <div>\n            <h3 className=\"mb-2 text-bold title\">Emprunters</h3>\n          \n            <div className=\"card mt-2\">\n            <div className=\"card-body\">\n            <AddEmprunter emprunters={emprunters} meta={meta} />\n              <ol class=\"list-items\">\n                  \n                {emprunters.map((e) => (\n                  <EmprunterInput emprunter={e} />\n                ))}\n              </ol>\n              \n            </div>\n          </div>\n        </div>\n    )\n}\n\nEmprunters.propTypes = {\n\n}\n\nexport default Emprunters\n\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Tab, Row, Col, Nav } from \"react-bootstrap\";\nimport Categories from \"./parametres/category/Categories\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { action, getData } from \"../utils/lib/call\";\nimport Fournisseurs from \"./parametres/fournisseurs/Fournisseurs\";\nimport Vaccinateurs from \"./parametres/vaccinateur/Vaccinateurs\";\nimport Emprunters from \"./parametres/emprunter/Emprunters\";\nimport ParametrageSuppl from \"./composants/ParametrageSuppl\";\nimport ApprovItem from \"../components/ApprovItem\";import Content from \"../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../@adminlte/adminlte/Content/Page\";\nfunction Parametres(props) {\n  const dispatch = useDispatch();\n  const categories = useSelector(getData(\"categories\").value);\n  const fournisseurs = useSelector(getData(\"fournisseurs\").value);\n  const vaccinateurs = useSelector(getData(\"vaccinateurs\").value);\n  const emprunters = useSelector(getData(\"emprunters\").value);\n  const categoriesMeta = useSelector(getData(\"categories\").meta);\n  const fournisseursMeta = useSelector(getData(\"fournisseurs\").meta);\n  const vaccinateursMeta = useSelector(getData(\"vaccinateurs\").meta);\n  const empruntersMeta = useSelector(getData(\"emprunters\").meta);\n\n  useEffect(() => {\n    dispatch(action(\"fournisseurs\").fetch());\n    dispatch(action(\"categories\").fetch());\n    dispatch(action(\"vaccinateurs\").fetch());\n    dispatch(action(\"emprunters\").fetch());\n  }, []);\n  return (\n      <Content>\n      <ContentHeader title=\"Parametres générales\">\n        <ActiveLink title=\"Parametres générales\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n        <Row>\n         \n            <Nav variant=\"pills\" className=\"flex-row justify-content-center\">\n              <Nav.Item className=\"border ml-2\">\n                <Nav.Link eventKey=\"first\" className=\"py-2 px-3 text-uppercase bg-white\" >Categories de produits</Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"border  ml-2\">\n                <Nav.Link eventKey=\"second\"  className=\"py-2 px-3 text-uppercase  bg-white\">Fournisseurs</Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"border  ml-2\">\n                <Nav.Link eventKey=\"three\"  className=\"py-2 px-3 text-uppercase  bg-white\">Vaccinateurs</Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"border  ml-2\">\n                <Nav.Link eventKey=\"four\"  className=\"py-2 px-3 text-uppercase  bg-white\">Demandeur de credit</Nav.Link>\n              </Nav.Item>\n            \n              \n            </Nav>\n          <Col sm={12}>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"first\">\n                <Categories categories={categories}  meta={categoriesMeta} />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"second\">\n                <Fournisseurs fournisseurs={fournisseurs} meta={fournisseursMeta} />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"three\">\n                <Vaccinateurs vaccinateurs={vaccinateurs} meta={vaccinateursMeta}  />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"four\">\n                <Emprunters emprunters={emprunters} meta={empruntersMeta}  />\n              </Tab.Pane>\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n      </Page>\n    </Content>\n  );\n}\n\nParametres.propTypes = {};\n\nexport default Parametres;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getEntree, getSortie } from \"../store/actions/commandes\";\nimport { action, getData } from \"../utils/lib/call\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\n\nimport Content from \"../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../@adminlte/adminlte/Content/Page\";\nimport NumberFormat from \"react-number-format\";\nimport moment from \"moment\";\nimport { displayDate, displayMoney } from \"../utils/functions\";\nimport DataTable from \"../utils/admin/DataTable\";\nimport DeleteFromDepot from \"./fromDepot/DeleteFromDepot\";\nfunction Sortie() {\n  var start = moment().isoWeekday(1).startOf(\"week\");\n  var end = moment().endOf(\"week\");\n  const [deb, setDeb] = useState(start);\n  const [fin, setFin] = useState(end);\n  const [dateRange, onChangeDateRange] = useState([start, end]);\n  useEffect(() => {\n    if (dateRange !== null) {\n      if (dateRange[0]) {\n        setDeb(dateRange[0]);\n      }\n      if (dateRange[1]) {\n        setFin(dateRange[1]);\n      }\n    } else {\n      setDeb(start);\n      setFin(end);\n    }\n  }, [dateRange]);\n\n  const calculateTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.prixVente * el.quantityParProductDepot;\n    });\n    return total;\n  };\n  const quantiteBruteTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.quantityParProductDepot * 1;\n    });\n    return total;\n  };\n  const quantiteCCTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.qttByCCDepot * 1;\n    });\n    return total;\n  };\n\n  const commandes = useSelector(getData(\"commandes\").value);\n  const meta = useSelector(getData(\"commandes\").meta);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getSortie(deb, fin));\n  }, [deb, fin]);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Date de commande\",\n        Cell: (data) => {\n          return <>{displayDate(data.row.original?.dateCom)}</>;\n        },\n      },\n      {\n        Header: \"Produits\",\n        Cell: (data) => {\n          return (\n            <div style={{ width: \"200px\" }}>\n              {data.row.original?.contenu?.map((d) => (\n                <span>\n                  {d.name}\n                  {\",\"}\n                </span>\n              ))}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Quantité\",\n        Cell: (data) => {\n          return <div>{quantiteBruteTotal(data.row.original?.contenu)}</div>;\n        },\n      },\n      {\n        Header: \"Total\",\n        Cell: (data) => {\n          return (\n            <div>\n              {displayMoney(calculateTotal(data.row.original?.contenu))}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Actions\",\n        Cell: (data) => {\n          return (\n            <>\n              <Link\n                to={`/depot/detail/${data.row.original?.id}`}\n                className=\"btn btn-green btn-sm mr-2\"\n              >\n                Détails\n              </Link>\n              <Link\n                to={`/editer/commande/${data.row.original?.id}`}\n                className=\"btn btn-warning btn-sm mr-2\"\n              >\n                Editer\n              </Link>\n              <DeleteFromDepot model=\"fromdepots\" entity={data.row.original} />\n            </>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <Content>\n      <ContentHeader title=\"Historique de sortie\">\n        <ActiveLink title=\"Historique de sortie\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        {\" \"}\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div>\n              <h3 className=\"text-uppercase\">Historique de sortie</h3>\n              <p>{`${displayDate(deb)} ->  ${displayDate(fin)}`}</p>\n            </div>\n          </div>\n          <div className=\"col-lg-6 text-right\">\n            <DateRangePicker\n              locale=\"fr-FR\"\n              onChange={onChangeDateRange}\n              value={dateRange}\n            />\n          </div>{\" \"}\n        </div>\n        <DataTable\n          filter={false}\n          data={commandes.sort((low, high) => high.id - low.id)}\n          meta={meta}\n          columns={columns}\n          //  addUrl={NOUVELLEFACTURE}\n          //  urlName={\"Ajouter un facture\"}\n        />\n      </Page>\n    </Content>\n  );\n}\n\nexport default Sortie;\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { action, getData } from \"../lib/call\";\nimport { useParams } from \"react-router\";\nconst GetDataContext = React.createContext();\n\nfunction GetOne({ model, children }) {\n  const { id } = useParams();\n  const [regenerate, setRegenerate] = React.useState(true);\n  const data = useSelector(getData(model).value);\n  const meta = useSelector(getData(model).meta);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(action(model).get(id));\n  }, [id]);\n  React.useEffect(() => {\n    if (regenerate == true) {\n      dispatch(action(model).get(id));\n      setRegenerate(false);\n    }\n    return () => {\n      setRegenerate(false);\n    };\n  }, [regenerate]);\n  const value = { data: data[0], meta, setRegenerate };\n  return (\n    <GetDataContext.Provider value={value}>{children}</GetDataContext.Provider>\n  );\n}\n\nfunction GetOneById({ model, id, children }) {\n  const [regenerate, setRegenerate] = React.useState(false);\n  const data = useSelector(getData(model).value);\n  const meta = useSelector(getData(model).meta);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(action(model).get(id));\n  }, [id]);\n  React.useEffect(() => {\n    if (regenerate == true) {\n      dispatch(action(model).get(id));\n      setRegenerate(false);\n    }\n    return () => {\n      setRegenerate(false);\n    };\n  }, [regenerate]);\n  const value = { data: data[0], meta, setRegenerate };\n  return (\n    <GetDataContext.Provider value={value}>{children}</GetDataContext.Provider>\n  );\n}\nfunction GetAll({ model, options, children }) {\n  const data = useSelector(getData(model).value);\n  const meta = useSelector(getData(model).meta);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(action(model).fetch(options));\n  }, [options]);\n  const value = { data, meta };\n  return (\n    <GetDataContext.Provider value={value}>{children}</GetDataContext.Provider>\n  );\n}\nfunction Data({ children }) {\n  return (\n    <GetDataContext.Consumer>\n      {(context) => {\n        if (context === undefined) {\n          throw new Error(\"Data  must be used within a GetDataContext\");\n        }\n        return children(context);\n      }}\n    </GetDataContext.Consumer>\n  );\n}\nfunction GetByAction({ model, operationClass, children }) {\n    const [regenerate, setRegenerate] = React.useState(false);\n    const data = useSelector(getData(model).value);\n    const meta = useSelector(getData(model).meta);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n      dispatch(operationClass());\n    }, []);\n    React.useEffect(() => {\n      if (regenerate === true) {\n        dispatch(operationClass());\n        setRegenerate(false);\n      }\n      return () => {\n        setRegenerate(false);\n      };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [regenerate]);\n    const value = { data: data[0], meta, setRegenerate };\n    return (\n      <GetDataContext.Provider value={value}>{children}</GetDataContext.Provider>\n    );\n  }\n\n\nexport { GetAll,GetOneById, GetOne, Data,GetByAction };\n","export const SET_FROM_DEPOT_ITEMS = 'SET_FROM_DEPOT_ITEMS';\nexport const ADD_FROM_DEPOT = 'ADD_FROM_DEPOT';\nexport const REMOVE_FROM_TO_DEPOT = 'REMOVE_FROM_TO_DEPOT';\nexport const CLEAR_FROM_DEPOT = 'CLEAR_FROM_DEPOT';\nexport const ADD_QTY_FROM_DEPOT_ITEM = 'ADD_QTY_FROM_DEPOT_ITEM';\nexport const MINUS_QTY_FROM_DEPOT_ITEM = 'MINUS_QTY_FROM_DEPOT_ITEM';\nexport const ADD_NUMBER_QTY_DEPOT_ITEM ='ADD_NUMBER_QTY_DEPOT_ITEM';\nexport const ADD_QTY_PORTION_FROM_DEPOT_ITEM = \"ADD_QTY_PORTION_FROM_DEPOT_ITEM\";\nexport const MINUS_QTY_PORTION_FROM_DEPOT_ITEM = \"MINUS_QTY_PORTION_FROM_DEPOT_ITEM\";\nexport const ADD_QTY_NUMBER_FROM_DEPOT_ITEM = \"ADD_QTY_NUMBER_FROM_DEPOT_ITEM\";\nexport const  MINUS_QTY_PORTION__DOSE_ITA_NEW_FROM_DEPOT_ITEM = \"MINUS_QTY_PORTION_DOSE_ITA_NEW_FROM_DEPOT_ITEM\";\nexport const ADD_QTY_PORTION_DOSE_UTA_NEW_FROM_DEPOT_ITEM = \"ADD_QTY_PORTION_DOSE_ITA_NEW_FROM_DEPOT_ITEM\";\nexport const ADD_QTY_PORTION_DOSE_SOVAX_FROM_DEPOT_ITEM = \"ADD_QTY_PORTION_DOSE_SOVAX_FROM_DEPOT_ITEM\";\nexport const MINUS_QTY_PORTION__DOSE_SOVAX_FROM_DEPOT_ITEM=\"MINUS_QTY_PORTION__DOSE_SOVAX_FROM_DEPOT_ITEM\";\nexport const ADD_QTY_PORTION_PHYTO_COND_FROM_DEPOT_ITEM=\"ADD_QTY_PORTION_PHYTO_COND_FROM_DEPOT_ITEM\";\nexport const MINUS_QTY_PORTION_PHYTO_COND_FROM_DEPOT_ITEM=\"MINUS_QTY_PORTION_PHYTO_COND_FROM_DEPOT_ITEM\";","import {\n  ADD_QTY_FROM_DEPOT_ITEM,\n  ADD_FROM_DEPOT,\n  CLEAR_FROM_DEPOT,\n  MINUS_QTY_FROM_DEPOT_ITEM,\n  REMOVE_FROM_TO_DEPOT,\n  SET_FROM_DEPOT_ITEMS,\n  ADD_QTY_PORTION_FROM_DEPOT_ITEM,\n  MINUS_QTY_PORTION_FROM_DEPOT_ITEM,\n  ADD_QTY_NUMBER_FROM_DEPOT_ITEM,\n} from \"../constants\";\n\nexport const setFromDepotItems = (items = []) => ({\n  type: SET_FROM_DEPOT_ITEMS,\n  payload: items,\n});\n\nexport const addFromDepot = (product) => ({\n  type: ADD_FROM_DEPOT,\n  payload: product,\n});\n\nexport const removeFromDepot = (id) => ({\n  type: REMOVE_FROM_TO_DEPOT,\n  payload: id,\n});\n\nexport const clearFromDepot = () => ({\n  type: CLEAR_FROM_DEPOT,\n});\n\nexport const addQtyFromDepotItem = (id, qtt) => ({\n  type: ADD_QTY_FROM_DEPOT_ITEM,\n  payload: { id: id, qtt: qtt },\n});\n\nexport const setQtyFromDepotItem = (id, value) => ({\n  type: ADD_QTY_NUMBER_FROM_DEPOT_ITEM,\n  payload: {\n    id: id,\n    value: value,\n  },\n});\nexport const minusQtyFromDepotItem = (id) => ({\n  type: MINUS_QTY_FROM_DEPOT_ITEM,\n  payload: { id: id },\n});\n\nexport const addQtyFromDepotPortionItem = (id, value) => ({\n  type: ADD_QTY_PORTION_FROM_DEPOT_ITEM,\n  payload: { id: id, value: value },\n});\n\nexport const minusQtyFromDepotPortionItem = (id) => ({\n  type: MINUS_QTY_PORTION_FROM_DEPOT_ITEM,\n  payload: { id: id },\n});\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\nimport { setQtyFromDepotItem } from \"../../store/fromdepot/actions/fromdepot\";\n\nconst FromDepotItemControl = ({\n  product,\n  setRealQttCC,\n  setRealQtt,\n  realQtt,\n  realQttCC,\n}) => {\n  const dispatch = useDispatch();\n  const onAddQtyBrute = (value) => {\n    dispatch(setQtyFromDepotItem(product.id, value));\n  };\n\n  const getValue = () => {\n    return isEnough() == true\n      ? product?.quantityBrute * 1 \n      : product?.quantityBrute * 1;\n  };\n  const isEnough = () => {\n    return product.quantityBrute - 1 - product.quantityParProductDepot * 1 < 0;\n  };\n  return (\n    <div className=\"basket-item-control\">\n      <NumberInput\n        inputMode={\"numeric\"}\n        w={28}\n        disabled={product?.condmldepot != 0 && product?.qttccpventedepot != 0}\n        step={1}\n        bg={\"whitesmoke\"}\n        onChange={(value) => {\n          onAddQtyBrute(value);\n          setRealQtt(value);\n          if (isEnough() == true) {\n            alert(\n              \"Le reste du stock est : \" +\n                product.quantityBrute +\n                \" < \" +\n                value +\n                \" demandé\"\n            );\n          }\n        }}\n        min={0}\n        defaultValue={product?.quantityParProductDepot}\n        max={getValue()}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n    </div>\n  );\n};\nexport default FromDepotItemControl;\n","import {\n  addFromDepot as dispatchAddFromDepot,\n  removeFromDepot,\n} from \"../store/fromdepot/actions/fromdepot\";\n\nconst useFromDepot = (fromdepot, dispatch) => {\n  const isItemFromDepot = (id) => !!fromdepot?.find((item) => item?.id === id);\n  const addFromDepot = (product) => {\n    if (isItemFromDepot(product.id)) {\n      dispatch(removeFromDepot(product.id));\n    } else {\n      dispatch(dispatchAddFromDepot(product));\n    }\n  };\n  return { fromdepot, isItemFromDepot, addFromDepot };\n};\n\nexport default useFromDepot;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FromDepotItemControl from \"./FromDepotItemControl\";\nimport FromDepotItemPartial from \"./FromDepotItemPartial\";\nimport { displayMoney, checkHasExistText } from \"../../utils/functions\";\nimport { ItaNewInputDose } from \"./ItaNewInputDose\";\nimport { PhytoConditionnementInput } from \"./PhytoConditionnementInput\";\nimport { SovaxInputDose } from \"./SovaxInputDose\";\nimport useFromDepot from \"../../hooks/useFromDepot\";\nconst FromDepotItem = ({ product }) => {\n  const [realQttCC, setRealQttCC] = useState(null);\n  const [realQtt, setRealQtt] = useState(null);\n  const fromdepots = useSelector((state) => state.fromdepots);\n  const dispatch = useDispatch();\n  const { isItemFromDepot, addFromDepot } = useFromDepot(fromdepots, dispatch);\n\n  const itemOnBasket = isItemFromDepot ? isItemFromDepot(product.id) : false;\n\n  const handleAddToBasket = () => {\n    if (addFromDepot) addFromDepot(product);\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center border   mb-2 p-2\">\n        <div style={{ width: \"45%\" }}>\n          <p className=\"text-blue\">{product.name}</p>\n          <span className=\"text-lowercase\">\n            <strong>\n              {product.quantityParProductDepot != 0 &&\n                displayMoney(product.prixVente)}\n              {product.quantityParProductDepot == 0 &&\n                product.prixParCC != 0 && (\n                  <>\n                    {product.prixqttccventedepot != null &&\n                    product.prixqttccventedepot != 0\n                      ? displayMoney(product.prixqttccventedepot)\n                      : displayMoney(product.prixParCC)}\n                  </>\n                )}\n              {product.quantityParProductDepot != 0 &&\n                \" x \" +\n                  product.quantityParProductDepot +\n                  \" \" +\n                  product.type}{\" \"}\n              {product.prixqttccventedepot == null &&\n                product.prixqttccventedepot == 0 && (\n                  <>\n                    {product.qttByCCDepot != 0 &&\n                      (product.quantityParProductDepot == 0 ? \" x \" : \"+\") +\n                        product.qttByCCDepot +\n                        \"ML\"}\n                  </>\n                )}\n            </strong>\n          </span>\n        </div>\n        <div className=\"text-inline text-center\">\n          <h5 className=\"mb-1\">{product.type}</h5>\n          <FromDepotItemControl\n            product={product}\n            setRealQttCC={setRealQttCC}\n            setRealQtt={setRealQtt}\n            realQtt={realQtt}\n            realQttCC={realQttCC}\n          />\n          \n        </div>\n        <div>\n            {itemOnBasket && (\n              <button\n                onClick={handleAddToBasket}\n                className=\"btn btn-danger btn-xs text-right\"\n              >\n                X\n              </button>\n            )}\n          </div> \n          {/**{product.type === \"FLACON\" && (\n          <div>\n          <div className=\"text-inline text-center\">\n            <h5 className=\"mb-1\">{product.categoryId == 3 ? \"DOSE\" : \"ML\"}</h5>\n            {checkHasExistText(product.name, \"ita new\") && (\n              <ItaNewInputDose\n                product={product}\n                setRealQttCC={setRealQttCC}\n                setRealQtt={setRealQtt}\n                realQtt={realQtt}\n                realQttCC={realQttCC}\n              />\n            )}\n            {checkHasExistText(product.name, \"sovax\") && (\n              <SovaxInputDose\n                setRealQttCC={setRealQttCC}\n                setRealQtt={setRealQtt}\n                realQtt={realQtt}\n                realQttCC={realQttCC}\n                product={product}\n              />\n            )}\n            {product.condmldepot == 0 &&\n              product.qttccpventedepot == 0 &&\n              !checkHasExistText(product.name, \"sovax\") &&\n              !checkHasExistText(product.name, \"ita new\") && (\n                <FromDepotItemPartial\n                  setRealQttCC={setRealQttCC}\n                  setRealQtt={setRealQtt}\n                  realQtt={realQtt}\n                  realQttCC={realQttCC}\n                  product={product}\n                />\n              )}\n            {product.condmldepot !== 0 && product.qttccpventedepot !== 0 && (\n              <PhytoConditionnementInput product={product} />\n            )}\n            <div>\n              {itemOnBasket && (\n                <button\n                  onClick={handleAddToBasket}\n                  className=\"btn btn-danger btn-xs text-right\"\n                >\n                  X\n                </button>\n              )}\n            </div> \n            </div>\n          </div>\n          \n        )}*/}\n      </div>\n    </div>\n  );\n};\n\nexport default FromDepotItem;\n","// tester l'existance d'une quantité suffisante pour en cc d'un produit dans le cva\nexport const canBuyCCFromDepot = (product) => {\n  return !!product.quantityCC > 0;\n};\nexport const canBuyBruteFromDepot = (product) => {\n  return !!product.quantityBrute > 0;\n};\nexport const cantBuyBruteFromDepot = (product) => {\n  return !!product.quantityBrute < 0;\n};\n\nexport const isBiggerThanLastQuantityCCDepot = (product) => {\n  return !!(product.qttByCCDepot > product.quantityCC);\n};\nexport const isLowerThanLastQuantityCCDepot = (product) => {\n  return !!(product.qttByCCDepot < product.quantityCCCVA);\n};\nexport const isSameOfLastQuantityCCDepot = (product) => {\n  return !!(product.qttByCCDepot == product.quantityCC);\n};\nexport const getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCCDepot = (\n  product\n) => {\n  if (isBiggerThanLastQuantityCCDepot(product))\n    return product.qttByCCDepot - product.quantityCC;\n  else return product.quantityCC - product.qttByCCDepot;\n};\nexport const minusQuantityBruteWhenQttCcIsEmptyDepot = (product) => {\n  if (canBuyBruteFromDepot(product)) product.quantityBrute -= 1;\n  else product.quantityBrute = 0;\n  return product;\n};\nexport const minusQuantityCcDepot = (product) => {\n\n\n  if (canBuyBruteFromDepot(product)) {\n    console.log('hello ici');\n    if (isBiggerThanLastQuantityCCDepot(product)) {\n\n      minusQuantityBruteWhenQttCcIsEmptyDepot(product);\n      reinitQuantityCCDepot(\n        product,\n        product.doseDefault -\n          getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCCDepot(product)\n      );\n    } else if (isSameOfLastQuantityCCDepot(product)) {\n      reinitQuantityCCDepot(product, 0);\n    } else {\n      reinitQuantityCCDepot(product, product.quantityCC - product.qttByCCDepot);\n    }\n  } else {\n    if (product.quantityCC > 0)\n      reinitQuantityCCDepot(product, product.quantityCC - product.qttByCCDepot);\n    else {\n      reinitQuantityCCDepot(product, 0);\n    }\n  }\n  return product;\n};\nexport const reinitQuantityCCDepot = (product, value) => {\n  product.quantityCC = value;\n  return product;\n};\n\nexport const soldAllStockCCDepot = (product) => {\n  product.quantityCC = 0;\n};\nexport const resetQuantityBrute = (product) => {\n  product.quantityBrute = 0;\n};\n\nexport const handleSoldQuantityCCDepot = (product) => {\n  minusQuantityCcDepot(product);\n  return product;\n};\nexport const isSpecialProductHandleDepot = (product) => {\n  return !!(\n    product.condmldepot != null &&\n    product.condvaldepot != null &&\n    product.qttccpventedepot != null &&\n    product.prixqttccventedepot != null\n  );\n};\nexport const isBiggerThanLastCondML = (product) => {\n  return !!(product.qttByCCDepot > product.condmldepot);\n};\nexport const hasCondValDepot = (product) => {\n  return !!product.condvaldepot >= 0;\n};\nexport const minusCondValWhenQttCcIsEmptyDepot = (product) => {\n  if (product.condvaldepot > 0) {\n    product.condvaldepot -= 1;\n  } else {\n    if (product.quantityBrute> 0) {\n      minusQuantityBruteWhenQttCcIsEmptyDepot(product);\n      product.condvaldepot = product.condsizedepot - 1;\n    } else {\n      product.condvaldepot = 0;\n    }\n  }\n  return product;\n};\n\nexport const reinitConditionnementDepot = (product) => {\n  product.quantityCC =\n    product.condmldepot -\n    getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCCDepot(product);\n  product.condvaldepot = product.condvaldepot - 1;\n  return product;\n};\nexport const minusQuantityBruteWhenQttCcCondIsEmptyDepot = (product) => {\n  if (canBuyBruteFromDepot(product)) {\n    product.quantityBrute -= 1;\n    reinitConditionnementDepot(product);\n  } else product.quantityBrute = 0;\n  return product;\n};\nexport const minusCondMLDepot = (product) => {\n  if (hasCondValDepot(product)) {\n    if (isBiggerThanLastQuantityCCDepot(product)) {\n      minusCondValWhenQttCcIsEmptyDepot(product);\n      reinitQuantityCCDepot(\n        product,\n        product.condmldepot -\n          getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCCDepot(product)\n      );\n    } else {\n      if (canBuyCCFromDepot(product)) product.quantityCC -= product.qttByCCDepot;\n      else product.quantityCC= 0;\n    }\n  } else {\n    if (canBuyBruteFromDepot(product)) {\n      minusQuantityBruteWhenQttCcIsEmptyDepot(product);\n      reinitQuantityCCDepot(\n        product,\n        product.condmldepot -\n          getRestQuantityCCWhenOrderIsBiggerThanLastQuantityCCDepot(product)\n      );\n      if (product.condvaldepot == 0) product.condvaldepot = product.condsizedepot - 1;\n    } else {\n      product.quantityCC -= product.qttByCCDepot;\n    }\n  }\n  return product;\n};\n\nexport const handlePhtyoSpecificDepot = (product) => {\n  minusCondMLDepot(product);\n  return product;\n};\nexport const handleMinusProductDepot = (product) => {\n  if (canBuyBruteFromDepot(product)) {\n    product.quantityBrute -= product.quantityParProductDepot;\n  } else if (cantBuyBruteFromDepot(product)) {\n    product.quantityBrute = 0;\n  }\n  return product;\n};\nexport const resetProductDataDepot = (product, cloneProduct) => {\n  Object.keys(cloneProduct).forEach(function (key) {\n    if (cloneProduct[key] == null || cloneProduct[key] == 0) {\n      cloneProduct[key] = product[key];\n    }\n  });\n};\n\nexport const handleSoldProductDepot = (product) => {\n  if (canBuyBruteFromDepot(product)) {\n    product.quantityBrute -= product.quantityParProductDepot;\n  } else if (cantBuyBruteFromDepot(product)) {\n    product.quantityBrute = 0;\n  }\n  return product;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\nimport { setQtyFromDepotItem } from \"../../store/fromdepot/actions/fromdepot\";\n\nconst EditFromDepotItemControl = ({\n  product,\n  index,\n  state,\n  setState,\n  setRealQttCC,\n  setRealQtt,\n  realQtt,\n  realQttCC,\n}) => {\n  const dispatch = useDispatch();\n\n  const updateObjectValue = (index, key, value) => {\n    let temp_state = [...state];\n    temp_state[index] = { ...temp_state[index], [key]: value };\n    setState(temp_state);\n  };\n  const onAddQtyBrute = (value) => {\n    updateObjectValue(index, \"quantityParProductDepot\", value);\n  };\n\n  const getValue = () => {\n    return isEnough() == true\n      ? product?.quantityBrute * 1 - 1\n      : product?.quantityBrute * 1;\n  };\n  const isEnough = () => {\n    return (\n      product.quantityCC - product.qttByCCDepot < 0 &&\n      product.quantityBrute - 1 - product.quantityParProductDepot * 1 < 0\n    );\n  };\n  return (\n    <div className=\"basket-item-control\">\n      <NumberInput\n        inputMode={\"numeric\"}\n        w={28}\n        disabled={product?.condmldepot != 0 && product?.qttccpventedepot != 0}\n        step={1}\n        bg={\"whitesmoke\"}\n        onChange={(value) => {\n          onAddQtyBrute(Number(value));\n          setRealQtt(Number(value));\n          if (isEnough()) {\n            alert(\"Le stock ne satisfait pas votre commande\");\n          }\n        }}\n        min={0}\n        defaultValue={product?.quantityParProductDepot}\n        max={getValue()}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n    </div>\n  );\n};\nexport default EditFromDepotItemControl;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FromDepotItemControl from \"./FromDepotItemControl\";\nimport FromDepotItemPartial from \"./FromDepotItemPartial\";\nimport { displayMoney, checkHasExistText } from \"../../utils/functions\";\nimport { ItaNewInputDose } from \"./ItaNewInputDose\";\nimport { PhytoConditionnementInput } from \"./PhytoConditionnementInput\";\nimport { SovaxInputDose } from \"./SovaxInputDose\";\nimport EditFromDepotItemControl from \"./EditFromDepotItemControl\";\nconst EditFromDepotItem = ({ state, index, setState, product }) => {\n  const [realQttCC, setRealQttCC] = useState(null);\n  const [realQtt, setRealQtt] = useState(null);\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center border   mb-2 p-2\">\n        <div style={{ width: \"45%\" }}>\n          <p className=\"text-blue\">{product.name}</p>\n          <span className=\"text-lowercase\">\n            <strong>\n              {product.quantityParProductDepot != 0 &&\n                displayMoney(product.prixVente)}\n              {product.quantityParProductDepot == 0 &&\n                product.prixParCC != 0 && (\n                  <>\n                    {product.prixqttccventedepot != null &&\n                    product.prixqttccventedepot != 0\n                      ? displayMoney(product.prixqttccventedepot)\n                      : displayMoney(product.prixParCC)}\n                  </>\n                )}\n              {product.quantityParProductDepot != 0 &&\n                \" x \" +\n                  product.quantityParProductDepot +\n                  \" \" +\n                  product.type}{\" \"}\n              {product.prixqttccventedepot == null &&\n                product.prixqttccventedepot == 0 && (\n                  <>\n                    {product.qttByCCDepot != 0 &&\n                      (product.quantityParProductDepot == 0 ? \" x \" : \"+\") +\n                        product.qttByCCDepot +\n                        \"ML\"}\n                  </>\n                )}\n            </strong>\n          </span>\n        </div>\n        <div className=\"text-inline text-center\">\n          <h5 className=\"mb-1\">{product.type}</h5>\n          <EditFromDepotItemControl\n            index={index}\n            state={state}\n            setState={setState}\n            product={product}\n            setRealQttCC={setRealQttCC}\n            setRealQtt={setRealQtt}\n            realQtt={realQtt}\n            realQttCC={realQttCC}\n          />\n        </div>\n       {/** {product.type === \"FLACON\" && (\n          <div className=\"text-inline text-center\">\n            <h5 className=\"mb-1\">{product.categoryId == 3 ? \"DOSE\" : \"ML\"}</h5>\n            {checkHasExistText(product.name, \"ita new\") && (\n              <ItaNewInputDose\n                product={product}\n                setRealQttCC={setRealQttCC}\n                setRealQtt={setRealQtt}\n                realQtt={realQtt}\n                realQttCC={realQttCC}\n              />\n            )}\n            {checkHasExistText(product.name, \"sovax\") && (\n              <SovaxInputDose\n                setRealQttCC={setRealQttCC}\n                setRealQtt={setRealQtt}\n                realQtt={realQtt}\n                realQttCC={realQttCC}\n                product={product}\n              />\n            )}\n            {product.condmldepot == 0 &&\n              product.qttccpventedepot == 0 &&\n              !checkHasExistText(product.name, \"sovax\") &&\n              !checkHasExistText(product.name, \"ita new\") && (\n                <FromDepotItemPartial\n                  setRealQttCC={setRealQttCC}\n                  setRealQtt={setRealQtt}\n                  realQtt={realQtt}\n                  realQttCC={realQttCC}\n                  product={product}\n                />\n              )}\n            {product.condmldepot !== 0 && product.qttccpventedepot !== 0 && (\n              <PhytoConditionnementInput product={product} />\n            )}\n          </div>\n        )} */}\n      </div>\n    </div>\n  );\n};\n\nexport default EditFromDepotItem;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FromDepotItem from \"./FromDepotItem\";\nimport { Card } from \"react-bootstrap\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport { displayMoney, checkHasExistText } from \"../../utils/functions\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  handleMinusProductDepot,\n  handlePhtyoSpecificDepot,\n  handleSoldQuantityCCDepot,\n} from \"../../store/functions/function-depot\";\nimport { clearFromDepot } from \"../../store/fromdepot/actions/fromdepot\";\nimport { SORTIE } from \"../../constants/routes\";\nimport EditFromDepotItem from \"./EditFromDepotItem\";\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n  const total = arr.reduce((acc, val) => acc + val, 0);\n  return total;\n};\nfunction copy(object) {\n  var output, value, key;\n  output = Array.isArray(object) ? [] : {};\n  for (key in object) {\n    value = object[key];\n    output[key] = typeof value === \"object\" ? copy(value) : value;\n  }\n  return output;\n}\nconst EditFromDepot = ({\n  state,\n  meta,\n  setState,\n  products,\n  commandes,\n  disabled,\n}) => {\n  const [type, setType] = useState(\"vente-depot\");\n  const [idFournisseur, setIdFournisseur] = useState(1);\n  const [vaccinateurId, setVaccinateurId] = useState(null);\n  const [emprunter, setEmprunter] = useState(null);\n  const history = useHistory();\n  const [realContent, setRealContent] = useState([]);\n\n  const { fromdepots } = useSelector((state) => ({\n    fromdepots: state.fromdepots,\n  }));\n  useEffect(() => {\n    setRealContent(commandes?.contenu);\n  }, [commandes]);\n  const dispatch = useDispatch();\n  const emprunters = useSelector(getData(\"emprunters\").value);\n  const vaccinateurs = useSelector(getData(\"vaccinateurs\").value);\n  //const meta = useSelector(getData(\"commandes\").meta);\n  //const commandes = useSelector(getData(\"commandes\").value);\n  const date = new Date();\n  const [dateCom, setDateCom] = useState(date);\n  useEffect(() => {\n    //  dispatch(action(\"commandes\").fetch());\n    dispatch(action(\"emprunters\").fetch());\n  }, []);\n  function inArray(value, values) {\n    for (var i = 0; i < values.length; i++) {\n      if (value === values[i]) return true;\n    }\n    return false;\n  }\n\n  function isInArray(value, array) {\n    return array.find((a) => value.id === a.id);\n  }\n  const getContenu = () => {\n    // console.log(missing);\n    const missing = copy(realContent).filter(\n      (e) => !state.find((a) => e.id === a.id)\n    );\n    /* missing.forEach((element) => {\n\n      action(\"products\").update({\n        id: element.id,\n        quantityBrute: element.quantityBrute - element.quantityParProduct,\n        quantityParProduct: 0,\n      });\n    });*/\n    const added = state.filter(\n      (e) => !copy(realContent).find((a) => e.id === a.id)\n    );\n\n    const exist = state.map((element) => {\n      let commandeLast = copy(realContent).find((p) => p.id === element.id);\n\n      if (commandeLast != null || commandeLast != undefined) {\n        // if(element.quantityParProduct){}\n        let qtt = 0;\n        if (\n          element.quantityParProductDepot * 1 >\n          commandeLast.quantityParProductDepot * 1\n        ) {\n          qtt =\n            element.quantityParProductDepot * 1 -\n            commandeLast.quantityParProductDepot * 1;\n          element.quantityBrute = commandeLast.quantityBrute - qtt;\n        }\n        if (\n          commandeLast.quantityParProductDepot * 1 >\n          element.quantityParProductDepot * 1\n        ) {\n          qtt =\n            commandeLast.quantityParProductDepot * 1 -\n            element.quantityParProductDepot * 1;\n          element.quantityBrute = commandeLast.quantityBrute + qtt;\n        }\n        if (\n          element.quantityParProductDepot * 1 ==\n          commandeLast.quantityParProductDepot * 1\n        ) {\n          element.quantityBrute = commandeLast.quantityBrute;\n        }\n        return element;\n      } else {\n        return null;\n      }\n    });\n    return {\n      exist: exist.filter((e) => e != null),\n      added,\n      missing,\n    };\n  };\n\n  const onCheckOut = () => {\n    const { exist, added, missing } = getContenu();\n    dispatch(\n      action(\"commandes\").updateTransaction(\n        {\n          id: commandes?.id,\n          contenu: state,\n          type: \"vente-depot\",\n          sorte: \"sortie\",\n          vaccinateurId: vaccinateurId,\n          status: type === \"direct\" ? true : false,\n          emprunterId: emprunter,\n          dateCom: dateCom != null ? dateCom : date,\n          exist: exist,\n          added: added,\n          missing: missing,\n        },\n        \"update-from-depot\"\n      )\n    );\n\n    history.push(SORTIE);\n  };\n\n  /* const onCheckOut = () => {\n    const { exist, added, missing } = getContenu();\n    console.log(\"state\", state.length);\n    console.log(\"realcont\", realContent.length);\n    console.log(\"exist\", JSON.stringify(exist));\n    console.log(\"added\", JSON.stringify(added));\n    console.log(\"missing\", JSON.stringify(missing));\n     fromdepots.forEach((element) => {\n      delete element.busy;\n      delete element.pendingCreate;\n      handleMinusProductDepot(element);\n      if (element.condmldepot != 0 && element.qttccpventedepot != 0) {\n        handlePhtyoSpecificDepot(element);\n      } else {\n        handleSoldQuantityCCDepot(element);\n      }\n      console.log(element);\n    });*/\n  //console.log(fromdepots);\n  /*  dispatch(\n      action(\"commandes\").create({\n        id: Math.floor(Date.now() / 1000),\n        contenu: state?.state,\n        type: \"vente-depot\",\n        sorte: \"sortie\",\n        qtteBrute: 1,\n        qtteCC: 1,\n        vaccinateurId: vaccinateurId,\n        status: type === \"direct\" ? true : false,\n        emprunterId: emprunter,\n        dateCom: dateCom != null ? dateCom : date,\n      })\n    );*/\n  /*if (!meta.error) {\n      state?.state?.forEach((element) => {\n        let idElement = element.id;\n        element.quantityParProductDepot = 0;\n        element.qttByCCDepot = 0;\n        element.qttyspecificmirrordepot = 0;\n        element.id = idElement;\n        dispatch(action(\"products\").update(element));\n      });\n    }\n    //dispatch(clearFromDepot());\n    //   history.push(SORTIE);\n  };*/\n\n  const onClearBasket = () => {\n    state?.forEach((element) => {\n      element.quantityParProductDepot = 0;\n      element.qttByCCDepot = 0;\n    });\n\n    dispatch(clearFromDepot());\n  };\n  return (\n    <>\n      <Card>\n        <Card.Header className=\" bg-dark py-2 text-white d-flex justify-content-between align-items-center\">\n          <div style={{ width: \"60%\" }}>BON DE SORTIE</div>\n          <div style={{ width: \"30%\" }} className=\"text-right\">\n            <select\n              disabled={disabled}\n              className=\"form-control input-sm\"\n              onChange={(e) => {\n                setType(e.target.value);\n              }}\n            >\n              <option value=\"vente-depot\">Comptant</option>\n              <option value=\"vente-depot-credit\">Credit</option>\n              <option value=\"vente-depot-vaccinateur\">Vaccinateur</option>\n            </select>\n          </div>\n        </Card.Header>\n        <div className=\"commande-vente\">\n          <Card.Body\n            style={{ padding: 12, marginTop: 3, marginRight: 2, marginLeft: 2 }}\n          >\n            <div\n              style={{\n                overflowY: \"auto\",\n                height: \"350px\",\n                maxHeight: \"350px\",\n                overflowX: \"hidden\",\n              }}\n            >\n              <div class=\"form-group\">\n                <label>Date de sortie :</label>\n                <div>\n                  <input\n                    disabled={disabled}\n                    type=\"date\"\n                    onChange={(e) => setDateCom(e.target.value)}\n                    value={dateCom}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              {type === \"vente-depot-credit\" && (\n                <>\n                  <label>Crediteur:</label>\n                  <select\n                    disabled={disabled}\n                    className=\"form-control\"\n                    onChange={(e) => {\n                      setEmprunter(e.target.value);\n                    }}\n                  >\n                    <option value=\"\"></option>\n                    {emprunters.map((v) => (\n                      <option value={v.id}>{v.name}</option>\n                    ))}\n                  </select>\n                </>\n              )}\n              {type === \"vente-depot-vaccinateur\" && (\n                <>\n                  <label>Vaccinateur:</label>\n                  <select\n                    className=\"form-control\"\n                    onChange={(e) => {\n                      setVaccinateurId(e.target.value);\n                    }}\n                  >\n                    <option>Selectionner un vaccinateur</option>\n                    {vaccinateurs.map((v) => (\n                      <option value={v.id}>{v.name}</option>\n                    ))}\n                  </select>\n                </>\n              )}\n              {state?.length <= 0 && (\n                <div className=\"alert alert-success \">\n                  Aucune enregistrement trouvé\n                </div>\n              )}\n              {state?.map((product, i) => (\n                <EditFromDepotItem\n                  key={`${product?.id}_${i}`}\n                  product={product}\n                  state={state}\n                  index={i}\n                  setState={setState}\n                  basket={fromdepots}\n                  dispatch={dispatch}\n                />\n              ))}\n            </div>\n          </Card.Body>\n\n          {state?.length > 0 && (\n            <Card.Footer className=\"d-flex align-items-center justify-content-between\">\n              <div style={{ width: \"30%\" }}>\n                <h2 className=\"p-2 text-uppercase bg-primary\">\n                  <strong data-test-id=\"total-price-orders\">\n                    Total:\n                    {displayMoney(\n                      calculateTotal(\n                        state?.map((product) => {\n                          return (\n                            product.prixVente * product.quantityParProductDepot\n                          );\n                        })\n                      ) +\n                        calculateTotal(\n                          state?.state?.map((product) => {\n                            return product.prixParCC * product.qttByCCDepot;\n                          })\n                        )\n                    )}\n                  </strong>\n                </h2>\n              </div>\n              <div style={{ width: \"70%\" }}>\n                {state?.length > 0 && (\n                  <div className=\"d-flex text-right align-items-end justify-content-end\">\n                    <button\n                      disabled={disabled}\n                      className=\"btn btn-green btn-sm mr-2\"\n                      disabled={state?.length === 0}\n                      onClick={onCheckOut}\n                      type=\"button\"\n                    >\n                      Valider l'operation\n                    </button>\n                    <button\n                      disabled={disabled}\n                      className=\"btn btn-danger btn-sm\"\n                      onClick={onClearBasket}\n                      type=\"button\"\n                    >\n                      <span>Annuler</span>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </Card.Footer>\n          )}\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default EditFromDepot;\n","import React, { useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useFromDepot from \"../../hooks/useFromDepot\";\nimport { displayMoney } from \"../../utils/functions\";\nconst EditProductItemDepot = ({ state, setState, product }) => {\n  const fromdepots = useSelector((state) => state.fromdepots);\n  const dispatch = useDispatch();\n\n  const itemOnBasket = !!state?.find((item) => item?.id === product.id);\n\n  const removeProduct = (id) => {\n    setState(state.filter((t) => t.id !== id));\n  };\n  const handleAddToBasket = () => {\n    setState(\n      state.some((p) => p.id === product.id) ? state : [product, ...state]\n    );\n  };\n\n  return (\n    <>\n      <ListGroup.Item\n        className=\"mb-2 mr-3\"\n        style={{ border: \"1px solid gray\" }}\n      >\n        <div className=\" d-flex justify-content-between align-items-center\">\n          <div\n            className={` ${!product.id ? \"product-loading\" : \"\"}`}\n            style={{\n              boxShadow:\n                product && itemOnBasket\n                  ? \"15px 10px 15px rgba(0, 0, 0, .07)\"\n                  : \"none\",\n            }}\n          >\n            <div>\n              {product.name}{\" \"}\n              <div class=\"badge badge-primary\">\n                {product?.fournisseur?.name}\n              </div>\n              <br />\n              {/**    <strong>\n              {product.type}:{product.quantityBruteCVA}\n\n             \n            </strong>\n            <br />\n            {product.type == \"FLACON\" && (\n              <>\n                <strong>ML: {product.quantityCCCVA} ml</strong>\n                <br />\n                \n              </>           disabled={ \n              product.quantityBruteCVA === 0 && (product.quantityCCCVA == 0 || product.quantityCCCVA == null) && product.condval==0\n            }\n            )}\n            <strong>CondML: {product.condml}- Condval:{product.condval}</strong> */}\n            </div>{\" \"}\n            <div>\n              {product?.id && (\n                <>\n                  {!itemOnBasket ? (\n                    <button\n                      disabled={\n                        product.quantityBrute === 0 &&\n                        (product.quantityCC == 0 || product.quantityCC == null)\n                      }\n                      className={\"btn btn-green btn-sm\"}\n                      onClick={handleAddToBasket}\n                    >\n                      Ajouter\n                    </button>\n                  ) : (\n                    <button\n                      disabled={\n                        product.quantityBrute === 0 &&\n                        (product.quantityCC == 0 || product.quantityCC == null)\n                      }\n                      className={\"btn btn-danger btn-sm\"}\n                      onClick={() => removeProduct(product?.id)}\n                    >\n                      Retirer\n                    </button>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </ListGroup.Item>\n    </>\n  );\n};\n\nexport default EditProductItemDepot;\n","import React, { useState } from \"react\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nimport Content from \"../../@adminlte/adminlte/Content/index\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Card } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport searchByNameAndFournisseur from \"../../filters/searchByNameAndFournisseur\";\nimport searchByName from \"../../filters/searchByName\";\nimport searchByFournisseur from \"../../filters/searchByFournisseur\";\nimport { GetAll,Data } from \"../../utils/context/data-context\";\nimport EditFromDepot from './EditFromDepot';\nimport EditFromDepotItem from './EditFromDepotItem';\nimport EditProductItemDepot from \"./edit-item\";\n\nconst EditSortie = () => {\n  \n  const { id } = useParams();\n  const [regenerate, setRegenerate] = useState(false);\n  const dispatch = useDispatch();\n  const commandes = useSelector(getData(\"commandes\").value);\n  const metacommandes = useSelector(getData(\"commandes\").meta);\n  const products = useSelector(getData(\"products\").value);\n  const metaproducts = useSelector(getData(\"products\").meta);\n  const [productData, setProductData] = useState([]);\n  React.useEffect(() => {\n    dispatch(action(\"commandes\").get(id));\n  }, [id]);\n  const [value, setValue] = useState(\"\");\n\n  const [state, setState] = useState([]);\n  React.useEffect(() => {\n    if (regenerate == true) {\n      dispatch(action(\"products\").fetch());\n      setRegenerate(false);\n    }\n    return () => {\n      setRegenerate(false);\n    };\n  }, [regenerate]);\n\n  const [identif, setIdentif] = useState();\n\n  React.useEffect(() => {\n    if (identif != null) {\n      setProductData(searchByNameAndFournisseur(products, value, identif));\n    } else {\n      setProductData(searchByName(products, value));\n    }\n  }, [value]);\n  React.useEffect(() => {\n    if (value != \"\") {\n      setProductData(searchByNameAndFournisseur(products, value, identif));\n    } else {\n      setProductData(searchByFournisseur(products, identif));\n    }\n  }, [identif]);\n\n  React.useEffect(() => {\n    dispatch(action(\"products\").fetch());\n  }, []);\n  React.useEffect(() => {\n    //recuperer la premiere ligne dans le tableau fournisseur\n    // dispatch(fetchProductsByFournisseur(identif));\n  }, [identif]);\n  React.useEffect(() => {\n    if (!metacommandes.isFetching) {\n      setState(commandes[0]?.contenu);\n    }\n  }, [metacommandes]);\n  React.useEffect(() => {\n    if (!metaproducts.isFetching) {\n      setProductData(products);\n    }\n  }, [metaproducts]);\n  const setValueOf = (val)=> {\n    setState(val)\n  }\n  return (\n    <Content>\n      <ContentHeader title=\"Editer un bon de commande\">\n        <ActiveLink title=\"Editer un bon de commande\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <Container>\n          <Row>\n            <Col xs={6}>\n              <ListGroup>\n                <Card>\n                  <Card.Header className=\"d-flex justify-content-between align-items-center bg-dark text-white\">\n                    Produits\n                  </Card.Header>\n                  <Card.Body>\n                  <input\n                      type=\"text\"\n                      onChange={(e) => {\n                        setValue(e.target.value);\n                      }}\n                      placeholder=\"Rechercher un produit\"\n                      className=\"form-control mb-2\"\n                    />\n                    <GetAll model=\"fournisseurs\">\n                      <Data>\n                        {({ data, meta }) => (\n                          <div className=\"my-2\">\n                            <select\n                              className=\"form-control\"\n                              selected={identif == 2}\n                              onChange={(e) => {\n                                setIdentif(e.target.value);\n                              }}\n                            >\n                              <option value=\"\">\n                                Selectionner un fournisseur\n                              </option>\n                              {data.map((d) => (\n                                <option value={d.id}>{d.name}</option>\n                              ))}\n                            </select>\n                          </div>\n                        )}\n                      </Data>\n                    </GetAll>\n                    <div\n                      style={{\n                        overflowY: \"auto\",\n                        height: \"350px\",\n                        maxHeight: \"350px\",\n                        overflowX: \"hidden\",\n                      }}\n                    >\n                      <>\n                        {productData.map((p) => (\n                          <EditProductItemDepot\n                          state={state}\n                          setState={setState}\n                          product={p}\n                        />\n                        ))}\n                        {productData.length == 0 && \"Aucune enregistrement trouvé\"}\n                      </>{\" \"}\n                    </div>\n                  </Card.Body>\n                </Card>\n              </ListGroup>\n            </Col>\n            <Col xs={6}>\n                <EditFromDepot\n                disabled={metaproducts.isFetching}\n                  state={state}\n                  meta={metacommandes}\n                  setState={setState}\n                  products={products}\n                  commandes={commandes[0]}\n                />\n            </Col>\n          </Row>\n        </Container>\n      </Page>\n    </Content>\n  );\n};\n\nexport default EditSortie;\n","import { useEffect } from 'react';\n\nconst useScrollTop = () => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n};\n\nexport default useScrollTop;\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { ROLE_VENDEUR } from \"../constants/roles\";\nimport { SIGNIN, SIGNUP } from \"../constants/routes\";\nimport AdminLTE from \"../@adminlte/AdminLTE\";\nimport useScrollTop from '../hooks/useScrollTop';\nconst PublicRoute = ({ isAuth, role, component: Component, path, ...rest }) => {\n  useScrollTop();\n  return (\n  <Route\n    {...rest}\n    // eslint-disable-next-line consistent-return\n    render={(props) => {\n      // eslint-disable-next-line react/prop-types\n      const { from } = props.location.state || { from: { pathname: \"/\" } };\n\n      /* if (isAuth && role === ROLE_ADMIN) {\n        return <Redirect to={ADMIN_DASHBOARD} />;\n      }\n      if(isAuth && role === ROLE_BOUTIK){\n        return <Redirect to={BOUTIK_DASHBOARD}/>\n      }*/\n\n      if (\n        isAuth &&\n        role === ROLE_VENDEUR &&\n        (path === SIGNIN || path === SIGNUP)\n      ) {\n        return <Redirect to={from} />;\n      }\n\n      return (\n        <div>\n          <AdminLTE title={\"CBV AMBALAVAO\"}>\n          <Component {...props} />\n          </AdminLTE>\n        </div>\n      );\n    }}\n  />\n)};\n\nPublicRoute.defaultProps = {\n  isAuth: false,\n  role: ROLE_VENDEUR,\n  path: \"/\",\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  isAuth: auth?.isLoggedIn,\n  role: auth?.user?.role || \"\",\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nconst AuthContext = React.createContext();\n\nfunction Auth({ children }) {\n  const { user, auth, isLoggedIn } = useSelector((state) => ({\n    user: state.auth?.user,\n    auth: state.auth,\n    isLoggedIn: state.auth?.isLoggedIn,\n  }));\n  const value = { user, auth, isLoggedIn };\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nfunction Data({ children }) {\n  return (\n    <AuthContext.Consumer>\n      {(context) => {\n        if (context === undefined) {\n          throw new Error(\"Data  must be used within a AuthContext\");\n        }\n        return children(context);\n      }}\n    </AuthContext.Consumer>\n  );\n}\nexport { Auth, Data };\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { login } from \"../../store/actions/user\";\nimport { Auth, Data } from \"../../context/auth-context\";\nimport Form from \"../../utils/form\";\nconst SignIn = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Auth>\n        <Data>\n          {({ auth, isLoggedIn }) => (\n            <>\n              {auth?.error != null && (\n                <div>\n                  {auth?.error.message}\n                </div>\n              )}\n              <h3>\n                Se connecter\n              </h3>\n              <div\n              >\n                {isLoggedIn && <Redirect to=\"/\" />}\n\n                <Form\n                  enableReinitialize\n                  initialValues={{\n                    username: \"\",\n                    password: \"\",\n                  }}\n                  validations={{}}\n                  onSubmit={(values, form) => {\n                    const { username, password } = values;\n                    dispatch(\n                      login({\n                        username: username,\n                        password: password,\n                      })\n                    );\n                    console.log(values);\n                  }}\n                >\n                  <Form.Element>\n                    <Form.Field.Input\n                      border=\"1px\"\n                      name=\"username\"\n                      label=\"Nom d'utilisateur\"\n                      placeholder={\"ex:Nom d'utilisateur\"}\n                      mb={3}\n                    />\n                    <Form.Field.Input\n                      name=\"password\"\n                      label=\"Mot de passe\"\n                      placeholder={\"Mot de passe\"}\n                      type={\"password\"}\n                    />\n                      <button\n                        type={\"submit\"}\n                        mt={4}\n                      >\n                        Se connecter\n                      </button>\n                    </Form.Element>\n                </Form>\n              </div>\n        \n            </>\n          )}\n        </Data>\n      </Auth>\n      <div mt={46} divShadow=\"md\"></div>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\nimport { useColorModeValue as mode } from \"@chakra-ui/system\";\nimport { useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { login, register } from \"../../store/actions/user\";\nimport { Auth, Data as DataAuth } from \"../../context/auth-context\";\nimport Form from \"../../utils/form\";\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <Auth>\n        <DataAuth>\n          {({ user, isLoggedIn }) => (\n            <>\n              {isLoggedIn && (\n                <Redirect\n                  to={{\n                    pathname: \"/\",\n                    state: {\n                      notification: {\n                        message: \"Vous vous  etes connecté avec succes\",\n                        type: \"success\",\n                      },\n                    },\n                  }}\n                />\n              )}\n              {user?.error != null && (\n                <div>\n                  {user?.error.message}\n                </div>\n              )}\n              <h3>\n                creer un compte\n              </h3>\n              <div\n                borderTop=\"4px\"\n                boxShadow=\"md\"\n                bg={\"white\"}\n                px={8}\n                py={3}\n                w={400}\n              >\n                {isLoggedIn && <Redirect to=\"/\" />}\n\n                <Form\n                  enableReinitialize\n                  initialValues={{\n                    username: \"\",\n                    password: \"\",\n                    role: \"ROLE_VENDEUR\",\n                  }}\n                  validations={{}}\n                  onSubmit={(values, form) => {\n                    const { username, password, role } = values;\n                 //   console.log(values);\n                  dispatch(\n                      register({\n                        username: username,\n                        password: password,\n                        role: role\n                      })\n                    );\n                  }}\n                >\n                  <Form.Element>\n                    <Form.Field.Input\n                      border=\"1px\"\n                      name=\"username\"\n                      label=\"Nom d'utilisateur\"\n                      placeholder={\"ex: Nom d'utilisateur\"}\n                      mb={3}\n                    />\n\n                    <Form.Field.Input\n                      name=\"password\"\n                      label=\"Mot de passe\"\n                      placeholder={\"Mot de passe\"}\n                      type={\"password\"}\n                    />\n                    <Form.Field.Select\n                      label=\"Role\"\n                      name=\"role\"\n                      valueKey={\"name\"}\n                      options={[\n                        {\n                          id: \"ROLE_VENDEUR\",\n                          name: \"VENDEUR\",\n                        },\n                        {\n                          id: \"ROLE_ADMIN\",\n                          name: \"ADMIN\",\n                        },\n                        {\n                          id: \"ROLE_SEMI_ADMIN\",\n                          name: \"ROLE_SEMI_ADMIN\",\n                        }\n                      ]}\n                    />\n                   \n                    <div>\n                      <button color={\"white\"} type={\"submit\"} mt={4}>\n                        Se connecter\n                      </button>\n                    </div>\n                  </Form.Element>\n                </Form>\n              </div>\n\n            </>\n          )}\n        </DataAuth>\n      </Auth>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import PropType from \"prop-types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { ROLE_ADMIN, ROLE_VENDEUR } from \"../constants/roles\";\nimport useScrollTop from \"../hooks/useScrollTop\";\nconst VendeurRoute = ({ isAuth, role, component: Component, ...rest }) => {\n  useScrollTop();\n  return (\n    <Route\n      {...rest}\n      component={(props) => (\n        <>\n          <div className=\"\">\n            <div>\n              <Component {...props} />\n            </div>\n          </div>\n        </>\n      )}\n    />\n  );\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  isAuth: auth?.isLoggedIn,\n  role: auth?.user?.role || \"\",\n});\n\nVendeurRoute.defaultProps = {\n  isAuth: false,\n  role: ROLE_VENDEUR,\n};\n\nVendeurRoute.propTypes = {\n  isAuth: PropType.bool,\n  role: PropType.string,\n  component: PropType.func.isRequired,\n  rest: PropType.any,\n};\n\nexport default connect(mapStateToProps)(VendeurRoute);\n","export const SET_TO_MAGASIN_ITEMS = 'SET_TO_MAGASIN_ITEMS';\nexport const ADD_TO_MAGASIN = 'ADD_TO_MAGASIN';\nexport const REMOVE_FROM_MAGASIN = 'REMOVE_FROM_MAGASIN';\nexport const CLEAR_MAGASIN = 'CLEAR_MAGASIN';\nexport const ADD_QTY_MAGASIN_ITEM = 'ADD_QTY_MAGASIN_ITEM';\nexport const MINUS_QTY_MAGASIN_ITEM = 'MINUS_QTY_MAGASIN_ITEM';\nexport const ADD_NUMBER_QTY_ITEM ='ADD_NUMBER_QTY_ITEM';\nexport const ADD_QTY_NUMBER_MAGASIN_ITEM=\"ADD_QTY_NUMBER_MAGASIN_ITEM\";","import {\n  ADD_QTY_MAGASIN_ITEM,\n  ADD_QTY_NUMBER_MAGASIN_ITEM,\n  ADD_TO_MAGASIN,\n  CLEAR_MAGASIN,\n  MINUS_QTY_MAGASIN_ITEM,\n  REMOVE_FROM_MAGASIN,\n  SET_TO_MAGASIN_ITEMS,\n\n} from \"../constants\";\n\nexport const setToMagasinItems = (items = []) => ({\n  type: SET_TO_MAGASIN_ITEMS,\n  payload: items,\n});\n\nexport const addToMagasin = (product) => ({\n  type: ADD_TO_MAGASIN,\n  payload: product,\n});\n\nexport const removeFromMagasin = (id) => ({\n  type: REMOVE_FROM_MAGASIN,\n  payload: id,\n});\n\nexport const clearMagasin = () => ({\n  type: CLEAR_MAGASIN,\n});\n\nexport const addQtyMagasinItem = (id) => ({\n  type: ADD_QTY_MAGASIN_ITEM,\n  payload: { id: id },\n});\n\nexport const minusQtyMagasinItem = (id) => ({\n  type: MINUS_QTY_MAGASIN_ITEM,\n  payload: { id: id },\n});\nexport const setQtyMagasinItem =(id,value)=>({\n  type : ADD_QTY_NUMBER_MAGASIN_ITEM,\n  payload:{\n    id:id,\n    value:value\n  }\n}) ","import {\n  addToMagasin as dispatchAddToMagasin,\n  removeFromMagasin,\n} from \"../store/tomagasin/actions/tomagasin\";\nconst useDepotToMagasin = (tomagasin, dispatch) => {\n  const isItemOnDepotToMagasin = (id) =>\n    !!tomagasin?.find((item) => item?.id === id);\n  const addToMagasin = (product) => {\n    if (isItemOnDepotToMagasin(product.id)) {\n      dispatch(removeFromMagasin(product.id));\n    } else {\n      dispatch(dispatchAddToMagasin(product));\n    }\n  };\n  return { tomagasin, isItemOnDepotToMagasin, addToMagasin };\n};\n\nexport default useDepotToMagasin;\n","import React from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useDepotToMagasin from \"../../../../hooks/useDepotToMagasin\";\nconst ProductItem = ({ product }) => {\n  const tomagasin = useSelector((state) => state.tomagasins);\n  const dispatch = useDispatch();\n  const { isItemOnDepotToMagasin, addToMagasin } = useDepotToMagasin(\n    tomagasin,\n    dispatch\n  );\n  const onClickItem = () => {\n    if (!product) return;\n\n    if (product.id) {\n      //  history.push(`/product/${product.id}`)\n    }\n  };\n\n  const itemOnBasket = isItemOnDepotToMagasin\n    ? isItemOnDepotToMagasin(product.id)\n    : false;\n\n  const handleAddToBasket = () => {\n    if (addToMagasin) addToMagasin(product);\n  };\n\n  return (\n    <>\n      <ListGroup.Item>\n        <Row\n          className={`product-card m-2 ${!product.id ? \"product-loading\" : \"\"}`}\n          style={{\n            border: product && itemOnBasket ? \"1px solid #a6a5a5\" : \"\",\n            paddingTop:product && itemOnBasket ? \"5px\":\"0px\",\n            boxShadow:\n              product && itemOnBasket\n                ? \"0 10px 15px rgba(0, 0, 0, .07)\"\n                : \"none\",\n          }}\n        >\n          <Col xs={9}>\n            <div>{product.name}{\" \"}</div>\n            <div class=\"badge badge-primary\">{product?.fournisseur?.name}</div>\n       \n          </Col>\n          <Col xs={3}>\n            {product.id && (\n              <button\n                disabled={product.quantityBrute <= 0}\n                className={` ${\n                  itemOnBasket\n                    ? \"btn btn-danger btn-sm\"\n                    : \"btn btn-green btn-sm\"\n                }`}\n                onClick={handleAddToBasket}\n              >\n                {!itemOnBasket ? \"Ajouter\" : \"Retirer\"}\n              </button>\n            )}\n           \n          </Col>\n        </Row>\n      </ListGroup.Item>\n    </>\n  );\n};\n\nexport default ProductItem;\n","import {\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n} from \"@chakra-ui/number-input\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  addQtyMagasinItem,\n  minusQtyMagasinItem,\n  setQtyMagasinItem,\n} from \"../../../../store/tomagasin/actions/tomagasin\";\nconst ToMagItemControl = ({ product }) => {\n  const dispatch = useDispatch();\n  const onAddQtyBrute = (value) => {\n    dispatch(setQtyMagasinItem(product.id, value));\n  };\n  return (\n    <div className=\"basket-item-control\">\n      <NumberInput\n        w={28}\n        bg={\"whitesmoke\"}\n        onChange={(value) => {\n          onAddQtyBrute(value);\n        }}\n        min={0}\n        defaultValue={product.quantityParProduct}\n        step={1}\n        max={product.quantityBrute}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n    </div>\n  );\n};\nexport default ToMagItemControl;\n","import React from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport useDepotToMagasin from \"../../../../hooks/useDepotToMagasin\";\nimport { displayMoney } from \"../../../../utils/functions\";\nimport ToMagItemControl from './ToMagItemControl';\nconst ToMagItem = ({ product }) => {\n  const dispatch = useDispatch();\n  const onRemoveFromBasket = () =>{\n     //dispatch(removeFromBasket(product.id))\n    };\n    const tomagasin = useSelector((state) => state.tomagasins);\n    const { isItemOnDepotToMagasin, addToMagasin } = useDepotToMagasin(\n      tomagasin,\n      dispatch\n    );\n    const itemOnBasket = isItemOnDepotToMagasin\n      ? isItemOnDepotToMagasin(product.id)\n      : false;\n  \n    const handleAddToBasket = () => {\n      if (addToMagasin) addToMagasin(product);\n    };\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center border   mb-2 p-2\">\n        <div style={{ width: \"45%\" }}>\n          <p>\n            {product.name}\n          </p>\n          <span><strong> {displayMoney(product.prixVente)}</strong></span>\n        </div>\n        <div className=\"text-inline\">\n          <small>{ product.type} </small>\n\n          <ToMagItemControl product={product} />\n        </div>\n        <div>\n        {itemOnBasket && (\n          <button\n            onClick={handleAddToBasket}\n            className=\"btn btn-danger btn-xs text-right\"\n          >\n            X\n          </button>\n        )}\n      </div>\n      {/**  <div>\n          <small>CC </small>\n          <BasketItemPartial product={product} />\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default ToMagItem;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport ToMagItem from \"./ToMagItem\";\n//import { NumberFormat } from 'react-number-format';\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport { MgToMl } from \"../../../../hooks/convertisseur\";\nimport { clearMagasin } from \"../../../../store/tomagasin/actions/tomagasin\";\nimport { displayMoney } from \"../../../../utils/functions\";\n\nimport { HISTORIQUESORTIECVA } from \"../../../../constants/routes\";\nimport {\n  canBuyBrute,\n  handleSoldProduct,\n} from \"../../../../store/functions/function\";\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n  const total = arr.reduce((acc, val) => acc + val, 0);\n  return total;\n};\nconst ToMag = () => {\n  const { tomagasins } = useSelector((state) => ({\n    tomagasins: state.tomagasins,\n  }));\n\n  const date = new Date();\n  const [dateCom, setDateCom] = useState(date);\n  const history = useHistory();\n  const meta = useSelector(getData(\"commandes\").meta);\n  const metaSortieDepot = useSelector(getData(\"sortiedepots\").meta);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(clearMagasin());\n    dispatch(action(\"commandes\").fetch());\n    dispatch(action(\"sortiedepots\").fetch());\n  }, []);\n  const day = date.getDate();\n  const monthIndex = date.getMonth();\n  const year = date.getFullYear();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const second = date.getSeconds();\n\n  const validerCommande = () => {\n    dispatch(\n      action(\"commandes\").createTransaction(\n        {\n          id: Number(meta.nextId),\n          contenu: tomagasins,\n          type: \"cva\",\n          sorte: \"sortie\",\n          refSortie: `CVA_${meta.nextId}_${day}_${monthIndex}_${year}_${hours}_${minutes}_${second}`,\n          status: true,\n          dateCom: dateCom != null ? dateCom : date,\n        },\n        \"add-to-magasin\"\n      )\n    );\n{/*\n    tomagasins.forEach((element) => {\n      if (canBuyBrute(element)) {\n        handleSoldProduct(element, element.quantityParProduct);\n        element.quantityBruteCVA += Number(element.quantityParProduct);\n        element.quantityParProduct = 0;\n      } else {\n        element.quantityParProduct = 0;\n      }\n      {\n        /**   element.quantityBrute -=  Number(element.quantityParProduct);\n      element.quantityBruteCVA += Number(element.quantityParProduct);\n      //  element.refSortie=`CVA_${meta.nextId}_${day}_${monthIndex}_${year}_${hours}_${minutes}_${second}`;\n      \n      dispatch(\n        action(\"sortiedepots\").create({\n          id: Number(metaSortieDepot.nextId),\n          productId: element.id,\n          status: false, //true: le quantite commandé à expirer il faut passer au suivants\n          refSortie: `CVA_${meta.nextId}_${day}_${monthIndex}_${year}_${hours}_${minutes}_${second}`,\n          quantiteSortie: element.quantityParProduct,\n        })\n      );\n      if (element.quantityBruteCVA !== 0) {\n        element.quantityParProduct = 1;\n      }\n      }\n    dispatch(action(\"products\").update(element));\n    });*/}\n\n    dispatch(clearMagasin());\n    //console.log(basket);\n    history.push(HISTORIQUESORTIECVA);\n  };\n\n  const annulerCommande = () => {\n    if (tomagasins.length !== 0) {\n      dispatch(clearMagasin());\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Header className=\"bg-dark text-white d-flex justify-content-between align-items-center\">\n          <div>\n            Depot to Magasin (\n            {` ${tomagasins.length} ${\n              tomagasins.length > 1 ? \"articles\" : \"article\"\n            }`}\n            )\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <div class=\"form-group\">\n            <label>Date de sortie :</label>\n            <div>\n              <input\n                type=\"date\"\n                onChange={(e) => setDateCom(e.target.value)}\n                value={dateCom}\n                className=\"form-control\"\n              />\n            </div>\n          </div>\n          {tomagasins.length <= 0 && (\n            <div class=\"alert alert-success \">\n              Choississez un produit sur la section \"Produits\" puis cliquez sur\n              \"Ajouter\"\n            </div>\n          )}\n          {tomagasins?.map((product, i) => (\n            <ToMagItem\n              key={`${product?.id}_${i}`}\n              product={product}\n              tomagasin={tomagasins}\n              dispatch={dispatch}\n            />\n          ))}\n          {tomagasins.length > 0 && (\n            <div className=\"d-flex justify-content-end\">\n              <button\n                className=\"btn btn-green btn-sm mr-2\"\n                disabled={tomagasins.length === 0}\n                onClick={validerCommande}\n                type=\"button\"\n              >\n                Valider l'operation\n              </button>\n              <button\n                className=\"btn btn-danger btn-sm\"\n                onClick={annulerCommande}\n                type=\"button\"\n              >\n                <span>Annuler</span>\n              </button>\n            </div>\n          )}\n        </Card.Body>\n        {tomagasins.length > 0 && (\n          <Card.Footer className=\"d-flex justify-content-between\">\n            <div>\n              <h3 style={{ fontSize: \"14px\" }}>\n                <strong>Total : </strong>\n                {displayMoney(\n                  calculateTotal(\n                    tomagasins.map(\n                      (product) =>\n                        product.prixVente * product.quantityParProduct\n                    )\n                  )\n                )}\n              </h3>\n            </div>\n          </Card.Footer>\n        )}\n      </Card>\n    </>\n  );\n};\n\nexport default ToMag;\n","import React, { useEffect, useState } from \"react\";\nimport ProductItem from \"./item\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, ListGroup, Card } from \"react-bootstrap\";\nimport ToMag from \"./ToMag\";\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport searchByName from \"../../../../filters/searchByName\";\n\nconst Products = () => {\n  const [productData, setProductData] = useState([]);\n  const [regenerate, setRegenerate] = useState(false);\n  const products = useSelector(getData(\"products\").value);\n  const meta = useSelector(getData(\"products\").meta);\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  useEffect(() => {\n    dispatch(action(\"products\").fetch());\n  }, []);\n  useEffect(() => {\n    if (!meta.isFetching) {\n      setProductData(products);\n    }\n  }, [meta]);\n  useEffect(() => {\n    setProductData(searchByName(products, value));\n  }, [value]);\n  return (\n    <Container>\n      <Row>\n        \n        <Col xs={6}>\n          <Card>\n            <Card.Header className=\"bg-dark p-2 text-white d-flex text-uppercase justify-content-between align-items-center\">\n              Produits\n            </Card.Header>\n            <Card.Body>\n              <ListGroup>\n                <input\n                  type=\"text\"\n                  onChange={(e) => {\n                    setValue(e.target.value);\n                  }}\n                  placeholder=\"Nom du produit\"\n                  className=\"form-control mb-2\"\n                />\n                <div\n                  style={{\n                    overflowY: \"auto\",\n                    height: \"350px\",\n                    maxHeight: \"350px\",\n                    overflowX: \"hidden\",\n                  }}\n                >\n                  {productData.map((p) => {\n                    return <ProductItem product={p} />;\n                  })}\n\n                  {products.length === 0 && \"Aucune enregistrement trouvé\"}\n                </div>\n              </ListGroup>{\" \"}\n            </Card.Body>{\" \"}\n          </Card>\n        </Col>\n        <Col xs={6}>\n          <ToMag />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Products;\n","import React from \"react\";\nimport Content from \"../../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport Products from '../../composants/admin/tomagasin/product';\n\nexport const AdminDashboard = () => {\n  return (\n    <>\n      <Content>\n        <ContentHeader title=\"Depot vers magasin\">\n          <ActiveLink title=\"Depot vers magasin\"></ActiveLink>\n        </ContentHeader>\n        <Page>\n        <Products />\n          {/**   <GetAll model={\"products\"}>\n            <Data>{({ data, meta }) => <>{JSON.stringify(data)}</>}</Data>\n          </GetAll> */}\n        </Page>\n      </Content>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { action } from '../../../../utils/lib/call';\nfunction DeleteToMagasin({ model, entity }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const deleteEntity = () => {\n    dispatch(action(model).deleteTransaction(entity, \"/delete-to-magasin\"));\n    history.goBack();\n  };\n  return (\n    <>\n      <button\n        className=\"btn btn-danger btn-sm\"\n        onClick={(e) => {\n          e.preventDefault();\n          if (window.confirm(`Vous voulez vraiment supprimer le produit ?`)) {\n            deleteEntity();\n          }\n        }}\n      >\n        Supprimer\n      </button>\n    </>\n  );\n}\n\nexport default DeleteToMagasin;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Content from \"../../../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../../@adminlte/adminlte/Content/Page\";\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { getCVA } from \"../../../../store/actions/commandes\";\nimport { displayDate, displayMoney } from \"../../../../utils/functions\";\nimport { Link } from \"react-router-dom\";\nimport DeleteToMagasin from \"./DeleteToMagasin\";\nimport moment from 'moment';\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker/dist/DateRangePicker\";\nimport DataTable from \"../../../../utils/admin/DataTable\";\n\nexport const HistoriqueSortieCva = () => {\n  var start = moment().isoWeekday(1).startOf(\"week\");\n  var end = moment().endOf(\"week\");\n  const [deb, setDeb] = useState(start);\n  const [fin, setFin] = useState(end);\n\n  const [dateRange, onChangeDateRange] = useState([start, end]);\n  const refDateDeb = useRef(null);\n  const refDateFin = useRef(null);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const meta = useSelector(getData(\"commandes\").meta);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCVA(deb, fin));\n  }, [deb, fin]);\n  \n  useEffect(() => {\n    if (dateRange !== null) {\n      if (dateRange[0]) {\n        setDeb(dateRange[0]);\n      }\n      if (dateRange[1]) {\n        setFin(dateRange[1]);\n      }\n    } else {\n      setDeb(start);\n      setFin(end);\n    }\n  }, [dateRange]);\n  const calculateTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.prixVente * el.quantityParProduct*1;\n    });\n    return total;\n  }; \n  const quantiteBruteTotal = (arr) => {\n    let total = 0;\n    arr?.forEach((el) => {\n      total += el.quantityParProduct*1;\n    });\n    return total;\n  };\n  const quantiteCCTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.quantityCC;\n    });\n    return total;\n  }; \n\n  const columns = [\n      {\n        Header: \"Date de commande\",\n        Cell: (data) => {\n          return <>{displayDate(data.row.original?.dateCom)}</>;\n        },\n      },\n      {\n        Header: \"Produits\",\n        Cell: (data) => {\n          return (\n            <div style={{width:\"100px\"}}>\n              {data.row.original?.contenu?.map((d) => (\n                <span>\n                  {d.name}\n                  {\",\"}\n                </span>\n              ))}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Quantité\",\n        Cell: (data) => {\n          return <div>{quantiteBruteTotal(data.row.original?.contenu)}</div>;\n        },\n      },\n      {\n        Header: \"Total\",\n        Cell: (data) => {\n          return (\n            <div>\n              {displayMoney(calculateTotal(data.row.original?.contenu))}\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Actions\",\n        Cell: (data) => {\n          return (\n            <>\n              <Link\n                to={`/depot/to/magasin/detail/${data.row.original?.id}`}\n                className=\"btn btn-green btn-sm mr-2\"\n              >\n                Détails\n              </Link>\n              <Link\n                to={`/depot/to/magasin/edit/${data.row.original?.id}`}\n                className=\"btn btn-warning btn-sm mr-2\"\n              >\n                Editer\n              </Link>\n              <DeleteToMagasin model=\"tomagasins\" entity={data.row.original} />\n            </>\n          );\n        },\n      },\n    ];\n\n\n  return (\n    <Content>\n      <ContentHeader title=\"Historique sortie vers Magasin\">\n        <ActiveLink title=\"Historique sortie vers Magasin\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n      <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div>\n              <h3 className=\"text-uppercase\">Historique de sortie vers Magasin</h3>\n              <p>{`${displayDate(deb)} ->  ${displayDate(fin)}`}</p>\n            </div>\n          </div>\n          <div className=\"col-lg-6 text-right\">\n            <DateRangePicker\n              locale=\"fr-FR\"\n              onChange={onChangeDateRange}\n              value={dateRange}\n            />\n          </div>{\" \"}\n          \n        </div>\n        <DataTable\n        filter={false}\n          data={commandes.sort((low, high) => high.id - low.id)}\n          meta={meta}\n          columns={columns}\n          //  addUrl={NOUVELLEFACTURE}\n          //  urlName={\"Ajouter un facture\"}\n        />\n      </Page>{\" \"}\n    </Content>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { action } from \"../../../../utils/lib/call\";\nfunction DeleteFromMagasin({ model, entity }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const deleteEntity = () => {\n    dispatch(action(model).deleteTransaction(entity, \"/delete-from-magasin\"));\n    history.goBack();\n  };\n  return (\n    <>\n      <button\n        className=\"btn btn-danger btn-sm\"\n        onClick={(e) => {\n          e.preventDefault();\n          if (window.confirm(`Vous voulez vraiment supprimer ce commande ?`)) {\n            deleteEntity();\n          }\n        }}\n      >\n        Supprimer\n      </button>\n    </>\n  );\n}\n\nexport default DeleteFromMagasin;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ActiveLink from \"../../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../../@adminlte/adminlte/Content/Page\";\nimport { useSelector } from \"react-redux\";\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport { useDispatch } from \"react-redux\";\nimport { getCommandeCVA } from \"../../../../store/actions/commandes\";\nimport { displayDate, displayMoney } from \"../../../../utils/functions\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport { VENDEUR } from \"../../../../constants/routes\";\nimport DeleteFromMagasin from \"./DeleteFromMagasin\";\nimport moment from \"moment\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker/dist/DateRangePicker\";\nimport DataTable from \"../../../../utils/admin/DataTable\";\n\nexport const HistoriqueVenteVendeur = () => {\n  var start = moment().isoWeekday(1).startOf(\"week\");\n  var end = moment().endOf(\"week\");\n  const [deb, setDeb] = useState(start);\n  const [fin, setFin] = useState(end);\n\n  const [dateRange, onChangeDateRange] = useState([start, end]);\n  const refDateDeb = useRef(null);\n  const refDateFin = useRef(null);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const meta = useSelector(getData(\"commandes\").meta);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCommandeCVA(deb, fin));\n  }, [deb, fin]);\n  useEffect(() => {\n    if (dateRange !== null) {\n      if (dateRange[0]) {\n        setDeb(dateRange[0]);\n      }\n      if (dateRange[1]) {\n        setFin(dateRange[1]);\n      }\n    } else {\n      setDeb(start);\n      setFin(end);\n    }\n  }, [dateRange]);\n  const calculateTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    const total = arr.reduce((acc, val) => acc + val, 0);\n    return total;\n  };\n\n  const totalDevente = (arr) => {\n    return (\n      calculateTotal(\n        arr.map((product) => {\n          return product.prixVente * product.quantityParProduct;\n        })\n      ) +\n      calculateTotal(\n        arr.map((product) => {\n          return product.prixParCC * product.qttByCC;\n        })\n      )\n    );\n  };\n  const recetteDuJour = (arr) => {\n    let total = 0;\n    arr.map((c) => {\n      total += totalDevente(c?.contenu);\n    });\n    return total;\n  };\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Date de commande\",\n        Cell: (data) => {\n          return <>{displayDate(data.row.original?.dateCom)}</>;\n        },\n      },\n      {\n        Header: \"Total\",\n        Cell: (data) => {\n          return (\n            <div>{displayMoney(totalDevente(data.row.original?.contenu))}</div>\n          );\n        },\n      },\n      {\n        Header: \"Actions\",\n        Cell: (data) => {\n          return (\n            <>\n              <Link\n                to={`/detailvendeur/${data.row.original?.id}`}\n                className=\"btn btn-green btn-sm mr-2\"\n              >\n                Détails\n              </Link>\n              <Link\n                to={`/vendeur-commande/${data.row.original?.id}`}\n                className=\"btn btn-warning btn-sm mr-2\"\n              >\n                Editer\n              </Link>\n              <DeleteFromMagasin model=\"fromagasins\" entity={data.row.original} />\n            </>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <>\n      <div>\n        <div className=\"bg-dark text-white p-3 d-flex justify-content-center align-items-center\">\n          <h1 className=\"\">CABINET VETERINAIRE AMBALAVAO</h1>\n        </div>\n        <div className=\"p-3\">\n          <div class=\"d-flex justify-content-end\">\n            <Link class=\"btn btn-primary my-3\" to={VENDEUR}>\n              Revenir en arriere\n            </Link>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <div>\n                <h3 className=\"text-uppercase\">Historique de vente</h3>\n                <p>{`${displayDate(deb)} ->  ${displayDate(fin)}`}</p>\n                <div\n                  className=\"bg-thead p-3 my-2\"\n                  style={{\n                    width: \"30%\",\n                  }}\n                >\n                  <h2>Recette: {displayMoney(recetteDuJour(commandes))}</h2>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6 text-right\">\n              <DateRangePicker\n                locale=\"fr-FR\"\n                onChange={onChangeDateRange}\n                value={dateRange}\n              />\n            </div>{\" \"}\n          </div>\n          <DataTable\n            data={commandes.sort((low, high) => high.id - low.id)}\n            meta={meta}\n            columns={columns}\n            //  addUrl={NOUVELLEFACTURE}\n            //  urlName={\"Ajouter un facture\"}\n          />\n        </div>{\" \"}\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Content from \"../../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport { CREATEPRODUCT, EDITPRODUCT } from \"../../../constants/routes\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport NumberFormat from \"react-number-format\";\nimport ReactToPrint from \"react-to-print\";\nimport $ from \"jquery\";\nimport { displayMoney } from \"../../../utils/functions\";\nimport DataTable from \"../../../utils/admin/DataTable\";\n//initialize datatable\n/*   $(document).ready(function () {\n      $('table').DataTable();\n  });*/\nexport const EtatStockMagasin = () => {\n  const products = useSelector(getData(\"products\").value);\n  const meta = useSelector(getData(\"products\").meta);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(action(\"products\").fetch());\n  }, []);\n\n  const columns = React.useMemo(() => [\n    {\n      Header: \"Nom de l'article\",\n      accessor: \"name\",\n    },\n    {\n      Header: \"Quantité\",\n      accessor: \"quantityBruteCVA\",\n    },\n    {\n      Header: \"Reste en ML\",\n      accessor: \"quantityCC\",\n      Cell: (data) => {\n        return (\n          <div>\n            {data.row.original?.quantityCCCVA == null\n              ? 0\n              : data.row.original?.quantityCCCVA}\n          </div>\n        );\n      },\n    },\n  ]);\n\n  return (\n    <Content>\n      <ContentHeader title=\"Etat de stock du Magasin\">\n        <ActiveLink title=\"Etat de stock du Magasin\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n      <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div>\n              <h3 className=\"text-uppercase\">Etat de stock du Magasin</h3>\n            </div>\n          </div>\n          <div className=\"col-lg-6 text-right\">\n           \n          </div>{\" \"}\n        </div>\n        <DataTable\n          data={products.sort(\n            (low, high) => high.quantityBruteCVA - low.quantityBruteCVA\n          )}\n          meta={meta}\n          columns={columns}\n        />\n      </Page>\n    </Content>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport { getCommandeCVA } from \"../../../store/actions/commandes\";\nimport { displayDate, displayMoney } from \"../../../utils/functions\";\nimport Content from \"../../../@adminlte/adminlte/Content/index\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\nimport moment from \"moment\";\nimport DataTable from '../../../utils/admin/DataTable';\n\nexport const MagasinVente = () => {\n  var start = moment().isoWeekday(1).startOf(\"week\");\n  var end = moment().endOf(\"week\");\n  const [deb, setDeb] = useState(start);\n  const [fin, setFin] = useState(end);\n  const refDateDeb = useRef(null);\n  const refDateFin = useRef(null);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const meta = useSelector(getData(\"commandes\").meta);\n  const [dateRange, onChangeDateRange] = useState([start, end]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCommandeCVA(deb, fin));\n  }, [deb, fin]);\n  useEffect(() => {\n    if (dateRange !== null) {\n      if (dateRange[0]) {\n        setDeb(dateRange[0]);\n      }\n      if (dateRange[1]) {\n        setFin(dateRange[1]);\n      }\n    } else {\n      setDeb(start);\n      setFin(end);\n    }\n  }, [dateRange]);\n  const calculateTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.prixVente * 1;\n    });\n    return total;\n  };\n  const quantiteBruteTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.quantityParProduct * 1;\n    });\n    return total;\n  };\n  const quantiteCCTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    let total = 0;\n    arr.forEach((el) => {\n      total += el.qttByCC * 1;\n    });\n    return total;\n  };\n  const getDataProduct = () => {\n    dispatch(getCommandeCVA(deb, fin));\n  };\n  \n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Date\",\n        Cell: (data) => {\n          return (\n            <>\n              <span >\n                {displayDate(data.row.original?.dateCom)}\n              </span>\n            </>\n          );\n        },\n      },\n      {\n        Header: \"Quantité\",\n        Cell: (data) => {\n          return (\n            <>\n              <span>\n                {quantiteBruteTotal(data.row.original?.contenu)}\n              </span>\n            </>\n          );\n        },\n        \n      },\n      {\n        Header: \"Quantité en ML\",\n        Cell: (data) => {\n          return (\n            <>\n              <span className=\"badge badge-primary\">\n              {quantiteCCTotal(data.row.original?.contenu)}\n              </span>\n            </>\n          );\n        },\n      },\n      {\n        Header: \"Total\",\n        Cell: (data) => {\n          return <div>{displayMoney(calculateTotal(data.row.original?.contenu))}</div>;\n        },\n      },{\n        Header: \"Actions\",\n        Cell: (data) => {\n          return (\n            <Link\n              className=\"btn btn-sm  btn-green\"\n              to={`/magasin/detail/vente/${data.row.original?.id}`}\n            >\n            Détails\n            </Link>\n            \n          );\n        },\n      },\n    ],\n    []\n  );\n  return (\n    <>\n      <Content>\n        <ContentHeader title=\"Historique de vente du magasin\">\n          <ActiveLink title=\"Historique de vente du magasin\"></ActiveLink>\n        </ContentHeader>\n        <Page>\n          <div className=\"row my-2\">\n            <div className=\"col-lg-8\">\n              <div>\n                {deb && fin && (\n                  <>\n                    <h2>Historique de vente du magasin</h2>\n                    <span>\n                      Du: {displayDate(deb)} Au {displayDate(fin)}\n                    </span>\n                  </>\n                )}{\" \"}\n              </div>\n            </div>\n            <div className=\"col-lg-4 text-right\">\n              <div>\n                <DateRangePicker\n                  locale=\"fr-FR\"\n                  onChange={onChangeDateRange}\n                  value={dateRange}\n                />\n              </div>\n            </div>\n          </div>\n          <DataTable\n          filter={false}\n            data={commandes}\n            meta={meta}\n            columns={columns}\n          />\n        </Page>\n      </Content>\n    </>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect, useParams } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport NumberFormat from \"react-number-format\";\nimport { withRouter } from \"react-router-dom\";\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport Page from \"../../../../@adminlte/adminlte/Content/Page\";\nimport ContentHeader from \"../../../../@adminlte/adminlte/Content/ContentHeader\";\nimport ActiveLink from \"../../../../@adminlte/adminlte/Content/ActiveLink\";\nimport Content from \"../../../../@adminlte/adminlte/Content/index\";\nimport { displayDate, displayMoney } from \"../../../../utils/functions\";\nimport { HISTORIQUEVENTEVENDEUR } from \"../../../../constants/routes\";\n\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n  const total = arr.reduce((acc, val) => acc + val, 0);\n  return total;\n};\n\nfunction Detail(props) {\n  let history = useLocation();\n  const { id } = useParams();\n  const commande = useSelector(getData(\"commandes\").value);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(action(\"commandes\").get(id));\n  }, [id]);\n  return (\n    <div>\n      <div className=\"bg-dark text-white p-3 d-flex justify-content-center align-items-center\">\n        <h1 className=\"\">CABINET VETERINAIRE AMBALAVAO</h1>\n      </div>\n      <div className=\"p-3\">\n        <div class=\"d-flex justify-content-start\">\n          <Link class=\"btn btn-primary btn-sm \" to={HISTORIQUEVENTEVENDEUR}>\n            Revenir en arriere\n          </Link>\n        </div>\n        <div>\n          <p>{commande[0]?.type == \"credit-cva\" && <p>Credit</p>}</p>\n          {commande[0]?.type == \"credit-cva\" && (\n            <div className=\"border\">\n              <>\n                <h3>{commande[0]?.emprunter.name}</h3>\n                <h5>{commande[0]?.emprunter.contact}</h5>\n              </>\n            </div>\n          )}\n          {commande.length > 0 && (\n            <div className=\"d-flex justify-content-between\">\n              <div className=\"my-2\">\n                <h2 className=\"my-2\">\n                  Date : {displayDate(commande[0]?.dateCom)}\n                </h2>\n                <Link\n                  to={`/vendeur-commande/${commande[0]?.id}`}\n                  className=\"btn btn-warning btn-sm mr-2\"\n                >\n                  Editer le commande\n                </Link>\n              </div>\n\n              <div className=\"d-flex justify-content-end\">\n                <div className=\"bg-thead p-1 mb-1\">\n                  <strong>Recette:</strong>:\n                  <h3 className=\"text-lg\">\n                    {displayMoney(\n                      calculateTotal(\n                        commande[0]?.contenu.map((product) => {\n                          return product.prixVente * product.quantityParProduct;\n                        })\n                      ) +\n                        calculateTotal(\n                          commande[0]?.contenu.map((product) => {\n                            return product.prixParCC * product.qttByCC;\n                          })\n                        )\n                    )}\n                  </h3>\n                </div>\n              </div>\n            </div>\n          )}\n          <table className=\"table table-bordered\">\n            <tr className=\"bg-thead\">\n              <td>Nom de l'article</td>\n              <td>Quantité</td>\n              <td>Sous total</td>\n            </tr>\n            {commande.length > 0 &&\n              commande[0]?.contenu.map((c) => (\n                <tr>\n                  <td style={{ width: \"40%\" }}>{c.name}</td>\n                  <>\n                    {c.quantityParProduct != 0 && (\n                      <div className=\"d-flex align-items-center py-0\">\n                        <strong>{c.type}:</strong>\n                        {displayMoney(c.prixVente)} ({\"x\"}{\" \"}\n                        {c.quantityParProduct}) {\" = \"}\n                        {displayMoney(c.prixVente * c.quantityParProduct)}\n                      </div>\n                    )}\n                  </>\n\n                  {c.type == \"FLACON\" && (\n                    <>\n                      {c.qttByCC != 0 && (\n                        <div className=\"d-flex align-items-center  py-0\">\n                          <strong>ML:</strong> {displayMoney(c.prixParCC)} {\"x\"}{\" \"}\n                          {c.qttyspecificmirror != 0\n                            ? c.qttyspecificmirror + \" Dose\"\n                            : c.qttByCC + \" Ml\"}{\" \"}\n                          {\" = \"} {displayMoney(c.prixParCC * c.qttByCC)}\n                        </div>\n                      )}\n                    </>\n                  )}\n                  <td>\n                    {displayMoney(\n                      c.prixVente * c.quantityParProduct +\n                        c.prixParCC * c.qttByCC\n                    )}\n                  </td>\n                </tr>\n              ))}\n          </table>\n        </div>{\" \"}\n      </div>{\" \"}\n    </div>\n  );\n}\n\nexport default withRouter(Detail);\n","import React from \"react\";\nimport { MdDashboard, MdSettings } from \"react-icons/md\";\nimport { BiCategory, BiCircle, BiListUl } from \"react-icons/bi\";\nimport {\n  NavItem,\n  CollapseMenuItem,\n} from \"../../utils/admin/Navigation/NavItem\";\nimport {\n  CREATEPRODUCT,\n  ENTREE,\n  PERIME,\n  PRODUCTS,\n  RUPTURE,\n  SORTIE,\n  CREDIT,\n  CREDITVACCINATEUR,\n  PRODUCTBYCATEGORY,\n  PRODUCTBYFOURNISSEUR,\n  DIRECT,\n  BONDESORTIE,\n  PARAMETRES,\n  NOUVELLEFACTURE,\n  LISTAPPROV,\n  DEPOTOMAGASIN,\n  ADMIN,\n  HISTORIQUESORTIECVA,\n  ETATSTOCKMAGASIN,\n  HISTORIQUEVENTEVENDEURVUEPARADMIN,\n} from \"../../constants/routes\";\nfunction SideBarMenu() {\n  return (\n    <>\n      <NavItem icon={MdDashboard} to={\"/\"}>\n        Journal de sortie\n      </NavItem>\n      <CollapseMenuItem\n        ckey={1}\n        title=\"Approvisionnement\"\n        icon={BiCategory}\n        links={[\n          {\n            title: \"Nouvelle facture\",\n            path: NOUVELLEFACTURE,\n          },\n          {\n            title: \"Historique d'approvisionnement\",\n            path: LISTAPPROV,\n          },\n          \n        ]}\n      />\n      <CollapseMenuItem\n        ckey={2}\n        title=\"Produits\"\n        icon={BiListUl}\n        links={[\n          {\n            title: \"Tous les produits\",\n            path: PRODUCTS,\n          },\n          {\n            title: \"Ajouter un produit\",\n            path: CREATEPRODUCT,\n          },\n          \n        ]}\n      />\n      <CollapseMenuItem\n        ckey={3}\n        title=\"Dépot\"\n        icon={BiListUl}\n        links={[\n          {\n            title: \"Historique de sortie\",\n            path: SORTIE,\n          },\n          {\n            title: \"Credit\",\n            path: CREDIT,\n          },\n          {\n            title: \"Vaccinateur\",\n            path: CREDITVACCINATEUR,\n          },\n          {\n            title: \"Bon de sortie\",\n            path: BONDESORTIE,\n          }\n          \n        ]}\n      />\n      <CollapseMenuItem\n        ckey={4}\n        title=\"Magasin\"\n        icon={BiListUl}\n        links={[\n          {\n            title: \"Depot vers Magasin\",\n            path: ADMIN,\n          },\n          {\n            title: \"Historique de sortie Dépôt vers Magasin\",\n            path: HISTORIQUESORTIECVA,\n          },\n          {\n            title: \"Etat de stock magasin\",\n            path: ETATSTOCKMAGASIN,\n          },\n          {\n            title: \"Historique de vente du magasin\",\n            path: HISTORIQUEVENTEVENDEURVUEPARADMIN,\n          }\n          \n        ]}\n      />\n      <CollapseMenuItem\n        ckey={4}\n        title=\"Etat des articles\"\n        icon={BiListUl}\n        links={[\n          {\n            title: \"Article perimés\",\n            path: PERIME,\n          },\n          {\n            title: \"Articles en rupture de stock\",\n            path: RUPTURE,\n          }\n        ]}\n      />\n      <NavItem icon={MdSettings} to={PARAMETRES}>\n      Parametres\n      </NavItem>\n\n    </>\n  );\n}\n\nexport default SideBarMenu;\n","import PropType from \"prop-types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport ChakraAdmin from \"../utils/admin/ChakraAdmin\";\nimport { ROLE_ADMIN, ROLE_VENDEUR } from \"../constants/roles\";\nimport SideBarMenu from \"../components/admin/SideBarMenu\";\nimport AdminLTE from \"../@adminlte/AdminLTE\";\nimport useScrollTop from \"../hooks/useScrollTop\";\nconst AdminRoute = ({ isAuth, role, component: Component, ...rest }) => {\n  useScrollTop();\n  return (\n  <Route\n    {...rest}\n    component={(props) =>\n        <>\n          <AdminLTE title={\"CBV AMBALAVAO\"}>\n            <Component {...props} />\n          </AdminLTE>\n        </>\n    }\n  />)\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  isAuth: auth?.isLoggedIn,\n  role: auth?.user?.role || \"\",\n});\n\nAdminRoute.defaultProps = {\n  isAuth: false,\n  role: ROLE_VENDEUR,\n};\n\nAdminRoute.propTypes = {\n  isAuth: PropType.bool,\n  role: PropType.string,\n  component: PropType.func.isRequired,\n  rest: PropType.any,\n};\n\nexport default connect(mapStateToProps)(AdminRoute);\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  addQtyApprovItem,\n  minusQtyApprovItem,\n  setQtyApprovItem,\n} from \"../../../store/approvis/actions/approvis\";\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\nconst ApprovisionnementEditItemControl = ({\n  product,\n  index,\n  state,\n  setState,\n}) => {\n  const dispatch = useDispatch();\n  const updateObjectValue = (index, key, value) => {\n    let temp_state = [...state];\n    temp_state[index] = { ...temp_state[index], [key]: value };\n    setState(temp_state);\n  };\n  const onAddQty = () => {\n    //dispatch(addQtyApprovItem(product.id));\n  };\n  const onAddQtyBrute = (value) => {\n    // dispatch(setQtyApprovItem(product.id, value));\n    updateObjectValue(index, \"quantityParProduct\", value);\n  };\n\n  const onMinusQty = () => {\n    //  if ((product.quantityBrute >= product.quantityParProduct) && product.quantityParProduct !== 0) {\n    dispatch(minusQtyApprovItem(product.id));\n    // }\n  };\n\n  return (\n    <div className=\"basket-item-control\">\n      <NumberInput\n        w={28}\n        bg={\"whitesmoke\"}\n        onChange={(value) => {\n          onAddQtyBrute(Number(value));\n        }}\n        min={0}\n        defaultValue={product.quantityParProduct}\n        step={1}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n      {/**    <button\n        className=\"btn btn-dark btn-sm\"\n        onClick={onAddQty}\n        type=\"button\"\n      >\n        +\n      </button>\n      <div className=\"mr-2 ml-1 d-flex\">\n      <span>{product.quantityParProduct}</span>\n      </div>\n      <button\n        className=\"btn btn-dark btn-sm\"\n        disabled={product.quantityParProduct === 0}\n        onClick={onMinusQty}\n        type=\"button\"\n      >\n        -\n      </button>*/}\n    </div>\n  );\n};\nexport default ApprovisionnementEditItemControl;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport NumberFormat from \"react-number-format\";\nimport { useDispatch } from \"react-redux\";\nimport { displayMoney } from \"../../../utils/functions\";\nimport ApprovisionnementEditItemControl from \"./ApprovisionnementEditItemControl\";\nconst ApprovisionnementEditItem = ({\n  product,\n  index,\n  isItemOnApprov,\n  addToApprov,\n  state,\n  setState,\n}) => {\n  const dispatch = useDispatch();\n  const handleAddToApprov = () => {\n    if (addToApprov) addToApprov(product);\n  };\n  const removeProduct = (id) => {\n    setState(state.filter((t) => t.id !== id));\n  };\n  const itemOnApprov = isItemOnApprov ? isItemOnApprov(product.id) : false;\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-start border   mb-2 p-2\">\n        <div style={{ width: \"65%\" }}>\n          <table border=\"1\">\n            <tr>\n              <td>Nom de l'article : </td>\n              <td>{product?.name}</td>\n            </tr>\n            <tr>\n              <td>Prix unitaire:</td>\n              <td>{displayMoney(product.prixFournisseur)}</td>\n            </tr>\n            <tr>\n              <td>Montant HT:</td>\n              <td>\n                {displayMoney(\n                  product.prixFournisseur * product.quantityParProduct\n                )}\n              </td>\n            </tr>\n          </table>\n        </div>\n\n        <div className=\"d-flex mt-3\">\n          <ApprovisionnementEditItemControl\n            product={product}\n            index={index}\n            state={state}\n            setState={setState}\n          />\n        </div>\n        <div>\n            <button\n              onClick={() => removeProduct(product?.id)}\n              className=\"btn btn-danger btn-xs text-right\"\n            >\n              X\n            </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ApprovisionnementEditItem;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { NumberToLetter } from \"convertir-nombre-lettre\";\n//import useModal from '../../hooks/useModal';\nimport { Card } from \"react-bootstrap\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport NumberFormat from \"react-number-format\";\nimport {\n  clearApprov,\n  setApprovItems,\n} from \"../../../store/approvis/actions/approvis\";\nimport ApprovisionnementEditItem from \"./ApprovisionnementEditItem\";\nimport { omit } from \"../../../utils/functions\";\nimport { LISTAPPROV } from \"../../../constants/routes\";\nimport { handleSoldProduct } from \"../../../store/functions/function\";\nimport useApprov from \"../../../hooks/useApprov\";\nimport { arrayMissing } from \"../../../utils/array\";\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n\n  const total = arr.reduce((acc, val) => acc + val, 0);\n\n  return total;\n};\nconst remiseEnAriary = (arr, remise) => {\n  return (calculateTotal(arr) * remise) / 100;\n};\n\nconst calculeTotalAvecRemise = (arr, remise) => {\n  return calculateTotal(arr) - remiseEnAriary(arr, remise);\n};\n\nconst EditApprovisionnement = ({ state, meta, setState, approv, disabled }) => {\n  const [remise, setRemise] = useState(approv?.remise);\n  const [dateEcheance, setDateEcheance] = useState(approv?.dateEcheance);\n  const [dateApprovis, setDateApprovis] = useState(approv?.dateApprov);\n  const [realContent, setRealContent] = useState(approv?.contenu);\n  const [remarque, setRemarque] = useState(approv?.remarque);\n  const [is, setIs] = useState(\"\");\n  const [typePaye, setTypePaye] = useState(approv?.typePaye);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const updateQtt = (is, element, last, qtt) => {\n    let obj = { ...element };\n    return qtt;\n  };\n  function copy(object) {\n    var output, value, key;\n    output = Array.isArray(object) ? [] : {};\n    for (key in object) {\n      value = object[key];\n      output[key] = typeof value === \"object\" ? copy(value) : value;\n    }\n    return output;\n  }\n\n  function inArray(value, values) {\n    for (var i = 0; i < values.length; i++) {\n      if (value === values[i]) return true;\n    }\n    return false;\n  }\n\n  function isInArray(value, array) {\n    return array.find((a) => value.id === a.id);\n  }\n\n  const getContenu = () => {\n    // console.log(missing);\n    const missing = copy(realContent).filter(\n      (e) => !state.find((a) => e.id === a.id)\n    );\n    /* missing.forEach((element) => {\n\n      action(\"products\").update({\n        id: element.id,\n        quantityBrute: element.quantityBrute - element.quantityParProduct,\n        quantityParProduct: 0,\n      });\n    });*/\n    const added = state.filter(\n      (e) => !copy(realContent).find((a) => e.id === a.id)\n    );\n\n    const exist = state.map((element) => {\n      let commandeLast = copy(realContent).find((p) => p.id === element.id);\n\n      if (commandeLast != null || commandeLast != undefined) {\n        // if(element.quantityParProduct){}\n        let qtt = 0;\n        if (\n          element.quantityParProduct * 1 >\n          commandeLast.quantityParProduct * 1\n        ) {\n          qtt =\n            element.quantityParProduct * 1 -\n            commandeLast.quantityParProduct * 1;\n          element.quantityBrute = commandeLast.quantityBrute + qtt;\n        }\n        if (\n          commandeLast.quantityParProduct * 1 >\n          element.quantityParProduct * 1\n        ) {\n          qtt =\n            commandeLast.quantityParProduct * 1 -\n            element.quantityParProduct * 1;\n          element.quantityBrute = commandeLast.quantityBrute - qtt;\n        }\n        if (\n          element.quantityParProduct * 1 ==\n          commandeLast.quantityParProduct * 1\n        ) {\n          element.quantityBrute = commandeLast.quantityBrute;\n        }\n        return element;\n      }\n    });\n    return {\n      exist: exist.filter((e) => e != null),\n      added,\n      missing,\n    };\n  };\n\n  const onCheckOut = () => {\n    const { exist, added, missing } = getContenu();\n\n    dispatch(\n      action(\"approvis\").updateTransaction(\n        {\n          id: approv?.id,\n          contenu: state,\n          totalht: calculateTotal(\n            state.map(\n              (product) => product.prixFournisseur * product.quantityParProduct\n            )\n          ),\n          remise: remise,\n          total: calculeTotalAvecRemise(\n            state.map(\n              (product) => product.prixFournisseur * product.quantityParProduct\n            ),\n            remise\n          ),\n          dateApprov: dateApprovis,\n          dateEcheance: dateEcheance,\n          remarque: remarque,\n          typePaye: typePaye,\n          exist: exist,\n          missing: missing,\n          added: added,\n        },\n        \"update-facture\"\n      )\n    );\n    history.push(LISTAPPROV);\n  };\n\n  const onClearApprov = () => {\n    console.log(\"hiii\");\n  };\n  return (\n    <>\n      {\" \"}\n      {/**  <button onClick={() => setState(approv?.contenu)}>Annuler</button>\n      {state?.map((s, index) => (\n        <>\n          <p>{s.name}</p>\n          <p>{s.prixVente * s.quantityParProduct}</p>\n\n          <p>{s.quantityParProduct}</p>\n          <button\n            onClick={() => updateObjectValue(index, \"quantityParProduct\", 1)}\n          >\n           Editer\n          </button>\n          <button onClick={() => removeProduct(s.id)}>Delete</button>\n        </>\n      ))}\n */}\n      <Card>\n        <Card.Header className=\"d-flex justify-content-between align-items-center bg-dark text-white\">\n          <div>\n            Approvisionenement (\n            {` ${state?.length} ${state?.length > 1 ? \"articles\" : \"article\"}`})\n          </div>\n        </Card.Header>\n        <Card.Body\n          style={{\n            height: \"500px\",\n            maxHeight: \"500px\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\",\n          }}\n        >\n          <div class=\"form-group\">\n            <label>Date de l'approvisionnement :</label>\n            <div>\n              <input\n                type=\"date\"\n                disabled={disabled}\n                onChange={(e) => setDateApprovis(e.target.value)}\n                value={dateApprovis}\n                className=\"form-control\"\n              />\n            </div>\n          </div>\n          {!meta.isFetching && state?.length <= 0 && (\n            <>\n              {\" \"}\n              <div class=\"alert alert-success \">\n                Aucune enregistrement trouvé !!!\n              </div>\n            </>\n          )}\n          {!meta.isFetching && state?.length <= 0 && (\n            <div className=\"d-flex justify-content-end\">\n              <button\n                className=\"btn btn-danger btn-sm\"\n                onClick={() => setState(approv?.contenu)}\n                type=\"button\"\n              >\n                <span>Annuler</span>\n              </button>\n            </div>\n          )}\n          {meta.isFetching && <p>Chargement en cours ...</p>}\n          {state?.map((product, i) => (\n            <ApprovisionnementEditItem\n              key={`${product?.id}_${i}`}\n              product={product}\n              state={state}\n              index={i}\n              setState={setState}\n              dispatch={dispatch}\n            />\n          ))}\n          {state?.length > 0 && (\n            <>\n              <div className=\"d-flex justify-content-end align-items-center my-3 \">\n                <table>\n                  <tr>\n                    <td>REMISE :</td>\n                    <td>\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        placeholder=\"Remise\"\n                        min={0}\n                        disabled={disabled}\n                        value={remise}\n                        max={100}\n                        onChange={(e) => {\n                          setRemise(e.target.value);\n                        }}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>PAIEMENT LE :</td>\n                    <td>\n                      <input\n                        type=\"date\"\n                        disabled={disabled}\n                        onChange={(e) => setDateEcheance(e.target.value)}\n                        value={dateEcheance}\n                        className=\"form-control\"\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>TYPE DE PAIEMENT:</td>\n                    <td>\n                      <select\n                        className=\"form-control\"\n                        onChange={(e) => {\n                          setTypePaye(e.target.value);\n                        }}\n                      >\n                        <option value=\"espece\" selected>\n                          ESPECE\n                        </option>\n                        <option value=\"boa\">CHEQUE - BOA</option>\n                        <option value=\"bni\">CHEQUE - BNI</option>\n                        <option value=\"MVola\">VIREMENT - MVola</option>\n                        <option value=\"OrangeMoney\">\n                          VIREMENT - ORANGE MONEY\n                        </option>\n                      </select>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>REMARQUE :</td>\n                    <td>\n                      <textarea\n                        disabled={disabled}\n                        className=\"form-control\"\n                        onChange={(e) => {\n                          setRemarque(e.target.value);\n                        }}\n                        placeholder=\"Ecriver ici quelque chose d'autre à savoir sur l'approvisionnement\"\n                      >\n                        {remarque}\n                      </textarea>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n              <div className=\"d-flex flex-column  my-3 \">\n                {\" \"}\n                <p className=\"approvisionnement-total-amount\">\n                  Total HT:\n                  <strong>\n                    <NumberFormat\n                      value={calculateTotal(\n                        state?.map(\n                          (product) =>\n                            product.prixFournisseur * product.quantityParProduct\n                        )\n                      )}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      suffix={\"Ar\"}\n                      renderText={(value, props) => (\n                        <div {...props}>{value}</div>\n                      )}\n                    />\n                  </strong>\n                </p>\n                <p className=\"approvisionnement-total-amount\">\n                  Remise:\n                  <strong>\n                    <NumberFormat\n                      value={remiseEnAriary(\n                        state?.map(\n                          (product) =>\n                            product.prixFournisseur * product.quantityParProduct\n                        ),\n                        remise\n                      )}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      suffix={\"Ar\"}\n                      renderText={(value, props) => (\n                        <div {...props}>{value}</div>\n                      )}\n                    />\n                  </strong>\n                </p>\n                <p className=\"approvisionnement-total-amount\">\n                  Total avec remise :\n                  <strong>\n                    <NumberFormat\n                      value={calculeTotalAvecRemise(\n                        state?.map(\n                          (product) =>\n                            product.prixFournisseur * product.quantityParProduct\n                        ),\n                        remise\n                      )}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      suffix={\"Ar\"}\n                      renderText={(value, props) => (\n                        <div {...props}>{value}</div>\n                      )}\n                    />\n                  </strong>\n                </p>\n                <p>Arrêté à la somme de </p>\n                <p className=\"text-uppercase\">\n                  <strong>\n                    {NumberToLetter(\n                      calculeTotalAvecRemise(\n                        state?.map(\n                          (product) =>\n                            product.prixFournisseur * product.quantityParProduct\n                        ),\n                        remise\n                      )\n                    )}{\" \"}\n                    ARIARY\n                  </strong>\n                </p>\n              </div>\n            </>\n          )}\n        </Card.Body>\n        <Card.Footer>\n          <div className=\"d-flex justify-content-end\">\n            <button\n              disabled={disabled}\n              className=\"btn btn-green btn-sm mr-2\"\n              onClick={onCheckOut}\n              type=\"button\"\n            >\n              Valider l'operation\n            </button>\n            <button\n              disabled={disabled}\n              className=\"btn btn-danger btn-sm\"\n              onClick={() => setState(approv?.contenu)}\n              type=\"button\"\n            >\n              <span>Annuler</span>\n            </button>\n          </div>\n        </Card.Footer>\n      </Card>\n    </>\n  );\n};\n\nexport default EditApprovisionnement;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDomEvent } from \"framer-motion\";\nimport React from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useApprov from \"../../../hooks/useApprov\";\nimport { displayMoney } from \"../../../utils/functions\";\nconst ProductItemEditApprov = ({ product, state, setState }) => {\n  const approvisionnements = useSelector((state) => state.approvisionnements);\n  const dispatch = useDispatch();\n\n  const itemOnApprov = !!state?.find((item) => item?.id === product.id);\n  const handleAddToApprov = () => {\n    setState(\n      state.some((p) => p.id === product.id) ? state : [product, ...state]\n    );\n  };\n  const removeProduct = (id) => {\n    setState(state.filter((t) => t.id !== id));\n  };\n  return (\n    <>\n      <ListGroup.Item>\n        <Row\n          className={`product-card m-2 ${!product.id ? \"product-loading\" : \"\"}`}\n          style={{\n            border: product && itemOnApprov ? \"1px solid #a6a5a5\" : \"\",\n            boxShadow:\n              product && itemOnApprov\n                ? \"0 10px 15px rgba(0, 0, 0, .07)\"\n                : \"none\",\n          }}\n        >\n          <Col xs={9}>\n            <>\n              <p>{product?.name}</p>\n              <div class=\"badge badge-primary\">\n                {product?.fournisseur?.name}\n              </div>\n              <p>\n                <strong> {displayMoney(product?.prixFournisseur)}</strong>\n              </p>\n            </>\n          </Col>\n\n          <Col xs={3}>\n            {product?.id && (\n              <>\n                {!itemOnApprov ? (\n                  <button\n                    className={\"btn btn-green btn-sm\"}\n                    onClick={handleAddToApprov}\n                  >\n                    Ajouter\n                  </button>\n                ) : (\n                  <button\n                    className={\"btn btn-danger btn-sm\"}\n                    onClick={()=>removeProduct(product?.id)}\n                  >\n                    Retirer\n                  </button>\n                )}\n              </>\n            )}\n          </Col>\n        </Row>\n      </ListGroup.Item>\n    </>\n  );\n};\n\nexport default ProductItemEditApprov;\n","import React, { useState, useEffect } from \"react\";\nimport { GetOne, Data, GetAll } from \"../../../utils/context/data-context\";\nimport Content from \"../../../@adminlte/adminlte/Content\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { action, getData } from \"../../../utils/lib/call\";\nimport { useParams } from \"react-router-dom\";\nimport EditApprovisionnement from \"./EditApprovisionnement\";\nimport { Container, Row, Col, ListGroup, Card } from \"react-bootstrap\";\nimport { fetchProductsByFournisseur } from \"../../../store/actions/products\";\nimport ProductItemEditApprov from \"./ProductItemEditApprov\";\nimport searchByNameAndFournisseur from \"../../../filters/searchByNameAndFournisseur\";\nimport searchByName from \"../../../filters/searchByName\";\nimport searchByFournisseur from \"../../../filters/searchByFournisseur\";\nimport { fetchProductsById } from \"../../../store/actions/approv\";\n\nexport const EditerApprov = () => {\n  const { id } = useParams();\n  const [regenerate, setRegenerate] = useState(false);\n  const dispatchz = useDispatch();\n  const approv = useSelector(getData(\"approvis\").value);\n  const meta = useSelector(getData(\"approvis\").meta);\n  const products = useSelector(state => state.products.items);\n  const metaproducts = useSelector(getData(\"products\").meta);\n  const [productData, setProductData] = useState([]);\n  React.useEffect(() => {\n    dispatch(action(\"products\").get(id));\n  }, []);\n  const [value, setValue] = useState(\"\");\n\n  const [state, setState] = useState([]);\n  useEffect(() => {\n    if (regenerate == true) {\n      dispatch(action(\"products\").fetch());\n      setRegenerate(false);\n    }\n    return () => {\n      setRegenerate(false);\n    };\n  }, [regenerate]);\n\n  const [identif, setIdentif] = useState();\n\n  useEffect(() => {\n    if (identif != null) {\n      setProductData(searchByNameAndFournisseur(products, value, identif));\n    } else {\n      setProductData(searchByName(products, value));\n    }\n  }, [value]);\n  useEffect(() => {\n    if (value != \"\") {\n      setProductData(searchByNameAndFournisseur(products, value, identif));\n    } else {\n      setProductData(searchByFournisseur(products, identif));\n    }\n  }, [identif]);\n\n  useEffect(() => {\n    dispatch(action(\"products\").fetch());\n  }, []);\n  React.useEffect(() => {\n    if (meta.isFetching) {\n      setState(approv[approv.length - 1]?.contenu);\n    }\n  }, [meta]);\n  useEffect(() => {\n    if (!metaproducts.isFetching) {\n      setProductData(products);\n    }\n  }, [metaproducts]);\n  console.log(approv);\n  return (\n    <Content>\n      <ContentHeader title=\"Edition de facture\">\n        <ActiveLink title=\"Edition de facture\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <Container>\n          <Row>\n            <Col xs={5}>\n              <ListGroup>\n                <Card>\n                  <Card.Header className=\"d-flex justify-content-between align-items-center bg-dark text-white\">\n                    Produits\n                  </Card.Header>\n                  <Card.Body>\n                    <input\n                      type=\"text\"\n                      onChange={(e) => {\n                        setValue(e.target.value);\n                      }}\n                      placeholder=\"Rechercher un produit\"\n                      className=\"form-control mb-2\"\n                    />\n                    <GetAll model=\"fournisseurs\">\n                      <Data>\n                        {({ data, meta }) => (\n                          <div className=\"my-2\">\n                            <select\n                              className=\"form-control\"\n                              selected={identif == 2}\n                              onChange={(e) => {\n                                setIdentif(e.target.value);\n                              }}\n                            >\n                              <option value=\"\">\n                                Selectionner un fournisseur\n                              </option>\n                              {data.map((d) => (\n                                <option value={d.id}>{d.name}</option>\n                              ))}\n                            </select>\n                          </div>\n                        )}\n                      </Data>\n                    </GetAll>\n                    <div\n                      style={{\n                        overflowY: \"auto\",\n                        height: \"350px\",\n                        maxHeight: \"350px\",\n                        overflowX: \"hidden\",\n                      }}\n                    >\n                      <>\n                        {productData.map((p) => (\n                          <ProductItemEditApprov\n                            state={state}\n                            setState={setState}\n                            product={p}\n                          />\n                        ))}\n                        {productData.length == 0 &&\n                          \"Aucune enregistrement trouvé\"}\n                      </>{\" \"}\n                    </div>\n                  </Card.Body>\n                </Card>\n              </ListGroup>\n            </Col>\n            <Col xs={7}>\n                <EditApprovisionnement\n                  disabled={metaproducts.isFetching}\n                  state={state}\n                  meta={meta}\n                  setState={setState}\n                  products={products}\n                  approv={approv[approv.length - 1]}\n                />\n            </Col>\n          </Row>\n        </Container>\n      </Page>\n    </Content>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useFromDepot from \"../../hooks/useFromDepot\";\nimport { displayMoney } from \"../../utils/functions\";\nconst ProductItem = ({ key, product }) => {\n  const fromdepots = useSelector((state) => state.fromdepots);\n  const dispatch = useDispatch();\n  const { isItemFromDepot, addFromDepot } = useFromDepot(fromdepots, dispatch);\n\n  const itemOnBasket = isItemFromDepot ? isItemFromDepot(product.id) : false;\n  useEffect(() => {\n    if (!itemOnBasket) {\n      product.qttByCC = 0;\n      product.quantityParProduct = 0;\n    }\n  }, [itemOnBasket]);\n  const handleAddToBasket = () => {\n    if (addFromDepot) addFromDepot(product);\n  };\n  return (\n    <>\n      <ListGroup.Item key={key} style={{\n        width:\"100%\"\n      }}>\n        <Row\n          className={` ${!product.id ? \"product-loading\" : \"\"}`}\n          style={{\n            boxShadow:\n              product && itemOnBasket\n                ? \"15px 10px 15px rgba(0, 0, 0, .07)\"\n                : \"none\",\n          }}\n        >\n          <Col xs={9}>\n            <>\n              <p>{product?.name}</p>\n              <div class=\"badge badge-primary\">\n                {product?.fournisseur?.name}\n              </div>\n            </>\n          </Col>\n          <Col xs={3}>\n            {product?.id && (\n              <button\n                disabled={product.quantityBrute === 0}\n                className={`mt-3 ${\n                  itemOnBasket\n                    ? \"btn btn-danger btn-sm\"\n                    : \"btn btn-green btn-sm\"\n                }`}\n                onClick={handleAddToBasket}\n              >\n                {!itemOnBasket ? \"Ajouter\" : \"Retirer\"}\n              </button>\n            )}\n          </Col>\n        </Row>\n      </ListGroup.Item>\n    </>\n  );\n};\n\nexport default ProductItem;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FromDepotItem from \"./FromDepotItem\";\nimport { Card } from \"react-bootstrap\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport { displayMoney, checkHasExistText } from \"../../utils/functions\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  handleMinusProductDepot,\n  handlePhtyoSpecificDepot,\n  handleSoldQuantityCCDepot,\n} from \"../../store/functions/function-depot\";\nimport { clearFromDepot } from \"../../store/fromdepot/actions/fromdepot\";\nimport { SORTIE, CREDITVACCINATEUR, CREDIT } from \"../../constants/routes\";\nimport { Select } from '@chakra-ui/react';\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n  const total = arr.reduce((acc, val) => acc + val, 0);\n  return total;\n};\n\nconst FromDepot = ({ setRegenerate }) => {\n  const [type, setType] = useState(\"vente-depot\");\n  const [idFournisseur, setIdFournisseur] = useState(1);\n  const [vaccinateurId, setVaccinateurId] = useState(null);\n  const [emprunter, setEmprunter] = useState(null);\n  const history = useHistory();\n\n  const { fromdepots } = useSelector((state) => ({\n    fromdepots: state.fromdepots,\n  }));\n  const dispatch = useDispatch();\n  const emprunters = useSelector(getData(\"emprunters\").value);\n  const vaccinateurs = useSelector(getData(\"vaccinateurs\").value);\n  const meta = useSelector(getData(\"commandes\").meta);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const date = new Date();\n  const [dateCom, setDateCom] = useState(date);\n  useEffect(() => {\n    dispatch(clearFromDepot());\n    dispatch(action(\"commandes\").fetch());\n    dispatch(action(\"emprunters\").fetch());\n    dispatch(action(\"vaccinateurs\").fetch());\n  }, []);\n\n  const onCheckOut = () => {\n    if (dateCom == null || dateCom == \"\") {\n      alert(\"Vous avez oublié de mettre la date de l'operation !!!\");\n      return;\n    }\n    for (let i = 0; i < fromdepots.length; ++i) {\n      if (fromdepots[i].quantityParProductDepot == 0) {\n        alert(\"Commande non conforme:\" + fromdepots[i].name + \" : 0\");\n        return;\n      }\n    }\n    fromdepots.forEach((element) => {\n      delete element.busy;\n      delete element.pendingCreate;\n      handleMinusProductDepot(element);\n      if (element.condmldepot != 0 && element.qttccpventedepot != 0) {\n        handlePhtyoSpecificDepot(element);\n      } else {\n        handleSoldQuantityCCDepot(element);\n      }\n    });\n    //console.log(fromdepots);\n    dispatch(\n      action(\"commandes\").createTransaction(\n        {\n          id: Math.floor(Date.now() / 1000),\n          contenu: fromdepots,\n          type: type,\n          sorte: \"sortie\",\n          vaccinateurId: vaccinateurId,\n          status: type === \"vente-depot\" ? true : false,\n          emprunterId: emprunter,\n          dateCom: dateCom != null || dateCom != \"\" ? dateCom : date,\n        },\n        \"add-from-depot\"\n      )\n    );\n    dispatch(clearFromDepot());\n    if (type === \"vente-depot-credit\") {\n      history.push(CREDIT);\n    } else if (type === \"vente-depot-vaccinateur\") {\n      history.push(CREDITVACCINATEUR);\n    } else {\n      history.push(SORTIE);\n    }\n  };\n\n  const onClearBasket = () => {\n    fromdepots.forEach((element) => {\n      element.quantityParProductDepot = 0;\n      element.qttByCCDepot = 0;\n    });\n\n    dispatch(clearFromDepot());\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Header className=\" bg-dark py-2 text-white d-flex justify-content-between align-items-center\">\n          <div style={{ width: \"60%\" }}>BON DE SORTIE </div>\n          <div style={{ width: \"30%\" }} className=\"text-right\">\n            <Select\n              onChange={(e) => {\n                setType(e.target.value);\n              }}\n            >\n              <option value=\"vente-depot\" selected>\n                Comptant\n              </option>\n              <option value=\"vente-depot-credit\">Credit</option>\n              <option value=\"vente-depot-vaccinateur\">Vaccinateur</option>\n            </Select>\n          </div>\n        </Card.Header>\n        <div className=\"commande-vente\">\n          <Card.Body\n            style={{ padding: 12, marginTop: 3, marginRight: 2, marginLeft: 2 }}\n          >\n            <div\n              style={{\n                overflowY: \"auto\",\n                height: \"350px\",\n                maxHeight: \"350px\",\n                overflowX: \"hidden\",\n              }}\n            >\n              <div class=\"form-group\">\n                <label>Date de sortie :</label>\n                <div>\n                  <input\n                    type=\"date\"\n                    onChange={(e) => setDateCom(e.target.value)}\n                    value={dateCom}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              {type === \"vente-depot-credit\" && (\n                <>\n                  <label>Nom du persone:</label>\n                  <select\n                    className=\"form-control mb-2\"\n                    onChange={(e) => {\n                      setEmprunter(e.target.value);\n                    }}\n                  >\n                    <option>Selectionner une personne</option>\n                    {emprunters.map((v) => (\n                      <option value={v.id}>{v.name}</option>\n                    ))}\n                  </select>\n                </>\n              )}\n              {type === \"vente-depot-vaccinateur\" && (\n                <>\n                  <label>Nom du vaccinateur:</label>\n                  <select\n                    className=\"form-control mb-2\"\n                    onChange={(e) => {\n                      setVaccinateurId(e.target.value);\n                    }}\n                  >\n                    <option>Selectionner un vaccinateur</option>\n                    {vaccinateurs.map((v) => (\n                      <option value={v.id}>{v.name}</option>\n                    ))}\n                  </select>\n                </>\n              )}\n              {fromdepots?.length <= 0 && (\n                <div className=\"alert alert-success\">\n                Choississez un produit sur la section \"Produits\" puis cliquez sur \"Ajouter\"\n                </div>\n              )}\n              {fromdepots?.map((product, i) => (\n                <FromDepotItem\n                  key={`${product?.id}_${i}`}\n                  product={product}\n                  basket={fromdepots}\n                  dispatch={dispatch}\n                />\n              ))}\n            </div>\n          </Card.Body>\n\n          {fromdepots?.length > 0 && (\n            <Card.Footer className=\"d-flex align-items-center justify-content-between\">\n              <div style={{ width: \"30%\" }}>\n                <h2 className=\"p-2 text-uppercase bg-primary\">\n                  <strong data-test-id=\"total-price-orders\">\n                    Total:\n                    {displayMoney(\n                      calculateTotal(\n                        fromdepots.map((product) => {\n                          return (\n                            product.prixVente * product.quantityParProductDepot\n                          );\n                        })\n                      ) +\n                        calculateTotal(\n                          fromdepots.map((product) => {\n                            return product.prixParCC * product.qttByCCDepot;\n                          })\n                        )\n                    )}\n                  </strong>\n                </h2>\n              </div>\n              <div style={{ width: \"70%\" }}>\n                {fromdepots.length > 0 && (\n                  <div className=\"d-flex text-right align-items-end justify-content-end\">\n                    <button\n                      className=\"btn btn-green btn-sm mr-2\"\n                      disabled={fromdepots.length === 0}\n                      onClick={onCheckOut}\n                      type=\"button\"\n                    >\n                      Valider l'operation\n                    </button>\n                    <button\n                      className=\"btn btn-danger btn-sm\"\n                      onClick={onClearBasket}\n                      type=\"button\"\n                    >\n                      <span>Annuler</span>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </Card.Footer>\n          )}\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default FromDepot;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport ProductItem from \"./item\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, Card, ListGroup } from \"react-bootstrap\";\nimport FromDepot from \"./FromDepot\";\nimport { action, getData } from \"../../utils/lib/call\";\nimport { Link } from \"react-router-dom\";\nimport { HISTORIQUEVENTEVENDEUR } from \"../../constants/routes\";\nimport { fetchProductsByFournisseur } from \"../../store/actions/products\";\nimport { GetAll, Data } from \"../../context\";\nimport { Select } from \"@chakra-ui/select\";\nimport { displayDate, displayMoney } from \"../../utils/functions\";\nimport { getCommandeCVA } from \"../../store/actions/commandes\";\nimport searchByNameAndFournisseur from \"../../filters/searchByNameAndFournisseur\";\nimport searchByFournisseur from \"../../filters/searchByFournisseur\";\nimport searchByName from \"../../filters/searchByName\";\nconst Products = () => {\n  const parameterizeObjectQuery = (key, value) => {\n    return '{\"' + key + '\":\"' + value + '\"}';\n  };\n  const products = useSelector(getData(\"products\").value);\n  const meta = useSelector(getData(\"products\").meta);\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const [idFournisseur, setIdFournisseur] = useState(2);\n  const [regenerate, setRegenerate] = useState(false);\n  const refDateDeb = useRef(null);\n  const refDateFin = useRef(null);\n\n  const [productData, setProductData] = useState([]);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const metameta = useSelector(getData(\"commandes\").meta);\n  const [deb, setDeb] = useState(new Date());\n  const [fin, setFin] = useState(new Date());\n\n  useEffect(() => {\n    dispatch(getCommandeCVA(deb, fin));\n  }, [deb, fin]);\n\n  useEffect(() => {\n    setDeb(new Date());\n    setFin(new Date());\n    dispatch(action(\"products\").fetch());\n  }, []);\n  useEffect(() => {\n    if (regenerate == true) {\n      dispatch(action(\"products\").fetch());\n      setRegenerate(false);\n    }\n    return () => {\n      setRegenerate(false);\n    };\n  }, [regenerate]);\n\n  useEffect(() => {\n    if (!meta.isFetching) {\n      setProductData(products);\n    }\n  }, [meta]);\n  useEffect(() => {\n    if (idFournisseur != null) {\n      setProductData(\n        searchByNameAndFournisseur(products, value, idFournisseur)\n      );\n    } else {\n      setProductData(searchByName(products, value));\n    }\n  }, [value]);\n  useEffect(() => {\n    if (value != \"\") {\n      setProductData(\n        searchByNameAndFournisseur(products, value, idFournisseur)\n      );\n    } else {\n      setProductData(searchByFournisseur(products, idFournisseur));\n    }\n  }, [idFournisseur]);\n\n  const calculateTotal = (arr) => {\n    if (!arr || arr?.length === 0) return 0;\n    const total = arr.reduce((acc, val) => acc + val, 0);\n    return total;\n  };\n\n  const totalDevente = (arr) => {\n    return (\n      calculateTotal(\n        arr.map((product) => {\n          return product.prixVente * product.quantityParProduct;\n        })\n      ) +\n      calculateTotal(\n        arr.map((product) => {\n          return product.prixParCC * product.qttByCC;\n        })\n      )\n    );\n  };\n  const recetteDuJour = (arr) => {\n    let total = 0;\n    arr.map((c) => {\n      total += totalDevente(c?.contenu);\n    });\n    return total;\n  };\n  return (\n    <>\n      <Container fluid>\n        <div className=\"py-2\">\n          <Row>\n            <Col xs={6}>\n              <Card className=\"mt-2\">\n                <Card.Header className=\"bg-dark p-2 text-white d-flex text-uppercase justify-content-between align-items-center\">\n                  <div style={{ width: \"80%\" }}>Produits</div>\n                  <div>\n                    <button\n                      className=\"btn btn-green btn-sm\"\n                      onClick={() => {\n                        setValue(\"\");\n                        setRegenerate(true);\n                      }}\n                    >\n                      Mettre à jour\n                    </button>\n                  </div>\n                </Card.Header>\n                <Card.Body>\n                  <div>\n                  \n                    <input\n                      type=\"text\"\n                      onChange={(e) => {\n                        setValue(e.target.value);\n                      }}\n                      placeholder=\"Nom du produit\"\n                      className=\"form-control mb-2\"\n                    />{\" \"}\n                    <GetAll model=\"fournisseurs\">\n                      <Data>\n                        {({ data, meta }) => (\n                          <div className=\"my-2\">\n                            <Select\n                              style={{ backgroundColor: \"white\" }}\n                              onChange={(e) => {\n                                setIdFournisseur(e.target.value);\n                              }}\n                            >\n                              <option>Tous les fournisseurs</option>\n                              {data.map((d) => (\n                                <option value={d.id} selected={d.id == 2}>\n                                  {d.name}\n                                </option>\n                              ))}\n                            </Select>\n                          </div>\n                        )}\n                      </Data>\n                    </GetAll>\n                  </div>\n                  <ListGroup>\n                    <div\n                      style={{\n                        overflowY: \"auto\",\n                        height: \"350px\",\n                        maxHeight: \"350px\",\n                        overflowX: \"hidden\",\n                      }}\n                    >\n                      <div class=\"d-flex justify-content-start flex-wrap\">\n                        {productData.map((p) => (\n                          <ProductItem product={p} />\n                        ))}\n                        {productData.length == 0 &&\n                          \"Aucune enregistrement trouvé\"}\n                      </div>{\" \"}\n                    </div>\n                  </ListGroup>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col xs={6}>\n              <div className=\" py-2\">\n                <FromDepot setRegenerate={setRegenerate} />\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Products;\n","import React from \"react\";\nimport ContentHeader from \"../../@adminlte/adminlte/Content/ContentHeader\";\nimport ActiveLink from \"../../@adminlte/adminlte/Content/ActiveLink\";\nimport Page from \"../../@adminlte/adminlte/Content/Page\";\nimport Content from \"../../@adminlte/adminlte/Content\";\nimport Products from \"./product\";\nconst BonDepot = () => {\n  return (\n    <Content>\n      <ContentHeader title=\"Bon de sortie du dépot\">\n        <ActiveLink title=\"Bon de sortie du dépot\"></ActiveLink>\n      </ContentHeader>\n\n      <Page>\n        <div>\n          <button disabled={true} className=\"btn btn-green btn-xs ml-3 mb-2\">\n            Ajouter\n          </button>{\" \"}\n          : <span>Le produit n'a pas de stock disponible</span>\n          <button className=\"btn btn-green btn-xs ml-3 mb-2\">\n            Mettre à jour\n          </button>{\" \"}\n          : <span>Mettre à jour la liste des produits</span>\n        </div>\n        <select disabled={true} className=\"  ml-3 bg-white py-2 input-xs\">\n          <option>Comptant</option>\n        </select>{\" \"}\n        : <span>Choix du mode sortie ( Comptant,credit,vaccinateur)</span>\n        <Products />\n      </Page>\n    </Content>\n  );\n};\n\nexport default BonDepot;\n","// concatene des array en une seul array\n/**\n *  var a = [\n    {\n      id: 1,\n      date: '2021-03-12',\n      contenu: [\n        { id: 14, qqt: 20 },\n        { id: 12, qtt: 10 },\n      ],\n    },\n    { id: 2,\n    date: '2021-03-12', contenu: [{ id: 12, qqt: 2 }] },\n    { id: 2,\n    date: '2021-03-13', contenu: [{ id: 12, qqt: 2 }] },\n  ];\n* deviens var b=[{ id: 14, qqt: 20 },{ id: 12, qtt: 10 },{ id: 12, qqt: 2 }]\n * \n */\nconst flatify = (data, attribute) => {\n  return [...new Set([].concat(...data.map((o) => o[attribute])))];\n};\nexport default flatify;","\nimport moment  from 'moment';\n/**\n *\n * Filter array by date range\n *\n */\nconst getByRangeDate = (data, dateKey, startDate, endDate) => {\n  return data.filter((d) => {\n    var date = new Date(d[dateKey]);\n    return moment(date).isBetween(startDate, endDate, \"days\", \"[]\");\n  });\n};\n\nexport default getByRangeDate;\n","import React from \"react\";\nimport { displayShortMonth } from \"../../../utils/functions\";\n\nconst DateInterval = ({ date }) => {\n  let weekday = new Date(date).toLocaleString(\"fr-FR\", { weekday: \"short\" });\n  let weekdayNumber = new Date(date).getDate();\n  return (\n    <>\n      <td style={{height:\"100%\"}}\n        className={\n          weekday == \"sam.\"\n            ? ` bg-warning text-white text-center mr-2`\n            : \"bg-dark text-center mr-2\"\n        }\n      >{weekdayNumber}\n       \n      </td>\n    </>\n  );\n};\nexport default DateInterval;\n","import React, { useEffect, useState } from \"react\";\nexport const ItemsApprov = ({ flat, gr, id }) => {\n  let orderItem = flat.filter((f) => f.id == id);\n  let lastElement =\n    orderItem[orderItem.length - 1] != undefined\n      ? orderItem[orderItem.length - 1]\n      : {};\n\n  let value = 0;\n  if (orderItem) {\n    value = orderItem\n      .map((item) => item.quantityParProduct * 1)\n      .reduce((prev, curr) => prev + curr, 0);\n  } else {\n    value = 0;\n  }\n  return <td className=\"text-center p-1\">{value != 0 ? value : \"-\"}</td>;\n};\n\nexport default ItemsApprov;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Stock from \"./Stock\";\nimport moment from \"moment\";\nimport getByRangeDateAndProduct from \"../../../filters/getByRangeDateAndProduct\";\nimport { displayDate } from \"../../../utils/functions\";\n\nexport const NoItemsApprov = () => {\n  return (\n    <td className=\"text-center p-1\">\n        {/**<div className=\"mb-2\">\n          <span className=\"text-center  p-1\">-</span>\n          <span className=\"text-center  p-1\">-</span>\n        </div>{\" \"}**/}\n        <div>\n          <span className=\"text-center  p-1\">-</span>\n        </div>\n    </td>\n  );\n};\n\nexport default NoItemsApprov;\n","import React, { useEffect, useState } from \"react\";\nexport const LastStockApprov = ({ flat, gr, id }) => {\n  let orderItem = flat.filter((f) => f.id == id);\n  let lastElement =\n    orderItem[orderItem.length - 1] != undefined\n      ? orderItem[orderItem.length - 1]\n      : {};\n  let lastStock = {\n    bruteCva: lastElement.hasOwnProperty(\"id\")\n      ? lastElement.quantityBrute\n      : 0,\n    ccCva: lastElement.hasOwnProperty(\"id\") ? lastElement.quantityCC : 0,\n  };\n  return (\n    <>\n      <td className=\"text-center\">\n        {orderItem.length != 0 ? lastStock.bruteCva : 0}\n      </td>\n\n    </>\n  );\n};\n\nexport default LastStockApprov;\n","import React from \"react\";\nimport { TDB_FACTURES,TDB_VENTE_CBV,TDB_DEPOT_VERS_MAGASIN } from '../../../constants/routes';\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nexport const MenuTdb = () => {\n    const location = useLocation();\n    const isActive = (route) => {\n        return location.pathname == route;\n      };\n  return (\n    <div className=\"d-flex justify-content-center align-items-center\">\n      <Link\n        className={`btn btn-${\n          isActive(\"/\") ? \"success\" : \"default\"\n        } text-uppercase mr-2`}\n        to={\"/\"}\n      >\n        Journal Vente du magasin\n      </Link>\n      <Link\n        className={`btn btn-${\n          isActive(TDB_FACTURES) ? \"success\" : \"default\"\n        } text-uppercase mr-2`}\n        to={TDB_FACTURES}\n      >\n        Journal de facturation\n      </Link>\n      <Link\n        className={`btn btn-${\n          isActive(TDB_VENTE_CBV) ? \"success\" : \"default\"\n        } text-uppercase mr-2`}\n        to={TDB_VENTE_CBV}\n      >\n        Journal de Vente CBV\n      </Link>\n      <Link\n        className={`btn btn-${\n          isActive(TDB_DEPOT_VERS_MAGASIN) ? \"success\" : \"default\"\n        } text-uppercase mr-2`}\n        to={TDB_DEPOT_VERS_MAGASIN}\n      >\n        Journal de Depot vers magasin\n      </Link>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport Content from \"../../../@adminlte/adminlte/Content\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { getApprov, getApprovData } from \"../../../store/actions/approv\";\nimport { getData } from \"../../../utils/lib/call\";\nimport flatify from \"../../../filters/flatify\";\nimport getByRangeDate from \"../../../filters/getByRangeDate\";\nimport { displayDate } from \"../../../utils/functions\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker/dist/DateRangePicker\";\nimport DateInterval from \"./DateInterval\";\nimport ItemsApprov from \"./ItemsApprov\";\nimport NoItemsApprov from \"./NoItemsApprov\";\nimport LastStockApprov from \"./LastStockApprov\";\nimport { MenuTdb } from \"./MenuTdb\";\nexport const groupBy = (array, key, subkey) => {\n  return array.reduce((result, currentValue) => {\n    if (!subkey) {\n      (result[currentValue[key]] = result[currentValue[key]] || []).push(\n        currentValue\n      );\n    } else {\n      (result[currentValue[key][subkey]] =\n        result[currentValue[key][subkey]] || []).push(currentValue);\n    }\n    return result;\n  }, {});\n};\nfunction last(array) {\n  return array[array.length - 1];\n}\nexport const Facturation = () => {\n  var start = moment().isoWeekday(1).startOf(\"week\");\n  var end = moment().endOf(\"week\");\n  const [rangeDate, setRangeDate] = useState([]);\n  const [rangeMonth, setRangeMonth] = useState([]);\n  let [startofDate, setStartofDate] = useState(start);\n  let [endDate, setEndDate] = useState(end);\n  const [dateRange, onChangeDateRange] = useState([start, end]);\n  const [byDateProduct, setByDateProduct] = useState([]);\n  const [result, setResult] = useState([]);\n  const approvis = useSelector(getData(\"approvis\").value);\n  const meta = useSelector(getData(\"approvis\").meta);\n  const dispatch = useDispatch();\n\n  let getAllMonthBetweenDates = (startDate, endDate) => {\n    const months = [];\n    while (endDate.diff(startDate, \"months\") >= 0) {\n      months.push(startDate.format(\"MMMM YYYY\"));\n      startDate.add(1, \"month\");\n    }\n    return months;\n  };\n  let getDaysBetweenDates = (startDate, endDate) => {\n    let now = startDate.clone();\n    const dates = [];\n    while (now.isSameOrBefore(endDate)) {\n      dates.push(now.format(\"YYYY-MM-DD\"));\n      now.add(1, \"days\");\n    }\n    return dates;\n  };\n\n  useEffect(() => {\n    if (dateRange !== null) {\n      if (dateRange[0]) {\n        setStartofDate(dateRange[0]);\n      }\n      if (dateRange[0]) {\n        setEndDate(dateRange[1]);\n      }\n    } else {\n      setStartofDate(start);\n      setEndDate(end);\n    }\n  }, [dateRange]);\n\n  useEffect(() => {\n    if (startofDate && endDate) {\n      setRangeDate(getDaysBetweenDates(moment(startofDate), moment(endDate)));\n      setRangeMonth(\n        getAllMonthBetweenDates(moment(startofDate), moment(endDate))\n      );\n      dispatch(getApprovData(startofDate, endDate));\n    }\n  }, [startofDate, endDate]);\n  useEffect(() => {\n    if (!meta.isFetching) {\n      setByDateProduct(\n        getByRangeDate(approvis, \"dateApprov\", startofDate, endDate)\n      );\n    }\n  }, [meta]);\n  let rs = flatify(byDateProduct, \"contenu\");\n  let res = rs\n    .reduce(\n      (r, { id, name, type, category, fournisseur,quantityBrute,quantityCC, quantityParProduct }) => {\n        var temp = r.find((o) => o.id === id);\n        if (!temp) {\n          r.push({\n            id,\n            name,\n            type,\n            category,\n            fournisseur,\n            quantityBrute,\n            quantityCC,\n            quantityParProduct,\n          });\n        } else {\n          temp.quantityParProduct =\n            parseInt(temp.quantityParProduct) + parseInt(quantityParProduct);\n        }\n        return r;\n      },\n      []\n    )\n    .sort(function (a, b) {\n      return a.id > b.id;\n    });\n  const flato = (data, attribute) => {\n    return [...new Set([].concat(...data.map((o) => o[attribute])))];\n  };\n\n  const groupedBasket = groupBy(byDateProduct, \"dateApprov\");\n  return (\n    <Content>\n      <ContentHeader title=\"Journal de facturation\">\n        <ActiveLink title=\"Journal de facturation\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n      <MenuTdb/>\n        <div className=\"date-range\">\n          <div className=\"d-flex justify-content-between my-3\">\n            <div>\n              {startofDate && endDate && (\n                <>\n                  <h2 class=\"text-uppercase my-1\">Journal de facturation </h2>\n                  <span>\n                    Du: {displayDate(startofDate)} Au {displayDate(endDate)}\n                  </span>\n                </>\n              )}{\" \"}\n            </div>\n            <div>\n              <DateRangePicker\n                locale=\"fr-FR\"\n                onChange={onChangeDateRange}\n                value={dateRange}\n              />\n            </div>\n          </div>\n          <div className=\"bg-white py-3 px-2 mb-2\">\n            <div className=\"table-responsive\">\n              <table class=\"table\">\n                <tr className=\"sticky-this\">\n                  <td>Produit</td>\n                  {rangeDate.map((r) => (\n                    <>\n                      <DateInterval date={r} />\n                    </>\n                  ))}\n                  <td className=\"bg-thead text-uppercase text-center\">Total</td>\n                  <td className=\"bg-thead text-uppercase text-center\">Stock</td>\n                </tr>\n                {res.map((b) => (\n                  <>\n                    <tr class=\"bg-white\">\n                      <td className=\"bg-thead\">{b.name}</td>\n                      {rangeDate.map((r) => (\n                        <>\n                          {groupedBasket[r] != undefined ? (\n                            <ItemsApprov\n                              flat={flato(groupedBasket[r], \"contenu\")}\n                              gr={r}\n                              id={b.id}\n                            />\n                          ) : (\n                            <NoItemsApprov />\n                          )}\n                        </>\n                      ))}\n                      <td className=\"text-center\">{b.quantityParProduct}</td>\n\n                      <LastStockApprov\n                        flat={flato(\n                          groupedBasket[last(Object.keys(groupedBasket))],\n                          \"contenu\"\n                        )}\n                        gr={last(Object.keys(groupedBasket))}\n                        id={b.id}\n                      />\n                    </tr>\n                  </>\n                ))}\n                {res.length == 0 && (\n                  <tr>\n                    <td className=\"text-center\" colSpan={rangeDate.length + 3}>\n                      Aucune enregistrement trouvé\n                    </td>\n                  </tr>\n                )}\n              </table>\n            </div>\n          </div>{\" \"}\n        </div>\n      </Page>\n    </Content>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Stock from \"./Stock\";\nimport moment from \"moment\";\nimport getByRangeDateAndProduct from \"../../../filters/getByRangeDateAndProduct\";\nimport { displayDate } from \"../../../utils/functions\";\n\nexport const NoItemsApprov = () => {\n  return (\n    <td className=\"text-center p-1\">\n        {/**<div className=\"mb-2\">\n          <span className=\"text-center  p-1\">-</span>\n          <span className=\"text-center  p-1\">-</span>\n        </div>{\" \"}**/}\n        <div>\n          <span className=\"text-center  p-1\">-</span>\n        </div>\n    </td>\n  );\n};\n\nexport default NoItemsApprov;\n","import React, { useEffect, useState } from \"react\";\nexport const ItemsVente = ({ flat, gr, id }) => {\n  let orderItem = flat.filter((f) => f.id == id);\n  let lastElement =\n    orderItem[orderItem.length - 1] != undefined\n      ? orderItem[orderItem.length - 1]\n      : {};\n\n  let value = 0;\n  if (orderItem) {\n    value = orderItem\n      .map((item) => item.quantityParProductDepot * 1)\n      .reduce((prev, curr) => prev + curr, 0);\n  } else {\n    value = 0;\n  }\n  return <td className=\"text-center p-1\">{value != 0 ? value : \"-\"}</td>;\n};\n\nexport default ItemsVente;\n","import React, { useEffect, useState } from \"react\";\nexport const LastStockVente = ({ flat, gr, id }) => {\n  let orderItem = flat.filter((f) => f.id == id);\n  let lastElement =\n    orderItem[orderItem.length - 1] != undefined\n      ? orderItem[orderItem.length - 1]\n      : {};\n  let lastStock = {\n    bruteCva: lastElement.hasOwnProperty(\"id\")\n      ? lastElement.quantityBrute\n      : 0,\n    ccCva: lastElement.hasOwnProperty(\"id\") ? lastElement.quantityCC : 0,\n  };\n  return (\n    <>\n      <td className=\"text-center\">\n        {orderItem.length != 0 ? lastStock.bruteCva : 0}\n      </td>\n\n    </>\n  );\n};\n\nexport default LastStockVente;\n","import React,{useState,useEffect} from \"react\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport Content from \"../../../@adminlte/adminlte/Content\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from 'moment';\nimport { getData } from \"../../../utils/lib/call\";\nimport flatify from \"../../../filters/flatify\";\nimport getByRangeDate from \"../../../filters/getByRangeDate\";\nimport { getTdbCommande } from \"../../../store/actions/commandes\";\nimport { displayDate } from \"../../../utils/functions\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker/dist/DateRangePicker\";\nimport DateInterval from \"./DateInterval\";\nimport LastStock from \"./LastStock\";\nimport NoItemsVente from \"./NoItemsVente\";\nimport ItemsVente from \"./ItemsVente\";\nimport LastStockVente from \"./LastStockVente\";\nimport { MenuTdb } from './MenuTdb';\nexport const groupBy = (array, key, subkey) => {\n  return array.reduce((result, currentValue) => {\n    if (!subkey) {\n      (result[currentValue[key]] = result[currentValue[key]] || []).push(\n        currentValue\n      );\n    } else {\n      (result[currentValue[key][subkey]] =\n        result[currentValue[key][subkey]] || []).push(currentValue);\n    }\n    return result;\n  }, {});\n};\nfunction last(array) {\n  return array[array.length - 1];\n}\nexport const VenteCBV = () => {\n  var start = moment().isoWeekday(1).startOf(\"week\");\n  var end = moment().endOf(\"week\");\n  const [rangeDate, setRangeDate] = useState([]);\n  const [rangeMonth, setRangeMonth] = useState([]);\n  let [startofDate, setStartofDate] = useState(start);\n  let [endDate, setEndDate] = useState(end);\n  const [dateRange, onChangeDateRange] = useState([start, end]);\n  const [byDateProduct, setByDateProduct] = useState([]);\n  const [result, setResult] = useState([]);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const meta = useSelector(getData(\"commandes\").meta);\n  const dispatch = useDispatch();\n\n  let getAllMonthBetweenDates = (startDate, endDate) => {\n    const months = [];\n    while (endDate.diff(startDate, \"months\") >= 0) {\n      months.push(startDate.format(\"MMMM YYYY\"));\n      startDate.add(1, \"month\");\n    }\n    return months;\n  };\n  let getDaysBetweenDates = (startDate, endDate) => {\n    let now = startDate.clone();\n    const dates = [];\n    while (now.isSameOrBefore(endDate)) {\n      dates.push(now.format(\"YYYY-MM-DD\"));\n      now.add(1, \"days\");\n    }\n    return dates;\n  };\n\n  useEffect(() => {\n    if (dateRange !== null) {\n      if (dateRange[0]) {\n        setStartofDate(dateRange[0]);\n      }\n      if (dateRange[0]) {\n        setEndDate(dateRange[1]);\n      }\n    } else {\n      setStartofDate(start);\n      setEndDate(end);\n    }\n  }, [dateRange]);\n\n  useEffect(() => {\n    if (startofDate && endDate) {\n      setRangeDate(getDaysBetweenDates(moment(startofDate), moment(endDate)));\n      setRangeMonth(\n        getAllMonthBetweenDates(moment(startofDate), moment(endDate))\n      );\n      dispatch(getTdbCommande('vente-depot',startofDate, endDate));\n    }\n  }, [startofDate, endDate]);\n  useEffect(() => {\n    if (!meta.isFetching) {\n      setByDateProduct(\n        getByRangeDate(commandes, \"dateCom\", startofDate, endDate)\n      );\n    }\n  }, [meta]);\n  let rs = flatify(byDateProduct, \"contenu\");\n  let res = rs\n    .reduce(\n      (\n        r,\n        {\n          id,\n          name,\n          type,\n          category,\n          fournisseur,\n          quantityParProductDepot,\n          quantityBruteCVA,\n          quantityCCCVA,\n          qttByCC,\n        }\n      ) => {\n        var temp = r.find((o) => o.id === id);\n        if (!temp) {\n          r.push({\n            id,\n            name,\n            type,\n            category,\n            fournisseur,\n            quantityBruteCVA,\n            quantityCCCVA,\n            quantityParProductDepot\n          });\n        } else {\n            (temp.quantityParProductDepot =\n              parseInt(temp.quantityParProductDepot) + parseInt(quantityParProductDepot));\n        }\n        return r;\n      },\n      []\n    )\n    .sort(function (a, b) {\n      return a.id > b.id;\n    });\n  const flato = (data, attribute) => {\n    return [...new Set([].concat(...data.map((o) => o[attribute])))];\n  };\n\n  const groupedBasket = groupBy(byDateProduct, \"dateCom\");\n  return (\n    <Content>\n      <ContentHeader title=\"Journal de vente\">\n        <ActiveLink title=\"Journal de vente\"></ActiveLink>\n      </ContentHeader>\n      <Page><MenuTdb/>\n      <div className=\"date-range\">\n          <div className=\"d-flex justify-content-between my-3\">\n            <div>\n              {startofDate && endDate && (\n                <>\n                  <h2 class=\"text-uppercase my-1\">\n                    Journal de vente \n                  </h2>\n                  <span>\n                    Du: {displayDate(startofDate)} Au {displayDate(endDate)}\n                  </span>\n                </>\n              )}{\" \"}\n            </div>\n            <div>\n              <DateRangePicker\n                locale=\"fr-FR\"\n                onChange={onChangeDateRange}\n                value={dateRange}\n              />\n            </div>\n          </div>\n        \n          <div className=\"table-responsive\">\n        \n            <table class=\"table\">\n              <tr className=\"sticky-this\">\n                <td>Produit</td>\n                {rangeDate.map((r) => (\n                  <>\n                    <DateInterval date={r} />\n                  </>\n                ))}\n                <td className=\"bg-thead text-uppercase text-center\">Total</td>\n              \n                <td className=\"bg-thead text-uppercase text-center\">Stock</td>\n               \n              </tr>\n              {res.map((b) => (\n                <>\n                  <tr class=\"bg-white\">\n                    <td className=\"bg-thead\">{b.name}</td>\n                    {rangeDate.map((r) => (\n                      <>\n                        {groupedBasket[r] != undefined ? (\n                          <ItemsVente\n                            flat={flato(groupedBasket[r], \"contenu\")}\n                            gr={r}\n                            id={b.id}\n                          />\n                        ) : (\n                          <NoItemsVente />\n                        )}\n                      </>\n                    ))}\n                    <td className=\"text-center\">{b.quantityParProductDepot}</td>\n                    <LastStockVente\n                      flat={flato(\n                        groupedBasket[last(Object.keys(groupedBasket))],\n                        \"contenu\"\n                      )}\n                      gr={last(Object.keys(groupedBasket))}\n                      id={b.id}\n                    />\n                  </tr>\n                </>\n              ))}\n              {res.length == 0 && (\n                <tr>\n                  <td className=\"text-center\" colSpan={rangeDate.length + 3}>\n                    Aucune enregistrement trouvé\n                  </td>\n                </tr>\n              )}\n            </table>\n          </div>\n        </div>\n      </Page>\n    </Content>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport ActiveLink from \"../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../@adminlte/adminlte/Content/Page\";\nimport Content from \"../../../@adminlte/adminlte/Content\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { getApprov, getApprovData } from \"../../../store/actions/approv\";\nimport { getData } from \"../../../utils/lib/call\";\nimport flatify from \"../../../filters/flatify\";\nimport getByRangeDate from \"../../../filters/getByRangeDate\";\nimport { displayDate } from \"../../../utils/functions\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker/dist/DateRangePicker\";\nimport DateInterval from \"./DateInterval\";\nimport Items from \"./Items\";\nimport NoItems from \"./NoItems\";\nimport LastStock from \"./LastStock\";\nimport { getTdbCommande } from '../../../store/actions/commandes';\nimport ItemsApprov from \"./ItemsApprov\";\nimport NoItemsApprov from \"./NoItemsApprov\";\nimport LastStockApprov from \"./LastStockApprov\";\nimport { MenuTdb } from \"./MenuTdb\";\nexport const groupBy = (array, key, subkey) => {\n  return array.reduce((result, currentValue) => {\n    if (!subkey) {\n      (result[currentValue[key]] = result[currentValue[key]] || []).push(\n        currentValue\n      );\n    } else {\n      (result[currentValue[key][subkey]] =\n        result[currentValue[key][subkey]] || []).push(currentValue);\n    }\n    return result;\n  }, {});\n};\nfunction last(array) {\n  return array[array.length - 1];\n}\nexport const DepotVersMagasin = () => {\n  var start = moment().isoWeekday(1).startOf(\"week\");\n  var end = moment().endOf(\"week\");\n  const [rangeDate, setRangeDate] = useState([]);\n  const [rangeMonth, setRangeMonth] = useState([]);\n  let [startofDate, setStartofDate] = useState(start);\n  let [endDate, setEndDate] = useState(end);\n  const [dateRange, onChangeDateRange] = useState([start, end]);\n  const [byDateProduct, setByDateProduct] = useState([]);\n  const [result, setResult] = useState([]);\n  const commandes = useSelector(getData(\"commandes\").value);\n  const meta = useSelector(getData(\"commandes\").meta);\n  const dispatch = useDispatch();\n\n  let getAllMonthBetweenDates = (startDate, endDate) => {\n    const months = [];\n    while (endDate.diff(startDate, \"months\") >= 0) {\n      months.push(startDate.format(\"MMMM YYYY\"));\n      startDate.add(1, \"month\");\n    }\n    return months;\n  };\n  let getDaysBetweenDates = (startDate, endDate) => {\n    let now = startDate.clone();\n    const dates = [];\n    while (now.isSameOrBefore(endDate)) {\n      dates.push(now.format(\"YYYY-MM-DD\"));\n      now.add(1, \"days\");\n    }\n    return dates;\n  };\n\n  useEffect(() => {\n    if (dateRange !== null) {\n      if (dateRange[0]) {\n        setStartofDate(dateRange[0]);\n      }\n      if (dateRange[0]) {\n        setEndDate(dateRange[1]);\n      }\n    } else {\n      setStartofDate(start);\n      setEndDate(end);\n    }\n  }, [dateRange]);\n\n  useEffect(() => {\n    if (startofDate && endDate) {\n      setRangeDate(getDaysBetweenDates(moment(startofDate), moment(endDate)));\n      setRangeMonth(\n        getAllMonthBetweenDates(moment(startofDate), moment(endDate))\n      );\n      dispatch(getTdbCommande('cva',startofDate, endDate));\n    }\n  }, [startofDate, endDate]);\n  useEffect(() => {\n    if (!meta.isFetching) {\n      setByDateProduct(\n        getByRangeDate(commandes, \"dateCom\", startofDate, endDate)\n      );\n    }\n  }, [meta]);\n  let rs = flatify(byDateProduct, \"contenu\");\n  let res = rs\n    .reduce(\n      (r, { id, name, type, category, fournisseur,quantityBrute,quantityCC, quantityParProduct }) => {\n        var temp = r.find((o) => o.id === id);\n        if (!temp) {\n          r.push({\n            id,\n            name,\n            type,\n            category,\n            fournisseur,\n            quantityBrute,\n            quantityCC,\n            quantityParProduct,\n          });\n        } else {\n          temp.quantityParProduct =\n            parseInt(temp.quantityParProduct) + parseInt(quantityParProduct);\n        }\n        return r;\n      },\n      []\n    )\n    .sort(function (a, b) {\n      return a.id > b.id;\n    });\n  const flato = (data, attribute) => {\n    return [...new Set([].concat(...data.map((o) => o[attribute])))];\n  };\n\n  const groupedBasket = groupBy(byDateProduct, \"dateCom\");\n  return (\n    <Content>\n      <ContentHeader title=\"Journal de depôt vers magasin\">\n        <ActiveLink title=\"Journal de depôt vers magasin\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n      <MenuTdb/>\n        <div className=\"date-range\">\n          <div className=\"d-flex justify-content-between my-3\">\n            <div>\n              {startofDate && endDate && (\n                <>\n                  <h2 class=\"text-uppercase my-1\">Journal de depôt vers magasin </h2>\n                  <span>\n                    Du: {displayDate(startofDate)} Au {displayDate(endDate)}\n                  </span>\n                </>\n              )}{\" \"}\n            </div>\n            <div>\n              <DateRangePicker\n                locale=\"fr-FR\"\n                onChange={onChangeDateRange}\n                value={dateRange}\n              />\n            </div>\n          </div>\n          <div className=\"bg-white py-3 px-2 mb-2\">\n            <div className=\"table-responsive\">\n              <table class=\"table\">\n                <tr className=\"sticky-this\">\n                  <td>Produit</td>\n                  {rangeDate.map((r) => (\n                    <>\n                      <DateInterval date={r} />\n                    </>\n                  ))}\n                  <td className=\"bg-thead text-uppercase text-center\">Total</td>\n                  <td className=\"bg-thead text-uppercase text-center\">Stock</td>\n                </tr>\n                {res.map((b) => (\n                  <>\n                    <tr class=\"bg-white\">\n                      <td className=\"bg-thead\">{b.name}</td>\n                      {rangeDate.map((r) => (\n                        <>\n                          {groupedBasket[r] != undefined ? (\n                            <ItemsApprov\n                              flat={flato(groupedBasket[r], \"contenu\")}\n                              gr={r}\n                              id={b.id}\n                            />\n                          ) : (\n                            <NoItemsApprov />\n                          )}\n                        </>\n                      ))}\n                      <td className=\"text-center\">{b.quantityParProduct}</td>\n                      <LastStockApprov\n                        flat={flato(\n                          groupedBasket[last(Object.keys(groupedBasket))],\n                          \"contenu\"\n                        )}\n                        gr={last(Object.keys(groupedBasket))}\n                        id={b.id}\n                      />\n                    </tr>\n                  </>\n                ))}\n                {res.length == 0 && (\n                  <tr>\n                    <td className=\"text-center\" colSpan={rangeDate.length + 3}>\n                      Aucune enregistrement trouvé\n                    </td>\n                  </tr>\n                )}\n              </table>\n            </div>\n          </div>{\" \"}\n        </div>\n      </Page>\n    </Content>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect, useParams } from \"react-router-dom\";\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport { useLocation } from \"react-router-dom\";\nimport { CREDIT } from \"../../../../constants/routes\";\nimport { getCredit, setPayerCommande } from \"../../../../store/actions/commandes\";\nimport Content from \"../../../../@adminlte/adminlte/Content\";\nimport ActiveLink from \"../../../../@adminlte/adminlte/Content/ActiveLink\";\nimport ContentHeader from \"../../../../@adminlte/adminlte/Content/ContentHeader\";\nimport Page from \"../../../../@adminlte/adminlte/Content/Page\";\nimport NumberFormat from \"react-number-format\";\nimport { withRouter } from \"react-router-dom\";\nimport { displayDate, displayMoney } from \"../../../../utils/functions\";\nimport { useHistory } from 'react-router-dom';\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n  let total = 0;\n  arr.forEach((el) => {\n    total += el.prixVente * el.quantityParProduct * 1;\n  });\n  return total;\n};\nfunction DepotToMagasinDetail(props) {\n  let history = useHistory();\n  const { id } = useParams();\n  const commande = useSelector(getData(\"commandes\").value);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(action(\"commandes\").get(id));\n  }, [id]);;\n  return (\n    <Content>\n      <ContentHeader title=\"Détail de sortie vers magasin\">\n        <ActiveLink title=\"Détail de sortie vers magasin\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        \n        <table className=\"table table-bordered \">\n          <tr className=\"bg-thead\">\n            <td>Nom de l'article</td>\n            <td>Quantité</td>\n            <td>Sous total</td>\n          </tr>\n          {commande.length > 0 &&\n            commande[0]?.contenu.map((c) => (\n              <tr>\n                <td style={{ width: \"40%\" }}>{c.name}</td>\n                <td className=\"d-flex align-items-center\">\n                  {displayMoney(c.prixVente)}({\"x\"} {c.quantityParProduct})\n                </td>\n\n                <td>{displayMoney(c.prixVente * c.quantityParProduct)}</td>\n              </tr>\n            ))}\n        </table>\n        <div className=\"d-flex justify-content-end\">\n          <strong>Total</strong>:\n          {displayMoney(calculateTotal(commande[0]?.contenu))}\n        </div>\n        \n      </Page>\n    </Content>\n  );\n}\n\nexport default withRouter(DepotToMagasinDetail);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect, useParams } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport NumberFormat from \"react-number-format\";\nimport { withRouter } from \"react-router-dom\";\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport Page from \"../../../../@adminlte/adminlte/Content/Page\";\nimport ContentHeader from \"../../../../@adminlte/adminlte/Content/ContentHeader\";\nimport ActiveLink from \"../../../../@adminlte/adminlte/Content/ActiveLink\";\nimport Content from \"../../../../@adminlte/adminlte/Content/index\";\nimport { displayDate, displayMoney } from \"../../../../utils/functions\";\nimport { HISTORIQUEVENTEVENDEUR } from \"../../../../constants/routes\";\n\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n  const total = arr.reduce((acc, val) => acc + val, 0);\n  return total;\n};\n\nfunction DetailMagasinVente(props) {\n  let history = useLocation();\n  const { id } = useParams();\n  const commande = useSelector(getData(\"commandes\").value);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(action(\"commandes\").get(id));\n  }, [id]);\n  return (\n    <Content>\n      <ContentHeader title=\"Détail de vente du magasin\">\n        <ActiveLink title=\"Détail de vente du magasin\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <div>\n          <div>\n            <p>{commande[0]?.type == \"credit-cva\" && <p>Credit</p>}</p>\n            {commande[0]?.type == \"credit-cva\" && (\n              <div className=\"border\">\n                <>\n                  <h3>{commande[0]?.emprunter.name}</h3>\n                  <h5>{commande[0]?.emprunter.contact}</h5>\n                </>\n              </div>\n            )}\n            {commande.length > 0 && (\n              <div className=\"d-flex justify-content-between\">\n                <h2 className=\"my-2\">\n                  Date : {displayDate(commande[0]?.dateCom)}\n                </h2>\n                <div className=\"d-flex justify-content-end\">\n                  <div className=\"bg-thead p-1 mb-1\">\n                    <strong>Recette:</strong>:\n                    <h3 className=\"text-lg\">\n                      {displayMoney(\n                        calculateTotal(\n                          commande[0]?.contenu.map((product) => {\n                            return (\n                              product.prixVente * product.quantityParProduct\n                            );\n                          })\n                        ) +\n                          calculateTotal(\n                            commande[0]?.contenu.map((product) => {\n                              return product.prixParCC * product.qttByCC;\n                            })\n                          )\n                      )}\n                    </h3>\n                  </div>\n                </div>\n              </div>\n            )}\n            <table className=\"table table-bordered\">\n              <tr className=\"bg-thead\">\n                <td>Nom de l'article</td>\n                <td>Quantité</td>\n                <td>Sous total</td>\n              </tr>\n              {commande.length > 0 &&\n                commande[0]?.contenu.map((c) => (\n                  <tr>\n                    <td style={{ width: \"40%\" }}>{c.name}</td>\n                    <>\n                      {c.quantityParProduct != 0 && (\n                        <div className=\"d-flex align-items-center py-0\">\n                          <strong>{c.type}:</strong>\n                          {displayMoney(c.prixVente)} ({\"x\"}{\" \"}\n                          {c.quantityParProduct}) {\" = \"}\n                          {displayMoney(c.prixVente * c.quantityParProduct)}\n                        </div>\n                      )}\n                    </>\n\n                    {c.type == \"FLACON\" && (\n                      <>\n                        {c.qttByCC != 0 && (\n                          <div className=\"d-flex align-items-center  py-0\">\n                            <strong>ML:</strong> {displayMoney(c.prixParCC)}{\" \"}\n                            {\"x\"}{\" \"}\n                            {c.qttyspecificmirror != 0\n                              ? c.qttyspecificmirror + \" Dose\"\n                              : c.qttByCC + \" Ml\"}{\" \"}\n                            {\" = \"} {displayMoney(c.prixParCC * c.qttByCC)}\n                          </div>\n                        )}\n                      </>\n                    )}\n                    <td>\n                      {displayMoney(\n                        c.prixVente * c.quantityParProduct +\n                          c.prixParCC * c.qttByCC\n                      )}\n                    </td>\n                  </tr>\n                ))}\n            </table>\n          </div>{\" \"}\n        </div>{\" \"}\n      </Page>\n    </Content>\n  );\n}\n\nexport default withRouter(DetailMagasinVente);\n","import React, { useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst EditProductItemToMag = ({ state, setState, product }) => {\n  const dispatch = useDispatch();\n\n  const itemOnBasket = !!state?.find((item) => item?.id === product.id);\n\n  const removeProduct = (id) => {\n    setState(state.filter((t) => t.id !== id));\n  };\n  const handleAddToBasket = () => {\n    setState(\n      state.some((p) => p.id === product.id) ? state : [product, ...state]\n    );\n  };\n  const isEmptyBrute = React.useCallback(() => {\n    if (product.quantityBruteCVA > 15 && product.quantityBruteCVA <= 20) {\n      return \"yellow\";\n    }\n    if (product.quantityBruteCVA > 10 && product.quantityBruteCVA <= 15) {\n      return \"#ffdb4c\";\n    }\n    if (product.quantityBruteCVA > 5 && product.quantityBruteCVA <= 10) {\n      return \" orange\";\n    }\n    if (product.quantityBruteCVA > 0 && product.quantityBruteCVA <= 5) {\n      return \"#c44e14b8\";\n    }\n    if (product.quantityBruteCVA == 0) {\n      return \"red\";\n    } else {\n      return \"green\";\n    }\n  }, [product]);\n  const isEmptyCC = React.useCallback(() => {\n    if (product.quantityCCCVA > 15 && product.quantityCCCVA <= 20) {\n      return \"yellow\";\n    }\n    if (product.quantityCCCVA > 10 && product.quantityCCCVA <= 15) {\n      return \"#ffdb4c\";\n    }\n    if (product.quantityCCCVA > 5 && product.quantityCCCVA <= 10) {\n      return \" orange\";\n    }\n    if (product.quantityCCCVA > 0 && product.quantityCCCVA <= 5) {\n      return \"#c44e14b8\";\n    }\n    if (product.quantityCCCVA == 0) {\n      return \"red\";\n    } else {\n      return \"green\";\n    }\n\n    const isEmptyCondVal = React.useCallback(() => {\n      if (product.condval == 0) {\n        return \"red\";\n      } else {\n        return \"green\";\n      }\n    }, [product]);\n  }, [product]);\n  return (\n    <>\n      <ListGroup.Item\n        className=\"mb-2 mr-3\"\n        style={{\n          width: \"100%\",\n          border: \"1px solid gray\",\n          background: \"whitesmoke\",\n          borderLeft: `10px solid ${isEmptyBrute()}`,\n        }}\n      >\n        <div className=\" d-flex justify-content-between align-items-center\">\n          <div\n            className={` ${!product.id ? \"product-loading\" : \"\"}`}\n            style={{\n              boxShadow:\n                product && itemOnBasket\n                  ? \"15px 10px 15px rgba(0, 0, 0, .07)\"\n                  : \"none\",\n            }}\n          >\n            <div>\n              <div\n                style={{\n                  width: 10,\n                  height: 4,\n                  background: `${isEmptyCC()}`,\n                }}\n              ></div>\n              <div>{product.name} </div>\n              <div class=\"badge badge-primary\">\n                {product?.fournisseur?.name}\n              </div>\n              <br />\n              {/**    <strong>\n              {product.type}:{product.quantityBruteCVA}\n\n             \n            </strong>\n            <br />\n            {product.type == \"FLACON\" && (\n              <>\n                <strong>ML: {product.quantityCCCVA} ml</strong>\n                <br />\n                \n              </>           disabled={ \n              product.quantityBruteCVA === 0 && (product.quantityCCCVA == 0 || product.quantityCCCVA == null) && product.condval==0\n            }\n            )}\n            <strong>CondML: {product.condml}- Condval:{product.condval}</strong> */}\n            </div>{\" \"} </div>\n            <div>\n              {product?.id && (\n                <>\n                  {!itemOnBasket ? (\n                    <button\n                      disabled={\n                        product.quantityBruteCVA === 0 &&\n                        (product.quantityCCCVA == 0 ||\n                          product.quantityCCCVA == null)\n                      }\n                      className={\"btn btn-green btn-sm\"}\n                      onClick={handleAddToBasket}\n                    >\n                      Ajouter\n                    </button>\n                  ) : (\n                    <button\n                      disabled={\n                        product.quantityBruteCVA === 0 &&\n                        (product.quantityCCCVA == 0 ||\n                          product.quantityCCCVA == null)\n                      }\n                      className={\"btn btn-danger btn-sm\"}\n                      onClick={() => removeProduct(product?.id)}\n                    >\n                      Retirer\n                    </button>\n                  )}\n                </>\n              )}\n          </div>\n        </div>\n      </ListGroup.Item>\n    </>\n  );\n};\n\nexport default EditProductItemToMag;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\nconst EditFromMagasinItemControl = ({\n  product,\n  index,\n  state,\n  setState,\n  setRealQttCC,\n  setRealQtt,\n  realQtt,\n  realQttCC,\n}) => {\n  const dispatch = useDispatch();\n\n  const updateObjectValue = (index, key, value) => {\n    let temp_state = [...state];\n    temp_state[index] = { ...temp_state[index], [key]: value };\n    setState(temp_state);\n  };\n  const onAddQtyBrute = (value) => {\n    updateObjectValue(index, \"quantityParProduct\", value);\n  };\n\n  const getValue = () => {\n    return isEnough() == true\n      ? product?.quantityBruteCVA * 1 - 1\n      : product?.quantityBruteCVA * 1;\n  };\n  const isEnough = () => {\n    return (\n      product.quantityCCCVA - product.qttByCC < 0 &&\n      product.quantityBruteCVA - 1 - product.quantityParProduct * 1 < 0\n    );\n  };\n  return (\n    <div className=\"basket-item-control\">\n      <NumberInput\n        inputMode={\"numeric\"}\n        w={28}\n        disabled={product?.condml != 0 && product?.qttccpvente != 0}\n        step={1}\n        bg={\"whitesmoke\"}\n        onChange={(value) => {\n          onAddQtyBrute(Number(value));\n          setRealQtt(Number(value));\n          if (isEnough()) {\n            alert(\"Le stock ne satisfait pas votre commande\");\n          }\n        }}\n        min={0}\n        defaultValue={product?.quantityParProduct}\n        max={getValue()}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n    </div>\n  );\n};\nexport default EditFromMagasinItemControl;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { displayMoney, checkHasExistText } from \"../../../../utils/functions\";\nimport EditFromDepotItemControl from \"./EditFromMagasinItemControl\";\nimport { ItaNewInputDose } from \"./ItaNewInputDose\";\nimport { PhytoConditionnementInput } from \"./PhytoConditionnementInput\";\nimport { SovaxInputDose } from \"./SovaxInputDose\";\nimport FromMagasinItemPartial from './FromMagasinItemPartial';\nconst EditItem = ({ state, index, setState, product }) => {\n  const [realQttCC, setRealQttCC] = useState(null);\n  const [realQtt, setRealQtt] = useState(null);\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center border mt-3  mb-2 p-2\">\n        <div style={{ width: \"45%\" }}>\n          <p className=\"text-blue\">{product.name}</p>\n          <span className=\"text-lowercase\">\n            <strong>\n              {product.quantityParProduct != 0 &&\n                displayMoney(product.prixVente)}\n              {product.quantityParProduct == 0 &&\n                product.prixParCC != 0 && (\n                  <>\n                    {product.prixqttccvente != null &&\n                    product.prixqttccvente != 0\n                      ? displayMoney(product.prixqttccvente)\n                      : displayMoney(product.prixParCC)}\n                  </>\n                )}\n              {product.quantityParProduct != 0 &&\n                \" x \" +\n                  product.quantityParProduct +\n                  \" \" +\n                  product.type}{\" \"}\n              {product.prixqttccvente == null &&\n                product.prixqttccvente == 0 && (\n                  <>\n                    {product.qttByCC != 0 &&\n                      (product.quantityParProduct == 0 ? \" x \" : \"+\") +\n                        product.qttByCC +\n                        \"ML\"}\n                  </>\n                )}\n            </strong>\n          </span>\n        </div>\n        <div className=\"d-flex  justify-content-between align-items-center \">\n          <div className=\"text-center mr-2\">\n          <h5 className=\"mb-1\">{product.type}</h5>\n          <EditFromDepotItemControl\n            index={index}\n            state={state}\n            setState={setState}\n            product={product}\n            setRealQttCC={setRealQttCC}\n            setRealQtt={setRealQtt}\n            realQtt={realQtt}\n            realQttCC={realQttCC}\n          />\n          </div>\n           {product.type === \"FLACON\" && (\n            <div className=\"text-inline text-center\">\n              <h5 className=\"mb-1\">{product.categoryId == 3 ? \"DOSE\" : \"ML\"}</h5>\n              {checkHasExistText(product.name, \"ita new\") && (\n                <ItaNewInputDose\n                  product={product}\n                  setRealQttCC={setRealQttCC}\n                  setRealQtt={setRealQtt}\n                  realQtt={realQtt}\n                  realQttCC={realQttCC}\n                />\n              )}\n              {checkHasExistText(product.name, \"sovax\") && (\n                <SovaxInputDose\n                  setRealQttCC={setRealQttCC}\n                  setRealQtt={setRealQtt}\n                  realQtt={realQtt}\n                  realQttCC={realQttCC}\n                  product={product}\n                />\n              )}\n              {product.condml == 0 &&\n                product.qttccpvente == 0 &&\n                !checkHasExistText(product.name, \"sovax\") &&\n                !checkHasExistText(product.name, \"ita new\") && (\n                  <FromMagasinItemPartial\n                    setRealQttCC={setRealQttCC}\n                    setRealQtt={setRealQtt}\n                    realQtt={realQtt}\n                    realQttCC={realQttCC}\n                    product={product}\n                  />\n                )}\n              {product.condml !== 0 && product.qttccpvente !== 0 && (\n                <PhytoConditionnementInput product={product} />\n              )}\n            </div>\n          )}\n        </div>\n       \n      </div>\n    </div>\n  );\n};\n\nexport default EditItem;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card } from \"react-bootstrap\";\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport { displayMoney, checkHasExistText } from \"../../../../utils/functions\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n  handleMinusProductDepot,\n  handlePhtyoSpecificDepot,\n  handleSoldQuantityCCDepot,\n} from \"../../../../store/functions/function-depot\";\nimport { clearFromDepot } from \"../../../../store/fromdepot/actions/fromdepot\";\nimport EditFromDepotItem from \"./EditItem\";\nimport { HISTORIQUEVENTEVENDEUR } from \"../../../../constants/routes\";\nimport { Link } from \"react-router-dom\";\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n  const total = arr.reduce((acc, val) => acc + val, 0);\n  return total;\n};\nfunction copy(object) {\n  var output, value, key;\n  output = Array.isArray(object) ? [] : {};\n  for (key in object) {\n    value = object[key];\n    output[key] = typeof value === \"object\" ? copy(value) : value;\n  }\n  return output;\n}\nconst EditToFromMag = ({\n  state,\n  commandesclone,\n  meta,\n  setState,\n  disabled,\n  products,\n  commandes,\n}) => {\n  const [type, setType] = useState(\"direct\");\n  const [idFournisseur, setIdFournisseur] = useState(1);\n  const [vaccinateurId, setVaccinateurId] = useState(null);\n  const [emprunter, setEmprunter] = useState(null);\n  const history = useHistory();\n  const [realContent, setRealContent] = useState([]);\n\n  const { fromdepots } = useSelector((state) => ({\n    fromdepots: state.fromdepots,\n  }));\n  useEffect(() => {\n    setRealContent(commandes?.contenu);\n  }, [commandes]);\n  const dispatch = useDispatch();\n  const emprunters = useSelector(getData(\"emprunters\").value);\n  //const meta = useSelector(getData(\"commandes\").meta);\n  //const commandes = useSelector(getData(\"commandes\").value);\n  const date = new Date();\n  const [dateCom, setDateCom] = useState(date);\n  useEffect(() => {\n    //  dispatch(action(\"commandes\").fetch());\n    dispatch(action(\"emprunters\").fetch());\n  }, []);\n\n  const getContenu = () => {\n    // console.log(missing);\n    const missing = copy(realContent).filter(\n      (e) => !state.find((a) => e.id === a.id)\n    );\n    const added = state.filter(\n      (e) => !copy(realContent).find((a) => e.id === a.id)\n    );\n\n    const exist = state.map((element) =>\n      copy(realContent).find((p) => p.id === element.id)\n    );\n    return {\n      exist: exist.filter((e) => e != null),\n      added,\n      missing,\n    };\n  };\n\n  const onCheckOut = () => {\n    const { exist, added, missing } = getContenu();\n\n    dispatch(\n      action(\"commandes\").updateTransaction(\n        {\n          id: commandes?.id,\n          contenu: state,\n          commandesclone:commandesclone[0].contenu,\n          type: \"vente-cva\",\n          sorte: \"sortie\",\n          sorte: \"sortie\",\n          status: true,\n          dateCom: dateCom != null ? dateCom : date,\n          exist: exist,\n          added: added,\n          missing: missing,\n        },\n        \"update-from-magasin\"\n      )\n    );\n\n    // history.push(HISTORIQUEVENTEVENDEUR);\n  };\n\n  const onClearBasket = () => {\n    state?.forEach((element) => {\n      element.quantityParProduct = 0;\n      element.qttByCCDepot = 0;\n    });\n\n    dispatch(clearFromDepot());\n  };\n  return (\n    <>\n      <Card>\n        <Card.Header className=\" bg-dark py-3 text-white d-flex justify-content-between align-items-center\">\n          <div style={{ width: \"60%\" }}>BON DE SORTIE</div>\n        </Card.Header>\n        <div className=\"commande-vente\">\n          <Card.Body\n            style={{ padding: 12, marginTop: 3, marginRight: 2, marginLeft: 2 }}\n          >\n            <div className=\"d-flex justify-content-end\">\n              <Link\n                className=\"btn btn-primary mb-2 btn-sm\"\n                to={HISTORIQUEVENTEVENDEUR}\n              >\n                Voir l'historique de vente\n              </Link>\n            </div>\n            <div\n              style={{\n                overflowY: \"auto\",\n                height: \"350px\",\n                maxHeight: \"350px\",\n                overflowX: \"hidden\",\n              }}\n            >\n              <div class=\"form-group\">\n                <label>Date de sortie :</label>\n                <div>\n                  <input\n                    type=\"date\"\n                    disabled={disabled}\n                    onChange={(e) => setDateCom(e.target.value)}\n                    value={dateCom}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              {type === \"credit\" && (\n                <>\n                  <label>Crediteur:</label>\n                  <select\n                    disabled={disabled}\n                    className=\"form-control\"\n                    onChange={(e) => {\n                      setEmprunter(e.target.value);\n                    }}\n                  >\n                    <option value=\"\"></option>\n                    {emprunters.map((v) => (\n                      <option value={v.id}>{v.name}</option>\n                    ))}\n                  </select>\n                </>\n              )}\n              {state?.length <= 0 && (\n                <div className=\"alert alert-success \">\n                  Aucune enregistrement trouvé\n                </div>\n              )}\n              {state\n                ?.sort(\n                  (low, high) => high.quantityBruteCVA - low.quantityBruteCVA\n                )\n                .map((product, i) => (\n                  <EditFromDepotItem\n                    key={`${product?.id}_${i}`}\n                    product={product}\n                    state={state}\n                    index={i}\n                    setState={setState}\n                    basket={fromdepots}\n                    dispatch={dispatch}\n                  />\n                ))}\n            </div>\n          </Card.Body>\n\n          {state?.length > 0 && (\n            <Card.Footer className=\"d-flex align-items-center justify-content-between\">\n              <div style={{ width: \"30%\" }}>\n                <h2 className=\"p-2 text-uppercase bg-primary\">\n                  <strong data-test-id=\"total-price-orders\">\n                    Total:\n                    {displayMoney(\n                      calculateTotal(\n                        state?.map((product) => {\n                          return product.prixVente * product.quantityParProduct;\n                        })\n                      ) +\n                        calculateTotal(\n                          state?.state?.map((product) => {\n                            return product.prixParCC * product.qttByCCDepot;\n                          })\n                        )\n                    )}\n                  </strong>\n                </h2>\n              </div>\n              <div style={{ width: \"70%\" }}>\n                {state?.length > 0 && (\n                  <div className=\"d-flex text-right align-items-end justify-content-end\">\n                    <button\n                      className=\"btn btn-green btn-sm mr-2\"\n                      disabled={state?.length === 0}\n                      onClick={onCheckOut}\n                      type=\"button\"\n                    >\n                      Valider l'operation\n                    </button>\n                    <button\n                      className=\"btn btn-danger btn-sm\"\n                      onClick={onClearBasket}\n                      type=\"button\"\n                    >\n                      <span>Annuler</span>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </Card.Footer>\n          )}\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default EditToFromMag;\n","import React, { useState } from \"react\";\nimport ContentHeader from \"../../../../@adminlte/adminlte/Content/ContentHeader\";\nimport ActiveLink from \"../../../../@adminlte/adminlte/Content/ActiveLink\";\nimport Page from \"../../../../@adminlte/adminlte/Content/Page\";\nimport Content from \"../../../../@adminlte/adminlte/Content/index\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Card } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport searchByNameAndFournisseur from \"../../../../filters/searchByNameAndFournisseur\";\nimport searchByName from \"../../../../filters/searchByName\";\nimport searchByFournisseur from \"../../../../filters/searchByFournisseur\";\nimport { GetAll, Data } from \"../../../../utils/context/data-context\";\nimport EditProductItemToMag from \"./edit-item\";\nimport EditToFromMag from \"./EditFromMag\";\n\nconst EditFromMagasin = () => {\n  const { id } = useParams();\n  const [regenerate, setRegenerate] = useState(false);\n  const dispatch = useDispatch();\n  const commandes = useSelector(getData(\"commandes\").value);\n  const commandesclone = useSelector(getData(\"commandesclone\").value);\n  const metacommandes = useSelector(getData(\"commandes\").meta);\n  const products = useSelector(getData(\"products\").value);\n  const metaproducts = useSelector(getData(\"products\").meta);\n  const [productData, setProductData] = useState([]);\n  React.useEffect(() => {\n    dispatch(action(\"commandes\").get(id));\n    dispatch(action(\"commandesclone\").get(id));\n  }, [id]);\n  const [value, setValue] = useState(\"\");\n\n  const [state, setState] = useState([]);\n  React.useEffect(() => {\n    if (regenerate == true) {\n      dispatch(action(\"products\").fetch());\n      setRegenerate(false);\n    }\n    return () => {\n      setRegenerate(false);\n    };\n  }, [regenerate]);\n\n  const [identif, setIdentif] = useState();\n\n  React.useEffect(() => {\n    if (identif != null) {\n      setProductData(searchByNameAndFournisseur(products, value, identif));\n    } else {\n      setProductData(searchByName(products, value));\n    }\n  }, [value]);\n  React.useEffect(() => {\n    if (value != \"\") {\n      setProductData(searchByNameAndFournisseur(products, value, identif));\n    } else {\n      setProductData(searchByFournisseur(products, identif));\n    }\n  }, [identif]);\n\n  React.useEffect(() => {\n    dispatch(action(\"products\").fetch());\n  }, []);\n  React.useEffect(() => {\n    //recuperer la premiere ligne dans le tableau fournisseur\n    // dispatch(fetchProductsByFournisseur(identif));\n  }, [identif]);\n  React.useEffect(() => {\n    if (!metacommandes.isFetching) {\n      setState(commandes[0]?.contenu);\n    }\n  }, [metacommandes]);\n  React.useEffect(() => {\n    if (!metaproducts.isFetching) {\n      setProductData(products);\n    }\n  }, [metaproducts]);\n  const setValueOf = (val) => {\n    setState(val);\n  };\n  return (\n    <div>\n      <div className=\"bg-dark text-white p-3 d-flex justify-content-center align-items-center\">\n        <h1 className=\"\">CABINET VETERINAIRE AMBALAVAO</h1>\n      </div>\n      <Container className=\"mt-3\">\n        <Row>\n          <Col xs={6}>\n            <ListGroup>\n              <Card>\n                <Card.Header className=\"d-flex justify-content-between align-items-center bg-dark text-white\">\n                  Produits\n                </Card.Header>\n                <Card.Body>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => {\n                      setValue(e.target.value);\n                    }}\n                    placeholder=\"Rechercher un produit\"\n                    className=\"form-control mb-2\"\n                  />\n                  <GetAll model=\"fournisseurs\">\n                    <Data>\n                      {({ data, meta }) => (\n                        <div className=\"my-2\">\n                          <select\n                            className=\"form-control\"\n                            selected={identif == 2}\n                            onChange={(e) => {\n                              setIdentif(e.target.value);\n                            }}\n                          >\n                            <option value=\"\">\n                              Selectionner un fournisseur\n                            </option>\n                            {data.map((d) => (\n                              <option value={d.id}>{d.name}</option>\n                            ))}\n                          </select>\n                        </div>\n                      )}\n                    </Data>\n                  </GetAll>\n                  <div\n                    style={{\n                      overflowY: \"auto\",\n                      height: \"350px\",\n                      maxHeight: \"350px\",\n                      overflowX: \"hidden\",\n                    }}\n                  >\n                    <>\n                      {productData.map((p) => (\n                        <EditProductItemToMag\n                          state={state}\n                          setState={setState}\n                          product={p}\n                        />\n                      ))}\n                      {productData.length == 0 &&\n                        \"Aucune enregistrement trouvé\"}\n                    </>{\" \"}\n                  </div>\n                </Card.Body>\n              </Card>\n            </ListGroup>\n          </Col>\n          <Col xs={6}>\n            <EditToFromMag\n              state={state}\n              meta={metacommandes}\n              commandesclone={commandesclone}\n              disabled={metaproducts.isFetching}\n              setState={setState}\n              products={products}\n              commandes={commandes[0]}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default EditFromMagasin;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,Text\n} from \"@chakra-ui/react\";\nconst EditToMagItemControl = ({\n  product,\n  index,\n  state,\n  setState,\n  setRealQttCC,\n  setRealQtt,\n  stock,\n  realcommand,\n  realQtt,\n  realQttCC,\n}) => {\n  function clone(obj) {\n    if (null == obj || \"object\" != typeof obj) return obj;\n    var copy = obj.constructor();\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n    return copy;\n  }\n\n  const dispatch = useDispatch();\n  const updateObjectValue = (index, key, value) => {\n    let temp_state = [...state];\n    temp_state[index] = { ...temp_state[index], [key]: value };\n    setState(temp_state);\n  };\n  const onAddQtyBrute = (value) => {\n    updateObjectValue(index, \"quantityParProduct\", value);\n  };\n  \n  const onAddQtyRestitue = (value) => {\n    updateObjectValue(index, \"quantityrestitueParProduct\", value);\n  };\n  const getValue = () => {\n    return isEnough() == true\n      ? product?.quantityBrute * 1 - 1\n      : product?.quantityBrute * 1;\n  };\n  const isEnough = () => {\n    return stock?.quantityBruteCVA < realcommand?.quantityParProduct;\n  };\n  return (\n    <div className=\"basket-item-control\">\n      {isEnough() ? (\n        <>\n          <NumberInput\n            inputMode={\"numeric\"}\n            w={28}\n            step={1}\n            disabled\n            bg={\"whitesmoke\"}\n            onChange={(value) => {\n              onAddQtyBrute(Number(value));\n              setRealQtt(Number(value));\n              if (\n                stock?.quantityBruteCVA - realcommand?.quantityParProduct <\n                0\n              ) {\n                alert(\"Le stock ne satisfait pas votre commande\");\n              }\n            }}\n            defaultValue={product?.quantityParProduct}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n          <Text textTransform=\"uppercase\">Restituable</Text>\n          <NumberInput\n            inputMode={\"numeric\"}\n            w={28}\n            step={1}\n            bg={\"whitesmoke\"}\n            min={0}\n            onChange={(value) => {\n              onAddQtyRestitue(Number(value));\n            }}\n            defaultValue={stock?.quantityBruteCVA}\n            max={stock?.quantityBruteCVA}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n        </>\n      ) : (\n        <>\n          <NumberInput\n            inputMode={\"numeric\"}\n            w={28}\n            step={1}\n            bg={\"whitesmoke\"}\n            onChange={(value) => {\n              onAddQtyBrute(Number(value));\n              setRealQtt(Number(value));\n              if (\n                stock?.quantityBruteCVA - realcommand?.quantityParProduct <\n                0\n              ) {\n                alert(\"Le stock ne satisfait pas votre commande\");\n              }\n            }}\n            min={0}\n            defaultValue={product?.quantityParProduct}\n            max={stock?.quantityBruteCVA}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n        </>\n      )}\n    </div>\n  );\n};\nexport default EditToMagItemControl;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { displayMoney, checkHasExistText } from \"../../../../utils/functions\";\nimport EditToMagItemControl from \"./EditToMagItemControl\";\nconst EditItem = ({ state, index, setState, cloneCommandes,product, realstock,realcommand }) => {\n  const [realQttCC, setRealQttCC] = useState(null);\n  const [realQtt, setRealQtt] = useState(null);\n  const stock = realstock.find((r) => r.id == product.id);\n  const clc = cloneCommandes?.contenu.find(p => p.id == product.id);\n  return (\n    <div\n      className=\" mb-2 p-2\"\n      style={{\n        opacity: stock?.quantityBruteCVA < clc?.quantityParProduct ? 0.8 : 1,\n        border: stock?.quantityBruteCVA < clc?.quantityParProduct ? \"1px solid red\" : '1px solid gray'\n      }}\n    >\n\n      {stock?.quantityBruteCVA < clc?.quantityParProduct && (\n        <div className=\"text-danger text-sm\">\n          ** Des operations ont ête déja faite apres la sortie vers magasin et vous ne pourrez pas retourner tous les produits au depôt**\n        </div>\n      )}\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <div style={{ width: \"45%\" }}>\n          <p className=\"text-blue\">{product.name}</p>\n          <span className=\"text-lowercase\">\n            <strong>\n              {product.quantityParProduct != 0 &&\n                displayMoney(product.prixVente)}\n              {product.quantityParProduct == 0 && product.prixParCC != 0 && (\n                <>\n                  {product.prixqttccvente != null && product.prixqttccvente != 0\n                    ? displayMoney(product.prixqttccvente)\n                    : displayMoney(product.prixParCC)}\n                </>\n              )}\n              {product.quantityParProduct != 0 &&\n                \" x \" + product.quantityParProduct + \" \" + product.type}{\" \"}\n              {product.prixqttccvente == null &&\n                product.prixqttccvente == 0 && (\n                  <>\n                    {product.qttByCC != 0 &&\n                      (product.quantityParProduct == 0 ? \" x \" : \"+\") +\n                        product.qttByCC +\n                        \"ML\"}\n                  </>\n                )}\n            </strong>\n          </span>\n        </div>\n        <div className=\"text-inline text-center\">\n          <h5 className=\"mb-1\">{product.type}</h5>\n          <EditToMagItemControl\n            index={index}\n            state={state}\n            setState={setState}\n            product={product}\n            realcommand={clc}\n            setRealQttCC={setRealQttCC}\n            setRealQtt={setRealQtt}\n            realQtt={realQtt}\n            stock={stock}\n            realQttCC={realQttCC}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditItem;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card } from \"react-bootstrap\";\nimport _ from 'lodash';\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport { displayMoney, checkHasExistText } from \"../../../../utils/functions\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  handleMinusProductDepot,\n  handlePhtyoSpecificDepot,\n  handleSoldQuantityCCDepot,\n} from \"../../../../store/functions/function-depot\";\nimport { clearFromDepot } from \"../../../../store/fromdepot/actions/fromdepot\";\nimport EditFromDepotItem from \"./EditItem\";\nimport { HISTORIQUESORTIECVA } from \"../../../../constants/routes\";\nimport EditItem from \"./EditItem\";\nconst calculateTotal = (arr) => {\n  if (!arr || arr?.length === 0) return 0;\n  const total = arr.reduce((acc, val) => acc + val, 0);\n  return total;\n};\nfunction copy(object) {\n  var output, value, key;\n  output = Array.isArray(object) ? [] : {};\n  for (key in object) {\n    value = object[key];\n    output[key] = typeof value === \"object\" ? copy(value) : value;\n  }\n  return output;\n}\nconst EditTo = ({ state, meta, setState, realstock, disabled,cloneCommandes, commandes }) => {\n  const [type, setType] = useState(\"direct\");\n  const [idFournisseur, setIdFournisseur] = useState(1);\n  const [vaccinateurId, setVaccinateurId] = useState(null);\n  const [emprunter, setEmprunter] = useState(null);\n  const history = useHistory();\n  const [realContent, setRealContent] = useState([]);\n\n  const { tomagasins } = useSelector((state) => ({\n    tomagasins: state.tomagasins,\n  }));\n  useEffect(() => {\n    setRealContent(commandes?.contenu);\n  }, [commandes]);\n  const dispatch = useDispatch();\n  const emprunters = useSelector(getData(\"emprunters\").value);\n  //const meta = useSelector(getData(\"commandes\").meta);\n  //const commandes = useSelector(getData(\"commandes\").value);\n  const date = new Date();\n  const [dateCom, setDateCom] = useState(date);\n  useEffect(() => {\n    //  dispatch(action(\"commandes\").fetch());\n    //dispatch(action(\"emprunters\").fetch());\n  }, []);\n  function inArray(value, values) {\n    for (var i = 0; i < values.length; i++) {\n      if (value === values[i]) return true;\n    }\n    return false;\n  }\n\n  function isInArray(value, array) {\n    return array.find((a) => value.id === a.id);\n  }\n  const getContenu = () => {\n    // console.log(missing);\n    const missing = copy(realContent).filter(\n      (e) => !state.find((a) => e.id === a.id)\n    );\n    /* missing.forEach((element) => {\n\n      action(\"products\").update({\n        id: element.id,\n        quantityBrute: element.quantityBrute - element.quantityParProduct,\n        quantityParProduct: 0,\n      });\n    });*/\n    const added = state.filter(\n      (e) => !copy(realContent).find((a) => e.id === a.id)\n    );\n\n    const exist = state.map((element) => {\n      let commandeLast = copy(realContent).find((p) => p.id === element.id);\n\n      if (commandeLast != null || commandeLast != undefined) {\n        // if(element.quantityParProduct){}\n        let qtt = 0;\n        if (\n          element.quantityParProduct * 1 >\n          commandeLast.quantityParProduct * 1\n        ) {\n          qtt =\n            element.quantityParProduct * 1 -\n            commandeLast.quantityParProduct * 1;\n          element.quantityBrute = commandeLast.quantityBrute - qtt;\n          element.quantityBruteCVA += qtt;\n        }\n        if (\n          commandeLast.quantityParProduct * 1 >\n          element.quantityParProduct * 1\n        ) {\n          qtt =\n            commandeLast.quantityParProduct * 1 -\n            element.quantityParProduct * 1;\n          element.quantityBrute = commandeLast.quantityBrute + qtt;\n          element.quantityBruteCVA -= qtt;\n        }\n        return element;\n      }\n    });\n    return {\n      exist: exist.filter((e) => e != null),\n      added,\n      missing,\n    };\n  };\n\n  const onCheckOut = () => {\n    const { exist, added, missing } = getContenu();\n    dispatch(\n      action(\"commandes\").updateTransaction(\n        {\n          id: commandes?.id,\n          contenu: state,\n          type: \"cva\",\n          sorte: \"sortie\",\n          status: true,\n          dateCom: dateCom != null ? dateCom : date,\n          exist: exist,\n          added: added,\n          missing: missing,\n        },\n        \"update-to-magasin\"\n      )\n    );\n     history.push(HISTORIQUESORTIECVA);\n  };\n\n  /* const onCheckOut = () => {\n    const { exist, added, missing } = getContenu();\n    console.log(\"state\", state.length);\n    console.log(\"realcont\", realContent.length);\n    console.log(\"exist\", JSON.stringify(exist));\n    console.log(\"added\", JSON.stringify(added));\n    console.log(\"missing\", JSON.stringify(missing));\n     tomagasins.forEach((element) => {\n      delete element.busy;\n      delete element.pendingCreate;\n      handleMinusProductDepot(element);\n      if (element.condmldepot != 0 && element.qttccpventedepot != 0) {\n        handlePhtyoSpecificDepot(element);\n      } else {\n        handleSoldQuantityCCDepot(element);\n      }\n      console.log(element);\n    });*/\n  //console.log(tomagasins);\n  /*  dispatch(\n      action(\"commandes\").create({\n        id: Math.floor(Date.now() / 1000),\n        contenu: state?.state,\n        type: \"vente-depot\",\n        sorte: \"sortie\",\n        qtteBrute: 1,\n        qtteCC: 1,\n        vaccinateurId: vaccinateurId,\n        status: type === \"direct\" ? true : false,\n        emprunterId: emprunter,\n        dateCom: dateCom != null ? dateCom : date,\n      })\n    );*/\n  /*if (!meta.error) {\n      state?.state?.forEach((element) => {\n        let idElement = element.id;\n        element.quantityParProduct = 0;\n        element.qttByCCDepot = 0;\n        element.qttyspecificmirrordepot = 0;\n        element.id = idElement;\n        dispatch(action(\"products\").update(element));\n      });\n    }\n    //dispatch(clearFromDepot());\n    //   history.push(SORTIE);\n  };*/\n\n  const onClearBasket = () => {\n    state?.forEach((element) => {\n      element.quantityParProduct = 0;\n      element.qttByCC = 0;\n    });\n\n    dispatch(clearFromDepot());\n  };\n  return (\n    <>\n      <Card>\n        <Card.Header className=\" bg-dark py-3 text-white d-flex justify-content-between align-items-center\">\n          <div style={{ width: \"60%\" }}>BON DE SORTIE</div>\n        </Card.Header>\n        <div className=\"commande-vente\">\n          <Card.Body\n            style={{ padding: 12, marginTop: 3, marginRight: 2, marginLeft: 2 }}\n          >\n            <div\n              style={{\n                overflowY: \"auto\",\n                height: \"350px\",\n                maxHeight: \"350px\",\n                overflowX: \"hidden\",\n              }}\n            >\n            <div className=\"alert alert-warning\">\n             <span className=\"text-uppercase\">Attention !!!</span> , la modification d'un bon de sortie entraine aussi la mis à jour de stock du produit\n            </div>\n              <div class=\"form-group\">\n                <label>Date de sortie :</label>\n                <div>\n                  <input\n                    disabled={disabled}\n                    type=\"date\"\n                    onChange={(e) => setDateCom(e.target.value)}\n                    value={dateCom}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              {type === \"credit\" && (\n                <>\n                  <label>Crediteur:</label>\n                  <select\n                    disabled={disabled}\n                    className=\"form-control\"\n                    onChange={(e) => {\n                      setEmprunter(e.target.value);\n                    }}\n                  >\n                    <option value=\"\"></option>\n                    {emprunters.map((v) => (\n                      <option value={v.id}>{v.name}</option>\n                    ))}\n                  </select>\n                </>\n              )}\n              {state?.length <= 0 && (\n                <div className=\"alert alert-success \">\n                  Aucune enregistrement trouvé\n                </div>\n              )}\n              {state?.map((product, i) => (\n                <>\n                <EditItem\n                  key={`${product?.id}_${i}`}\n                  product={_.cloneDeep(product)}\n                  state={state}\n                  index={i}\n                  realcommand={product}\n                  cloneCommandes={cloneCommandes}\n                  realstock={realstock}\n                  setState={setState}\n                  basket={tomagasins}\n                  dispatch={dispatch}\n                /></>\n              ))}\n            </div>\n          </Card.Body>\n\n          {state?.length > 0 && (\n            <Card.Footer className=\"d-flex align-items-center justify-content-between\">\n              <div style={{ width: \"30%\" }}>\n                <h2 className=\"p-2 text-uppercase bg-primary\">\n                  <strong data-test-id=\"total-price-orders\">\n                    Total:\n                    {displayMoney(\n                      calculateTotal(\n                        state?.map((product) => {\n                          return product.prixVente * product.quantityParProduct;\n                        })\n                      ) +\n                        calculateTotal(\n                          state?.state?.map((product) => {\n                            return product.prixParCC * product.qttByCC;\n                          })\n                        )\n                    )}\n                  </strong>\n                </h2>\n              </div>\n              <div style={{ width: \"70%\" }}>\n                {state?.length > 0 && (\n                  <div className=\"d-flex text-right align-items-end justify-content-end\">\n                    <button\n                      disabled={disabled}\n                      className=\"btn btn-green btn-sm mr-2\"\n                      disabled={state?.length === 0}\n                      onClick={onCheckOut}\n                      type=\"button\"\n                    >\n                      Valider l'operation\n                    </button>\n                    <button\n                      disabled={disabled}\n                      className=\"btn btn-danger btn-sm\"\n                      onClick={onClearBasket}\n                      type=\"button\"\n                    >\n                      <span>Annuler</span>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </Card.Footer>\n          )}\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default EditTo;\n","import React, { useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst EditProductItemToMag = ({ state, setState, product, cloneCommandes }) => {\n  const dispatch = useDispatch();\n\n  const itemOnBasket = !!state?.find((item) => item?.id === product.id);\n  const clc = cloneCommandes?.contenu.find((p) => p.id == product.id);\n  const canMinus = product?.quantityBruteCVA < clc?.quantityParProduct;\n  const removeProduct = (id) => {\n    setState(state.filter((t) => t.id !== id));\n  };\n  const handleAddToBasket = () => {\n    setState(\n      state.some((p) => p.id === product.id) ? state : [product, ...state]\n    );\n  };\n\n  return (\n    <>\n      <ListGroup.Item\n        className=\"mb-2 mr-3\"\n        style={{ border: \"1px solid gray\" }}\n      >\n        <div className=\" d-flex justify-content-between align-items-center\">\n          <div\n            className={` ${!product.id ? \"product-loading\" : \"\"}`}\n            style={{\n              boxShadow:\n                product && itemOnBasket\n                  ? \"15px 10px 15px rgba(0, 0, 0, .07)\"\n                  : \"none\",\n            }}\n          >\n            <div>\n              {product.name}{\" \"}\n              <div class=\"badge badge-primary\">\n                {product?.fournisseur?.name}\n              </div>\n              <br />\n              {/**    <strong>\n              {product.type}:{product.quantityBruteCVA}\n\n             \n            </strong>\n            <br />\n            {product.type == \"FLACON\" && (\n              <>\n                <strong>ML: {product.quantityCCCVA} ml</strong>\n                <br />\n                \n              </>           disabled={ \n              product.quantityBruteCVA === 0 && (product.quantityCCCVA == 0 || product.quantityCCCVA == null) && product.condval==0\n            }\n            )}\n            <strong>CondML: {product.condml}- Condval:{product.condval}</strong> */}\n            </div>{\" \"}\n            <div>\n              {product?.id && (\n                <>\n                  {!itemOnBasket ? (\n                    <button\n\n                      className={\"btn btn-green btn-sm\"}\n                      onClick={handleAddToBasket}\n                    >\n                      Ajouter\n                    </button>\n                  ) : (\n                    <button\n                    disabled={canMinus}\n                      className={\"btn btn-danger btn-sm\"}\n                      onClick={() => removeProduct(product?.id)}\n                    >\n                      Retirer\n                    </button>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </ListGroup.Item>\n    </>\n  );\n};\n\nexport default EditProductItemToMag;\n","import React, { useState } from \"react\";\nimport ContentHeader from \"../../../../@adminlte/adminlte/Content/ContentHeader\";\nimport ActiveLink from \"../../../../@adminlte/adminlte/Content/ActiveLink\";\nimport Page from \"../../../../@adminlte/adminlte/Content/Page\";\nimport Content from \"../../../../@adminlte/adminlte/Content/index\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Card } from \"react-bootstrap\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { action, getData } from \"../../../../utils/lib/call\";\nimport searchByNameAndFournisseur from \"../../../../filters/searchByNameAndFournisseur\";\nimport searchByName from \"../../../../filters/searchByName\";\nimport searchByFournisseur from \"../../../../filters/searchByFournisseur\";\nimport { GetAll, Data } from \"../../../../utils/context/data-context\";\nimport EditTo from \"./EditTo\";\nimport EditProductItemToMag from \"./edit-item\";\nimport { HISTORIQUEVENTEVENDEUR } from \"../../../../constants/routes\";\n\nconst EditToMagasin = () => {\n  const { id } = useParams();\n  const history = useHistory();\n  const [regenerate, setRegenerate] = useState(false);\n  const dispatch = useDispatch();\n  const commandes = useSelector(getData(\"commandes\").value);\n  const commandesclone = useSelector(getData(\"commandesclone\").value);\n  const metacommandes = useSelector(getData(\"commandes\").meta);\n  const products = useSelector(getData(\"products\").value);\n  const metaproducts = useSelector(getData(\"products\").meta);\n  const [productData, setProductData] = useState([]);\n  React.useEffect(() => {\n    dispatch(action(\"commandesclone\").get(id));\n    dispatch(action(\"commandes\").get(id));\n  }, [id]);\n  const [value, setValue] = useState(\"\");\n\n  const [state, setState] = useState([]);\n  React.useEffect(() => {\n    if (regenerate == true) {\n      dispatch(action(\"products\").fetch());\n      setRegenerate(false);\n    }\n    return () => {\n      setRegenerate(false);\n    };\n  }, [regenerate]);\n\n  const [identif, setIdentif] = useState();\n\n  React.useEffect(() => {\n    if (identif != null) {\n      setProductData(searchByNameAndFournisseur(products, value, identif));\n    } else {\n      setProductData(searchByName(products, value));\n    }\n  }, [value]);\n  React.useEffect(() => {\n    if (value != \"\") {\n      setProductData(searchByNameAndFournisseur(products, value, identif));\n    } else {\n      setProductData(searchByFournisseur(products, identif));\n    }\n  }, [identif]);\n\n  React.useEffect(() => {\n    dispatch(action(\"products\").fetch());\n  }, []);\n  React.useEffect(() => {\n    //recuperer la premiere ligne dans le tableau fournisseur\n    // dispatch(fetchProductsByFournisseur(identif));\n  }, [identif]);\n  React.useEffect(() => {\n    if (!metacommandes.isFetching) {\n      setState(commandes[0]?.contenu);\n    }\n  }, [metacommandes]);\n  React.useEffect(() => {\n    if (!metaproducts.isFetching) {\n      setProductData(products);\n    }\n  }, [metaproducts]);\n  const setValueOf = (val) => {\n    setState(val);\n  };\n  return (\n    <Content>\n      <ContentHeader title=\"Edition d'un sortie vers magasin\">\n        <ActiveLink title=\"Edition d'un sortie vers magasin\"></ActiveLink>\n      </ContentHeader>\n      <Page>\n        <Row className=\"py-2\">\n          <Col xs={6}>\n            <ListGroup>\n              <Card>\n                <Card.Header className=\"d-flex justify-content-between align-items-center bg-dark text-white\">\n                  Produits\n                </Card.Header>\n                <Card.Body>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => {\n                      setValue(e.target.value);\n                    }}\n                    placeholder=\"Rechercher un produit\"\n                    className=\"form-control mb-2\"\n                  />\n                  <GetAll model=\"fournisseurs\">\n                    <Data>\n                      {({ data, meta }) => (\n                        <div className=\"my-2\">\n                          <select\n                            className=\"form-control\"\n                            selected={identif == 2}\n                            onChange={(e) => {\n                              setIdentif(e.target.value);\n                            }}\n                          >\n                            <option value=\"\">\n                              Selectionner un fournisseur\n                            </option>\n                            {data.map((d) => (\n                              <option value={d.id}>{d.name}</option>\n                            ))}\n                          </select>\n                        </div>\n                      )}\n                    </Data>\n                  </GetAll>\n                  <div\n                    style={{\n                      overflowY: \"auto\",\n                      height: \"350px\",\n                      maxHeight: \"350px\",\n                      overflowX: \"hidden\",\n                    }}\n                  >\n                    <>\n                      {productData.map((p) => (\n                        <EditProductItemToMag\n                          state={state}\n                          setState={setState}\n                          cloneCommandes={commandesclone[0]}\n                          product={p}\n                        />\n                      ))}\n                      {productData.length == 0 &&\n                        \"Aucune enregistrement trouvé\"}\n                    </>{\" \"}\n                  </div>\n                </Card.Body>\n              </Card>\n            </ListGroup>\n          </Col>\n          <Col xs={6}>\n            <EditTo\n              disabled={metaproducts.isFetching}\n              state={state}\n              meta={metacommandes}\n              cloneCommandes={commandesclone[0]}\n              setState={setState}\n              realstock={products}\n              commandes={commandes[0]}\n            />\n          </Col>\n        </Row>\n      </Page>\n    </Content>\n  );\n};\n\nexport default EditToMagasin;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport AdminLTE from \"./@adminlte/AdminLTE\";\nimport App from \"./App\";\nimport Approv from \"./components/Approv\";\nimport AddProd from \"./components/composants/AddProd\";\nimport DetailApprov from \"./components/composants/Approvis/detail\";\nimport ListApprov from \"./components/composants/Approvis/list\";\nimport BSortie from \"./components/composants/BSortie\";\nimport Commande from \"./components/composants/Commande\";\nimport Credit from \"./components/composants/Credit\";\nimport CreditVaccinateur from \"./components/composants/CreditVaccinateur\";\nimport Detail from \"./components/composants/Detail\";\nimport DetailSortie from \"./components/composants/DetailSortie\";\nimport Direct from \"./components/composants/Direct\";\nimport Journal from \"./components/composants/Journal\";\nimport ParametrageSuppl from \"./components/composants/ParametrageSuppl\";\nimport { Perime } from \"./components/composants/Perime\";\nimport Create from \"./components/composants/product/create\";\nimport DetailProduct from \"./components/composants/product/detail\";\nimport Edit from \"./components/composants/product/edit\";\nimport { ProductAll } from \"./components/composants/product/ProductAll\";\nimport ProductByCategory from \"./components/composants/ProductByCategory\";\nimport ProductByFournisseur from \"./components/composants/ProductByFournisseur\";\nimport { Rupture } from \"./components/composants/Rupture\";\nimport Entree from \"./components/Entree\";\nimport Header from \"./components/Header\";\nimport NouvelleFacture from \"./components/NouvelleFacture\";\nimport Parametres from \"./components/Parametres\";\nimport Sortie from \"./components/Sortie\";\nimport EditSortie from \"./components/fromDepot/EditSortie\";\nimport {\n  ADMIN,\n  DEPOTOMAGASIN,\n  DETAILVENDEUR,\n  ETATSTOCKMAGASIN,\n  HISTORIQUESORTIECVA,\n  HISTORIQUEVENTEVENDEUR,\n  HISTORIQUEVENTEVENDEURVUEPARADMIN,\n  SIGNIN,\n  SIGNUP,\n  VENDEUR,\n  EDITERFACTURE,\n  BNC_DEPOT,\n  EDIT_SORTIE,\n  DETAIL_SORTIE,\n  EDITDEPOTTOMAGASIN,\n  EDITFROMMAGASIN,\n  TDB_DEPOT_VERS_MAGASIN,\n  DEPOT_MAGASIN_DETAIL,\n  DETAIL_MAGASIN_VENTE,\n} from \"./constants/routes\";\n\nimport PublicRoute from \"./routes/PublicRoute\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport {\n  APPROV,\n  HOME,\n  PERIME,\n  RUPTURE,\n  CREDIT,\n  DETAIL,\n  CREDITVACCINATEUR,\n  JOURNAL,\n  PARAMETRES,\n  DIRECT,\n  PRODUCTBYFOURNISSEUR,\n  PRODUCTBYCATEGORY,\n  PRODUCTS,\n  CREATEPRODUCT,\n  EDITPRODUCT,\n  PARASUPPL,\n  ENTREE,\n  SORTIE,\n  BONDESORTIE,\n  PRODUCTDETAIL,\n  BSORTIE,\n  ADDPROD,\n  NOUVELLEFACTURE,\n  DETAILAPPROV,\n  LISTAPPROV,\n  TDB_FACTURES,\n  TDB_VENTE_CBV,\n} from \"./constants/routes\";\nimport { Auth, Data } from \"./context/auth-context\";\nimport Vendeur from \"./components/composants/vendeur\";\nimport VendeurRoute from \"./routes/VendeurRoute\";\nimport { logout } from \"./store/actions/user\";\nimport { useDispatch } from \"react-redux\";\nimport { AdminDashboard } from \"./components/composants/admin\";\n\nimport { DepotToMagasin } from \"./components/composants/admin/depot-to-magasin\";\nimport { HistoriqueSortieCva } from \"./components/composants/admin/tomagasin/list\";\nimport { HistoriqueVenteVendeur } from \"./components/composants/vendeur/fromMagasin/list\";\nimport { EtatStockMagasin } from \"./components/composants/admin/etat\";\nimport { MagasinVente } from \"./components/composants/admin/magasin-vente\";\nimport DetailVendeur from \"./components/composants/vendeur/fromMagasin/DetailVendeur\";\nimport AdminRoute from \"./routes/AdminRoute\";\nimport { EditerApprov } from \"./components/composants/Approvis/editer\";\nimport BonDepot from \"./components/fromDepot/index\";\nimport { Facturation } from \"./components/composants/journal/Facturation\";\nimport {VenteCBV} from \"./components/composants/journal/VenteCBV\";\nimport { DepotVersMagasin } from \"./components/composants/journal/DepotVersMagasin\";\nimport DepotToMagasinDetail from \"./components/composants/admin/tomagasin/DepotToMagasinDetail\";\nimport DetailMagasinVente from \"./components/composants/vendeur/fromMagasin/DetailMagasinVente\";\nimport EditFromMagasin from './components/composants/vendeur/fromMagasin/EditFromMagasin';\nimport EditToMagasin from './components/composants/admin/tomagasin/EditToMagasin';\nfunction Routes() {\n  const dispatch = useDispatch();\n  return (\n    <BrowserRouter>\n      {/* <Header />*/}\n      {/*<Auth>\n        <Data>\n          {({ isLoggedIn }) => (\n            <div className=\"top-3\">\n            <div className=\"d-flex justify-content-end\">\n              {isLoggedIn ? (\n                <div className=\"m-3\">\n                  <button  class=\"btn btn-primary\"  onClick={() => {\n                    dispatch(logout());\n                  }}>Déconnexion</button>\n                </div>\n              ) : (\n                <>\n                  <p>Se connecter</p> \n                </>\n              )}\n            </div></div>\n          )}\n        </Data>\n      </Auth>*/}\n      <Switch>\n        <Route path={HOME} exact component={App} />\n        <AdminRoute path={TDB_FACTURES} component={Facturation} />\n        <AdminRoute path={TDB_VENTE_CBV} component={VenteCBV} />\n        <AdminRoute\n          path={TDB_DEPOT_VERS_MAGASIN}\n          component={DepotVersMagasin}\n        />\n        <VendeurRoute path={VENDEUR} component={Vendeur} />\n        <VendeurRoute path={DETAILVENDEUR} component={DetailVendeur} />\n        <VendeurRoute path={EDITFROMMAGASIN} component={EditFromMagasin} />\n        <AdminRoute path={APPROV} component={Approv} />\n        <AdminRoute path={PERIME} component={Perime} />\n        <AdminRoute path={PARASUPPL} component={ParametrageSuppl} />\n        <AdminRoute path={PRODUCTS} component={ProductAll} />\n        <AdminRoute path={BNC_DEPOT} component={BonDepot} />\n        <AdminRoute path={EDITPRODUCT} component={Edit} />\n        <AdminRoute path={CREATEPRODUCT} component={Create} />\n        <AdminRoute path={JOURNAL} component={Journal} />\n        <AdminRoute path={RUPTURE} component={Rupture} />\n        <AdminRoute path={CREDIT} component={Credit} />\n        <AdminRoute path={PARAMETRES} component={Parametres} />\n        <AdminRoute path={CREDITVACCINATEUR} component={CreditVaccinateur} />\n        <AdminRoute path={DIRECT} component={Direct} />\n        <AdminRoute path={BONDESORTIE} component={BonDepot} />\n        <AdminRoute\n          path={PRODUCTBYFOURNISSEUR}\n          component={ProductByFournisseur}\n        />\n        <AdminRoute path={PRODUCTBYCATEGORY} component={ProductByCategory} />\n        <AdminRoute path={SORTIE} component={Sortie} />\n        <AdminRoute path={EDIT_SORTIE} component={EditSortie} />\n\n        <AdminRoute path={ENTREE} component={Entree} />\n        <AdminRoute path={DETAIL} component={Detail} />\n        <AdminRoute path={DETAIL_SORTIE} exact component={DetailSortie} />\n        <AdminRoute path={PRODUCTDETAIL} component={DetailProduct} />\n        <AdminRoute path={BSORTIE} component={BSortie} />\n        <AdminRoute path={ADDPROD} component={AddProd} />\n        <AdminRoute path={NOUVELLEFACTURE} component={NouvelleFacture} />\n        <AdminRoute path={EDITERFACTURE} component={EditerApprov} />\n\n        <AdminRoute path={LISTAPPROV} component={ListApprov} />\n        <AdminRoute path={DETAILAPPROV} exact component={DetailApprov} />\n\n        <AdminRoute path={SIGNIN} component={SignIn} />\n        <AdminRoute path={SIGNUP} component={SignUp} />\n        <AdminRoute path={ADMIN} component={AdminDashboard} />\n        <AdminRoute path={EDITDEPOTTOMAGASIN} component={EditToMagasin} />\n\n        <AdminRoute\n          path={HISTORIQUESORTIECVA}\n          component={HistoriqueSortieCva}\n        />\n        <AdminRoute path={DEPOT_MAGASIN_DETAIL} component={DepotToMagasinDetail} />\n        <AdminRoute path={ETATSTOCKMAGASIN} component={EtatStockMagasin} />\n        <VendeurRoute\n          path={HISTORIQUEVENTEVENDEUR}\n          component={HistoriqueVenteVendeur}\n        />\n        <AdminRoute\n          path={HISTORIQUEVENTEVENDEURVUEPARADMIN}\n          component={MagasinVente}\n          \n        />\n         <AdminRoute\n          path={DETAIL_MAGASIN_VENTE}\n          component={DetailMagasinVente}\n          \n        />\n        \n      </Switch>\n      {/*<Footer/>*/}\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from \"redux-thunk\";\nimport routeReducer from './reducers/index';\nimport { undoMiddeware } from \"react-redux-undo\";\n\nconst bindMiddleware = (middleware) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n  return applyMiddleware(...middleware);\n};\nconst { persistStore, persistReducer } = require(\"redux-persist\");\nconst storage = require(\"redux-persist/lib/storage\").default;\nconst persistConfig = {\n  key: \"root\",\n  whitelist: ['auth','profile', 'basket', 'approvisionnement'],\n  storage,\n};\nconst persistedReducer = persistReducer(persistConfig, routeReducer)\nlet store = createStore(persistedReducer, bindMiddleware([thunkMiddleware]))\nlet persistor = persistStore(store)\nexport { store, persistor };","import { reducersFor } from \"../../utils/lib\";\nexport default reducersFor('products',{key:\"id\"})","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n  } from '../../constants/actions'\n  \n  const user = JSON.parse(localStorage.getItem('user'))\n  \n  const initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null }\n  \n  // eslint-disable-next-line import/no-anonymous-default-export\n  export default function (state = initialState, action) {\n    const { type, payload } = action\n  \n    switch (type) {\n      case REGISTER_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: true,\n          user: payload.user?.user,\n          success:payload.success,\n          error:null\n        }\n      case REGISTER_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n          success:null,\n          error: payload.error\n        }\n      case LOGIN_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: true,\n          user: payload.user?.user,\n          success: payload.success,\n          error: null\n        }\n      case LOGIN_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n          token: null,\n          success:null,\n          error: payload.error\n        }\n      case LOGOUT:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n          token: null\n        }\n      default:\n        return state\n    }\n  }\n  ","import { reducersFor } from \"../../utils/lib\";\nexport default reducersFor('commandes')","import { reducersFor } from \"../../utils/lib\";\n\nexport default reducersFor('fournisseurs')","import { reducersFor } from \"../../utils/lib\";\nexport default reducersFor('emprunters')","import { reducersFor } from \"../../utils/lib\";\nexport default reducersFor('vaccinateurs')","import { reducersFor } from \"../../utils/lib\";\n\nexport default reducersFor('categories')","import { reducersFor } from \"../../utils/lib\";\nexport default reducersFor('approvis')","import { reducersFor } from \"../../utils/lib\";\nexport default reducersFor('parametres')","import {\n    RESET_CHECKOUT, SET_CHECKOUT_PAYMENT_DETAILS, SET_CHECKOUT_SHIPPING_DETAILS\n  } from '../constants';\n  \n  const defaultState = {\n    shipping: {},\n    payment: {\n      type: '',\n      name: '',\n      cardnumber: '',\n      expiry: '',\n      ccv: ''\n    }\n  };\n  \n  export default (state = defaultState, action) => {\n    switch (action.type) {\n      case SET_CHECKOUT_SHIPPING_DETAILS:\n        return {\n          ...state,\n          shipping: action.payload\n        };\n      case SET_CHECKOUT_PAYMENT_DETAILS:\n        return {\n          ...state,\n          payment: action.payload\n        };\n      case RESET_CHECKOUT:\n        return defaultState;\n      default:\n        return state;\n    }\n  };\n  ","import { reducersFor } from \"../../utils/lib\";\nexport default reducersFor('sortiedepots')","import { combineReducers } from \"redux\";\nimport { applyUndo } from \"react-redux-undo\";\n\nimport productReducer from \"./products\";\nimport userReducer from \"./user\";\nimport commandeReducer from \"./commandes\";\nimport fournisseursReducer from \"./fournisseur\";\nimport emprunteurReducer from \"./emprunteurs\";\nimport vaccinateurReducer from \"./vaccinateurs\";\nimport categoriesReducer from \"./category\";\nimport basketReducer from \"../basket/reducers/basket\";\nimport approvisonnementReducer from \"../approvis/reducers/approvis\";\nimport toMagasinReducer from \"../tomagasin/reducers/tomagasin\";\nimport fromMagasinReducer from \"../frommagasin/reducers/frommagasin\";\nimport approvisReducer from \"./approvis\";\nimport stockReducer from \"./stock\";\nimport parametreReducer from \"./parametres\";\nimport checkoutReducer from \"../basket/reducers/checkout\";\nimport sortiedepotReducer from \"./sortiedepot\";\nimport fromdepotsReducer from \"../fromdepot/reducers/fromdepot\";\nimport { countReducer } from \"./undoTest\";\n\nexport default applyUndo(\n  combineReducers({\n    count: countReducer,\n    auth: userReducer,\n    products: productReducer,\n    categories: categoriesReducer,\n    fournisseurs: fournisseursReducer,\n    emprunters: emprunteurReducer,\n    vaccinateurs: vaccinateurReducer,\n    commandes: commandeReducer,\n    commandesclone: commandeReducer,\n    basket: basketReducer,\n    approvisionnements: approvisonnementReducer,\n    approvis: approvisReducer,\n    fromdepots: fromdepotsReducer,\n    stock: stockReducer,\n    checkout: checkoutReducer,\n    parametres: parametreReducer,\n    tomagasins: toMagasinReducer,\n    frommagasins: fromMagasinReducer,\n    sortiedepots: sortiedepotReducer,\n  })\n);\n","export const countReducer = (state = { counter: 0 }, action) => {\n    switch (action.type) {\n      case \"ADD\":\n        return {\n          ...state,\n          counter: state.counter + 1\n        };\n      default:\n        return state;\n    }\n  };","import {\n  ADD_QTY_ITEM,\n  ADD_TO_BASKET,\n  CLEAR_BASKET,\n  MINUS_QTY_ITEM,\n  REMOVE_FROM_BASKET,\n  SET_BASKET_ITEMS,\n  ADD_QTY_PORTION_ITEM,\n  MINUS_QTY_PORTION_ITEM,\n} from \"../constants\";\nconst indexSameProduct = (state, product) => {\n  const sameProduct = (p) => p.id === product.id;\n  return state.find(sameProduct);\n};\nexport default (state = [], action) => {\n  switch (action.type) {\n    case SET_BASKET_ITEMS:\n      return action.payload;\n    case ADD_TO_BASKET:\n      return state.some((product) => product.id === action.payload.id)\n        ? state\n        : [action.payload, ...state];\n    case REMOVE_FROM_BASKET:\n      return state.filter((product) => product.id !== action.payload);\n    case CLEAR_BASKET:\n      return [];\n    case ADD_QTY_ITEM:\n      /*   return state.map((product) => {\n        const filteredProduct = indexSameProduct(state, product);\n      }*/\n      return state.map((product) => {\n        if (product.id == action.payload.id) {\n          product.quantityParProduct += 1;\n        }\n        if (\n          product.id == action.payload.id &&\n          product.doseRestantEnMg >= product.doseDefault * 1000\n        ) {\n          product.doseRestantEnMg += product.doseDefault * 1000;\n        } else {\n          product.doseRestantEnMg = product.doseRestantEnMg;\n        }\n        return product;\n      });\n\n    case ADD_QTY_PORTION_ITEM:\n      return state.map((product) => {\n        if (product.id == action.payload.id) {\n          product.qttByCC += 1;\n        }\n        if (\n          product.id == action.payload.id &&\n          product.doseRestantEnMg >= product.doseDefault * 1000\n        ) {\n          product.doseRestantEnMg += 1000;\n        } else {\n          product.doseRestantEnMg = product.doseRestantEnMg;\n        }\n\n        return product;\n      });\n    case MINUS_QTY_ITEM:\n      return state.map((product) => {\n        if (product.id == action.payload.id) {\n          product.quantityParProduct -= 1;\n        }\n        if (\n          product.id == action.payload.id &&\n          product.doseRestantEnMg >= product.doseDefault * 1000\n        ) {\n          product.doseRestantEnMg -= product.doseDefault * 1000;\n        } else {\n          product.doseRestantEnMg = product.doseRestantEnMg;\n        }\n        return product;\n      });\n    case MINUS_QTY_PORTION_ITEM:\n      return state.map((product) => {\n        if (product.id == action.payload.id) {\n          product.qttByCC -= 1;\n        }\n        if (\n          product.id == action.payload.id &&\n          product.doseRestantEnMg >= product.doseDefault\n        ) {\n          product.doseRestantEnMg -= 1000;\n        } else {\n          product.doseRestantEnMg = product.doseRestantEnMg;\n        }\n        return product;\n      });\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_NUMBER_QTY_ITEM,\n  ADD_QTY_APPROV_ITEM,\n  ADD_QTY_NUMBER_APPROV_ITEM,\n  ADD_TO_APPROV,\n  CLEAR_APPROV,\n  MINUS_QTY_APPROV_ITEM,\n  REMOVE_FROM_APPROV,\n  SET_APPROV_ITEMS,\n} from \"../constants\";\n\nconst indexSameProduct = (state, product) => {\n  const sameProduct = (p) => p.id === product.id;\n  return state.find(sameProduct);\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = [], action) => {\n  switch (action.type) {\n    case SET_APPROV_ITEMS:\n      return action.payload;\n    case ADD_TO_APPROV:\n      return state.some((product) => product.id === action.payload.id)\n        ? state\n        : [action.payload, ...state];\n    case REMOVE_FROM_APPROV:\n      return state.filter((product) => product.id !== action.payload);\n    case CLEAR_APPROV:\n      return [];\n    case ADD_QTY_APPROV_ITEM:\n      return state.map((product) => {\n        if (product.id == action.payload.id) {\n          product.quantityParProduct += 1;\n        }\n        return product;\n      });\n\n    case ADD_NUMBER_QTY_ITEM:\n      return state.map((product) => {\n        if (product.id == action.payload.id) {\n          product.quantityParProduct =Number(action.payload.qtt);\n        }\n        return product;\n      });\n    case MINUS_QTY_APPROV_ITEM:\n      return state.map((product) => {\n        if (product.id == action.payload.id) {\n          product.quantityParProduct -= 1;\n        }\n        return product;\n      });\n      case ADD_QTY_NUMBER_APPROV_ITEM:\n        return state.map((product) => {\n          if (product.id === action.payload.id) {\n            product.quantityParProduct = action.payload.value;\n          }\n          return product;\n        });\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_QTY_FROM_DEPOT_ITEM,\n  ADD_FROM_DEPOT,\n  CLEAR_FROM_DEPOT,\n  MINUS_QTY_FROM_DEPOT_ITEM,\n  REMOVE_FROM_TO_DEPOT,\n  SET_FROM_DEPOT_ITEMS,\n  MINUS_QTY_PORTION_FROM_DEPOT_ITEM,\n  ADD_QTY_PORTION_FROM_DEPOT_ITEM,\n  ADD_QTY_NUMBER_FROM_DEPOT_ITEM,\n  ADD_QTY_PORTION_DOSE_UTA_NEW_FROM_DEPOT_ITEM,\n  MINUS_QTY_PORTION__DOSE_ITA_NEW_FROM_DEPOT_ITEM,\n  MINUS_QTY_PORTION__DOSE_SOVAX_FROM_DEPOT_ITEM,\n  ADD_QTY_PORTION_DOSE_SOVAX_FROM_DEPOT_ITEM,\n  ADD_QTY_PORTION_PHYTO_COND_FROM_DEPOT_ITEM,\n  MINUS_QTY_PORTION_PHYTO_COND_FROM_DEPOT_ITEM,\n} from \"../constants\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = [], action) => {\n  switch (action.type) {\n    case SET_FROM_DEPOT_ITEMS:\n      return action.payload;\n    case ADD_FROM_DEPOT:\n      return state.some((product) => product.id === action.payload.id)\n        ? state\n        : [action.payload, ...state];\n    case REMOVE_FROM_TO_DEPOT:\n      return state.filter((product) => product.id !== action.payload);\n    case CLEAR_FROM_DEPOT:\n      return [];\n    case ADD_QTY_FROM_DEPOT_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.quantityParProductDepot = Number(action.payload.qtt);\n        }\n        return product;\n      });\n\n    case ADD_QTY_PORTION_FROM_DEPOT_ITEM:\n      return state.map((product) => {\n        if (product.id == action.payload.id) {\n            product.qttByCCDepot = Number(action.payload.value);\n        }\n\n        return product;\n      });\n      id;\n    case ADD_QTY_NUMBER_FROM_DEPOT_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.quantityParProductDepot = Number(action.payload.value);\n        }\n        return product;\n      });\n    case ADD_QTY_PORTION_DOSE_UTA_NEW_FROM_DEPOT_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.qttyspecificmirrordepot = Number(action.payload.value);\n          product.qttByCCDepot = action.payload.value * 1 / 2;\n        }\n        return product;\n      });\n\n    case ADD_QTY_PORTION_DOSE_SOVAX_FROM_DEPOT_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.qttyspecificmirrordepot = Number(action.payload.value);\n          product.qttByCCDepot = (action.payload.value * 1) * 2;\n        }\n        return product;\n      });\n    case ADD_QTY_PORTION_PHYTO_COND_FROM_DEPOT_ITEM:\n      return state.map((product) => {\n        if (product.id == action.payload.id) {\n          product.qttByCCDepot = Number(action.payload.value);\n        }\n        return product;\n      });\n    case MINUS_QTY_PORTION_PHYTO_COND_FROM_DEPOT_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.qttByCCDepot -= action.payload.qttccpventedepot;\n        }\n        return product;\n      });\n    default:\n      return state;\n  }\n};\n","import { UPDATE_STOCK_REQUEST_FAIL, UPDATE_STOCK_REQUEST_SUCCESS } from \"../../constants/actions\";\n\nexport default (state = [], action) => {\n  const { type, payload } = action;\n  switch (action.type) {\n    case UPDATE_STOCK_REQUEST_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n      break;\n    case UPDATE_STOCK_REQUEST_FAIL:\n      return payload;\n      break;\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_QTY_MAGASIN_ITEM,\n  ADD_QTY_NUMBER_MAGASIN_ITEM,\n  ADD_TO_MAGASIN,\n  CLEAR_MAGASIN,\n  MINUS_QTY_MAGASIN_ITEM,\n  REMOVE_FROM_MAGASIN,\n  SET_TO_MAGASIN_ITEMS,\n} from \"../constants\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = [], action) => {\n  switch (action.type) {\n    case SET_TO_MAGASIN_ITEMS:\n      return action.payload;\n    case ADD_TO_MAGASIN:\n      return state.some((product) => product.id === action.payload.id)\n        ? state\n        : [action.payload, ...state];\n    case REMOVE_FROM_MAGASIN:\n      return state.filter((product) => product.id !== action.payload);\n    case CLEAR_MAGASIN:\n      return [];\n    case ADD_QTY_MAGASIN_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.quantityParProduct += 1;\n        }\n        return product;\n      });\n\n    // eslint-disable-next-line no-duplicate-case\n    case ADD_QTY_MAGASIN_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.quantityParProduct = Number(action.payload.qtt);\n        }\n        return product;\n      });\n    case MINUS_QTY_MAGASIN_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.quantityParProduct -= 1;\n        }\n        return product;\n      });\n      \n      case ADD_QTY_NUMBER_MAGASIN_ITEM:\n        return state.map((product) => {\n          if (product.id === action.payload.id) {\n            product.quantityParProduct = action.payload.value;\n          }\n          return product;\n        });\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_QTY_FROM_MAGASIN_ITEM,\n  ADD_FROM_MAGASIN,\n  CLEAR_FROM_MAGASIN,\n  MINUS_QTY_FROM_MAGASIN_ITEM,\n  REMOVE_FROM_TO_MAGASIN,\n  SET_FROM_MAGASIN_ITEMS,\n  MINUS_QTY_PORTION_FROM_MAGASIN_ITEM,\n  ADD_QTY_PORTION_FROM_MAGASIN_ITEM,\n  ADD_QTY_NUMBER_FROM_MAGASIN_ITEM,\n  ADD_QTY_PORTION_DOSE_UTA_NEW_FROM_MAGASIN_ITEM,\n  MINUS_QTY_PORTION__DOSE_ITA_NEW_FROM_MAGASIN_ITEM,\n  MINUS_QTY_PORTION__DOSE_SOVAX_FROM_MAGASIN_ITEM,\n  ADD_QTY_PORTION_DOSE_SOVAX_FROM_MAGASIN_ITEM,\n  ADD_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM,\n  MINUS_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM,\n} from \"../constants\";\nimport {\n  handleMinusProduct,\n  handleSoldQuantityCC,\n} from \"../../functions/function\";\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = [], action) => {\n  switch (action.type) {\n    case SET_FROM_MAGASIN_ITEMS:\n      return action.payload;\n    case ADD_FROM_MAGASIN:\n      return state.some((product) => product.id === action.payload.id)\n        ? state\n        : [action.payload, ...state];\n    case REMOVE_FROM_TO_MAGASIN:\n      return state.filter((product) => product.id !== action.payload);\n    case CLEAR_FROM_MAGASIN:\n      return [];\n    case ADD_QTY_FROM_MAGASIN_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.quantityParProduct = Number(action.payload.qtt);\n        }\n        return product;\n      });\n\n    case ADD_QTY_PORTION_FROM_MAGASIN_ITEM:\n      return state.map((product) => {\n        if (product.id == action.payload.id) {\n            product.qttByCC = Number(action.payload.value);\n        }\n\n        return product;\n      });\n      id;\n    case ADD_QTY_NUMBER_FROM_MAGASIN_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.quantityParProduct = Number(action.payload.value);\n        }\n        return product;\n      });\n    case ADD_QTY_PORTION_DOSE_UTA_NEW_FROM_MAGASIN_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.qttyspecificmirror = Number(action.payload.value);\n          product.qttByCC = action.payload.value * 1;\n        }\n        return product;\n      });\n\n    case ADD_QTY_PORTION_DOSE_SOVAX_FROM_MAGASIN_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.qttyspecificmirror = Number(action.payload.value);\n          product.qttByCC = (action.payload.value * 1) * 2;\n        }\n        return product;\n      });\n    case ADD_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM:\n      return state.map((product) => {\n        if (product.id == action.payload.id) {\n          product.qttByCC = Number(action.payload.value);\n        }\n        return product;\n      });\n    case MINUS_QTY_PORTION_PHYTO_COND_FROM_MAGASIN_ITEM:\n      return state.map((product) => {\n        if (product.id === action.payload.id) {\n          product.qttByCC -= action.payload.qttccpvente;\n        }\n        return product;\n      });\n    default:\n      return state;\n  }\n};\n","import { extendTheme } from '@chakra-ui/react';\nconst theme = extendTheme({\n  fontSizes: {\n    lg: '18px',\n  },\n  fonts: {\n    heading: 'Montserrat',\n    body: 'Montserrat',\n  },\n  styles: {\n    global: (props) => ({\n      \"html, body\": {\n        fontSize: \"sm\",\n        lineHeight: \"tall\",\n      },\n    }),\n  },\n  components: {\n    Button: {\n      baseStyle: {\n        fontWeight: 'bold',\n      },\n      sizes: {\n        xl: {\n          h: '56px',\n          fontSize: 'sm',\n          px: '13px',\n        },\n      },\n      variants: {\n        'with-shadow': {\n          bg: '#2c5282',\n        },\n        solid: props => ({\n          bg: props.colorMode === 'dark' ? '#2c5282' : '#2c5282',\n        }),\n      },\n    },\n  },\n});\nexport default theme;","import React from \"react\";\n/** @jsxImportSource @welldone-software/why-did-you-render */\nif (process.env.NODE_ENV === 'development') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render');\n  whyDidYouRender(React, {\n    trackAllPureComponents: true,\n    titleColor: \"green\",\n    diffNameColor: \"darkturquoise\"\n  });\n}\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Routes from \"./Routes\";\nimport { Provider } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { persistor, store } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport \"@fontsource/montserrat/400.css\";\nimport \"./@adminlte/adminlte/css/adminlte.css\";\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'react-dates/initialize';\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Routes />\n      </PersistGate>\n    </Provider>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}